{
        "fnBJDebugMsg": {
           "prefix": "fnBJDebugMsg",
           "body": "BJDebugMsg(${0:string msg})",
           "description": "fnBJDebugMsg",
           "scope": "source.vjass"
       },
        "fnRMinBJ": {
           "prefix": "fnRMinBJ",
           "body": "RMinBJ(${0:real b})",
           "description": "fnRMinBJ",
           "scope": "source.vjass"
       },
        "fnRMaxBJ": {
           "prefix": "fnRMaxBJ",
           "body": "RMaxBJ(${0:real b})",
           "description": "fnRMaxBJ",
           "scope": "source.vjass"
       },
        "fnRAbsBJ": {
           "prefix": "fnRAbsBJ",
           "body": "RAbsBJ(${0:real a})",
           "description": "fnRAbsBJ",
           "scope": "source.vjass"
       },
        "fnRSignBJ": {
           "prefix": "fnRSignBJ",
           "body": "RSignBJ(${0:real a})",
           "description": "fnRSignBJ",
           "scope": "source.vjass"
       },
        "fnIMinBJ": {
           "prefix": "fnIMinBJ",
           "body": "IMinBJ(${0:integer b})",
           "description": "fnIMinBJ",
           "scope": "source.vjass"
       },
        "fnIMaxBJ": {
           "prefix": "fnIMaxBJ",
           "body": "IMaxBJ(${0:integer b})",
           "description": "fnIMaxBJ",
           "scope": "source.vjass"
       },
        "fnIAbsBJ": {
           "prefix": "fnIAbsBJ",
           "body": "IAbsBJ(${0:integer a})",
           "description": "fnIAbsBJ",
           "scope": "source.vjass"
       },
        "fnISignBJ": {
           "prefix": "fnISignBJ",
           "body": "ISignBJ(${0:integer a})",
           "description": "fnISignBJ",
           "scope": "source.vjass"
       },
        "fnSinBJ": {
           "prefix": "fnSinBJ",
           "body": "SinBJ(${0:real degrees})",
           "description": "fnSinBJ",
           "scope": "source.vjass"
       },
        "fnCosBJ": {
           "prefix": "fnCosBJ",
           "body": "CosBJ(${0:real degrees})",
           "description": "fnCosBJ",
           "scope": "source.vjass"
       },
        "fnTanBJ": {
           "prefix": "fnTanBJ",
           "body": "TanBJ(${0:real degrees})",
           "description": "fnTanBJ",
           "scope": "source.vjass"
       },
        "fnAsinBJ": {
           "prefix": "fnAsinBJ",
           "body": "AsinBJ(${0:real degrees})",
           "description": "fnAsinBJ",
           "scope": "source.vjass"
       },
        "fnAcosBJ": {
           "prefix": "fnAcosBJ",
           "body": "AcosBJ(${0:real degrees})",
           "description": "fnAcosBJ",
           "scope": "source.vjass"
       },
        "fnAtanBJ": {
           "prefix": "fnAtanBJ",
           "body": "AtanBJ(${0:real degrees})",
           "description": "fnAtanBJ",
           "scope": "source.vjass"
       },
        "fnAtan2BJ": {
           "prefix": "fnAtan2BJ",
           "body": "Atan2BJ(${0:real x})",
           "description": "fnAtan2BJ",
           "scope": "source.vjass"
       },
        "fnAngleBetweenPoints": {
           "prefix": "fnAngleBetweenPoints",
           "body": "AngleBetweenPoints(${0:location locB})",
           "description": "fnAngleBetweenPoints",
           "scope": "source.vjass"
       },
        "fnDistanceBetweenPoints": {
           "prefix": "fnDistanceBetweenPoints",
           "body": "DistanceBetweenPoints(${0:location locB})",
           "description": "fnDistanceBetweenPoints",
           "scope": "source.vjass"
       },
        "fnPolarProjectionBJ": {
           "prefix": "fnPolarProjectionBJ",
           "body": "PolarProjectionBJ(${0:real angle},${1:location source})",
           "description": "fnPolarProjectionBJ",
           "scope": "source.vjass"
       },
        "fnGetRandomDirectionDeg": {
           "prefix": "fnGetRandomDirectionDeg",
           "body": "GetRandomDirectionDeg(${0:nothing})",
           "description": "fnGetRandomDirectionDeg",
           "scope": "source.vjass"
       },
        "fnGetRandomPercentageBJ": {
           "prefix": "fnGetRandomPercentageBJ",
           "body": "GetRandomPercentageBJ(${0:nothing})",
           "description": "fnGetRandomPercentageBJ",
           "scope": "source.vjass"
       },
        "fnGetRandomLocInRect": {
           "prefix": "fnGetRandomLocInRect",
           "body": "GetRandomLocInRect(${0:rect whichRect})",
           "description": "fnGetRandomLocInRect",
           "scope": "source.vjass"
       },
        "fnModuloInteger": {
           "prefix": "fnModuloInteger",
           "body": "ModuloInteger(${0:integer divisor})",
           "description": "fnModuloInteger",
           "scope": "source.vjass"
       },
        "fnModuloReal": {
           "prefix": "fnModuloReal",
           "body": "ModuloReal(${0:real divisor})",
           "description": "fnModuloReal",
           "scope": "source.vjass"
       },
        "fnOffsetLocation": {
           "prefix": "fnOffsetLocation",
           "body": "OffsetLocation(${0:real dy},${1:location loc})",
           "description": "fnOffsetLocation",
           "scope": "source.vjass"
       },
        "fnOffsetRectBJ": {
           "prefix": "fnOffsetRectBJ",
           "body": "OffsetRectBJ(${0:real dy},${1:rect r})",
           "description": "fnOffsetRectBJ",
           "scope": "source.vjass"
       },
        "fnRectFromCenterSizeBJ": {
           "prefix": "fnRectFromCenterSizeBJ",
           "body": "RectFromCenterSizeBJ(${0:real height},${1:location center})",
           "description": "fnRectFromCenterSizeBJ",
           "scope": "source.vjass"
       },
        "fnRectContainsCoords": {
           "prefix": "fnRectContainsCoords",
           "body": "RectContainsCoords(${0:real y},${1:rect r})",
           "description": "fnRectContainsCoords",
           "scope": "source.vjass"
       },
        "fnRectContainsLoc": {
           "prefix": "fnRectContainsLoc",
           "body": "RectContainsLoc(${0:location loc},${1:rect r})",
           "description": "fnRectContainsLoc",
           "scope": "source.vjass"
       },
        "fnRectContainsUnit": {
           "prefix": "fnRectContainsUnit",
           "body": "RectContainsUnit(${0:unit whichUnit},${1:rect r})",
           "description": "fnRectContainsUnit",
           "scope": "source.vjass"
       },
        "fnRectContainsItem": {
           "prefix": "fnRectContainsItem",
           "body": "RectContainsItem(${0:item whichItem},${1:rect r})",
           "description": "fnRectContainsItem",
           "scope": "source.vjass"
       },
        "fnConditionalTriggerExecute": {
           "prefix": "fnConditionalTriggerExecute",
           "body": "ConditionalTriggerExecute(${0:trigger trig})",
           "description": "fnConditionalTriggerExecute",
           "scope": "source.vjass"
       },
        "fnTriggerExecuteBJ": {
           "prefix": "fnTriggerExecuteBJ",
           "body": "TriggerExecuteBJ(${0:boolean checkConditions},${1:trigger trig})",
           "description": "fnTriggerExecuteBJ",
           "scope": "source.vjass"
       },
        "fnPostTriggerExecuteBJ": {
           "prefix": "fnPostTriggerExecuteBJ",
           "body": "PostTriggerExecuteBJ(${0:boolean checkConditions},${1:trigger trig})",
           "description": "fnPostTriggerExecuteBJ",
           "scope": "source.vjass"
       },
        "fnQueuedTriggerCheck": {
           "prefix": "fnQueuedTriggerCheck",
           "body": "QueuedTriggerCheck(${0:nothing})",
           "description": "fnQueuedTriggerCheck",
           "scope": "source.vjass"
       },
        "fnQueuedTriggerGetIndex": {
           "prefix": "fnQueuedTriggerGetIndex",
           "body": "QueuedTriggerGetIndex(${0:trigger trig})",
           "description": "fnQueuedTriggerGetIndex",
           "scope": "source.vjass"
       },
        "fnQueuedTriggerRemoveByIndex": {
           "prefix": "fnQueuedTriggerRemoveByIndex",
           "body": "QueuedTriggerRemoveByIndex(${0:integer trigIndex})",
           "description": "fnQueuedTriggerRemoveByIndex",
           "scope": "source.vjass"
       },
        "fnQueuedTriggerAttemptExec": {
           "prefix": "fnQueuedTriggerAttemptExec",
           "body": "QueuedTriggerAttemptExec(${0:nothing})",
           "description": "fnQueuedTriggerAttemptExec",
           "scope": "source.vjass"
       },
        "fnQueuedTriggerAddBJ": {
           "prefix": "fnQueuedTriggerAddBJ",
           "body": "QueuedTriggerAddBJ(${0:boolean checkConditions},${1:trigger trig})",
           "description": "fnQueuedTriggerAddBJ",
           "scope": "source.vjass"
       },
        "fnQueuedTriggerRemoveBJ": {
           "prefix": "fnQueuedTriggerRemoveBJ",
           "body": "QueuedTriggerRemoveBJ(${0:trigger trig})",
           "description": "fnQueuedTriggerRemoveBJ",
           "scope": "source.vjass"
       },
        "fnQueuedTriggerDoneBJ": {
           "prefix": "fnQueuedTriggerDoneBJ",
           "body": "QueuedTriggerDoneBJ(${0:nothing})",
           "description": "fnQueuedTriggerDoneBJ",
           "scope": "source.vjass"
       },
        "fnQueuedTriggerClearBJ": {
           "prefix": "fnQueuedTriggerClearBJ",
           "body": "QueuedTriggerClearBJ(${0:nothing})",
           "description": "fnQueuedTriggerClearBJ",
           "scope": "source.vjass"
       },
        "fnQueuedTriggerClearInactiveBJ": {
           "prefix": "fnQueuedTriggerClearInactiveBJ",
           "body": "QueuedTriggerClearInactiveBJ(${0:nothing})",
           "description": "fnQueuedTriggerClearInactiveBJ",
           "scope": "source.vjass"
       },
        "fnQueuedTriggerCountBJ": {
           "prefix": "fnQueuedTriggerCountBJ",
           "body": "QueuedTriggerCountBJ(${0:nothing})",
           "description": "fnQueuedTriggerCountBJ",
           "scope": "source.vjass"
       },
        "fnIsTriggerQueueEmptyBJ": {
           "prefix": "fnIsTriggerQueueEmptyBJ",
           "body": "IsTriggerQueueEmptyBJ(${0:nothing})",
           "description": "fnIsTriggerQueueEmptyBJ",
           "scope": "source.vjass"
       },
        "fnIsTriggerQueuedBJ": {
           "prefix": "fnIsTriggerQueuedBJ",
           "body": "IsTriggerQueuedBJ(${0:trigger trig})",
           "description": "fnIsTriggerQueuedBJ",
           "scope": "source.vjass"
       },
        "fnGetForLoopIndexA": {
           "prefix": "fnGetForLoopIndexA",
           "body": "GetForLoopIndexA(${0:nothing})",
           "description": "fnGetForLoopIndexA",
           "scope": "source.vjass"
       },
        "fnSetForLoopIndexA": {
           "prefix": "fnSetForLoopIndexA",
           "body": "SetForLoopIndexA(${0:integer newIndex})",
           "description": "fnSetForLoopIndexA",
           "scope": "source.vjass"
       },
        "fnGetForLoopIndexB": {
           "prefix": "fnGetForLoopIndexB",
           "body": "GetForLoopIndexB(${0:nothing})",
           "description": "fnGetForLoopIndexB",
           "scope": "source.vjass"
       },
        "fnSetForLoopIndexB": {
           "prefix": "fnSetForLoopIndexB",
           "body": "SetForLoopIndexB(${0:integer newIndex})",
           "description": "fnSetForLoopIndexB",
           "scope": "source.vjass"
       },
        "fnPolledWait": {
           "prefix": "fnPolledWait",
           "body": "PolledWait(${0:real duration})",
           "description": "fnPolledWait",
           "scope": "source.vjass"
       },
        "fnIntegerTertiaryOp": {
           "prefix": "fnIntegerTertiaryOp",
           "body": "IntegerTertiaryOp(${0:integer valueB},${1:boolean flag})",
           "description": "fnIntegerTertiaryOp",
           "scope": "source.vjass"
       },
        "fnDoNothing": {
           "prefix": "fnDoNothing",
           "body": "DoNothing(${0:nothing})",
           "description": "fnDoNothing",
           "scope": "source.vjass"
       },
        "fnCommentString": {
           "prefix": "fnCommentString",
           "body": "CommentString(${0:string commentString})",
           "description": "fnCommentString",
           "scope": "source.vjass"
       },
        "fnStringIdentity": {
           "prefix": "fnStringIdentity",
           "body": "StringIdentity(${0:string theString})",
           "description": "fnStringIdentity",
           "scope": "source.vjass"
       },
        "fnGetBooleanAnd": {
           "prefix": "fnGetBooleanAnd",
           "body": "GetBooleanAnd(${0:boolean valueB})",
           "description": "fnGetBooleanAnd",
           "scope": "source.vjass"
       },
        "fnGetBooleanOr": {
           "prefix": "fnGetBooleanOr",
           "body": "GetBooleanOr(${0:boolean valueB})",
           "description": "fnGetBooleanOr",
           "scope": "source.vjass"
       },
        "fnPercentToInt": {
           "prefix": "fnPercentToInt",
           "body": "PercentToInt(${0:real percentage},${1:integer max})",
           "description": "fnPercentToInt",
           "scope": "source.vjass"
       },
        "fnPercentTo255": {
           "prefix": "fnPercentTo255",
           "body": "PercentTo255(${0:real percentage})",
           "description": "fnPercentTo255",
           "scope": "source.vjass"
       },
        "fnGetTimeOfDay": {
           "prefix": "fnGetTimeOfDay",
           "body": "GetTimeOfDay(${0:nothing})",
           "description": "fnGetTimeOfDay",
           "scope": "source.vjass"
       },
        "fnSetTimeOfDay": {
           "prefix": "fnSetTimeOfDay",
           "body": "SetTimeOfDay(${0:real whatTime})",
           "description": "fnSetTimeOfDay",
           "scope": "source.vjass"
       },
        "fnSetTimeOfDayScalePercentBJ": {
           "prefix": "fnSetTimeOfDayScalePercentBJ",
           "body": "SetTimeOfDayScalePercentBJ(${0:real scalePercent})",
           "description": "fnSetTimeOfDayScalePercentBJ",
           "scope": "source.vjass"
       },
        "fnGetTimeOfDayScalePercentBJ": {
           "prefix": "fnGetTimeOfDayScalePercentBJ",
           "body": "GetTimeOfDayScalePercentBJ(${0:nothing})",
           "description": "fnGetTimeOfDayScalePercentBJ",
           "scope": "source.vjass"
       },
        "fnPlaySound": {
           "prefix": "fnPlaySound",
           "body": "PlaySound(${0:string soundName})",
           "description": "fnPlaySound",
           "scope": "source.vjass"
       },
        "fnCompareLocationsBJ": {
           "prefix": "fnCompareLocationsBJ",
           "body": "CompareLocationsBJ(${0:location B})",
           "description": "fnCompareLocationsBJ",
           "scope": "source.vjass"
       },
        "fnCompareRectsBJ": {
           "prefix": "fnCompareRectsBJ",
           "body": "CompareRectsBJ(${0:rect B})",
           "description": "fnCompareRectsBJ",
           "scope": "source.vjass"
       },
        "fnGetRectFromCircleBJ": {
           "prefix": "fnGetRectFromCircleBJ",
           "body": "GetRectFromCircleBJ(${0:real radius},${1:location center})",
           "description": "fnGetRectFromCircleBJ",
           "scope": "source.vjass"
       },
        "fnGetCurrentCameraSetup": {
           "prefix": "fnGetCurrentCameraSetup",
           "body": "GetCurrentCameraSetup(${0:nothing})",
           "description": "fnGetCurrentCameraSetup",
           "scope": "source.vjass"
       },
        "fnCameraSetupApplyForPlayer": {
           "prefix": "fnCameraSetupApplyForPlayer",
           "body": "CameraSetupApplyForPlayer(${0:real duration},${1:camerasetup whichSetup},${2:boolean doPan},${3:player whichPlayer})",
           "description": "fnCameraSetupApplyForPlayer",
           "scope": "source.vjass"
       },
        "fnCameraSetupGetFieldSwap": {
           "prefix": "fnCameraSetupGetFieldSwap",
           "body": "CameraSetupGetFieldSwap(${0:camerafield whichField},${1:camerasetup whichSetup})",
           "description": "fnCameraSetupGetFieldSwap",
           "scope": "source.vjass"
       },
        "fnSetCameraFieldForPlayer": {
           "prefix": "fnSetCameraFieldForPlayer",
           "body": "SetCameraFieldForPlayer(${0:camerafield whichField},${1:player whichPlayer},${2:real duration})",
           "description": "fnSetCameraFieldForPlayer",
           "scope": "source.vjass"
       },
        "fnSetCameraTargetControllerNoZForPlayer": {
           "prefix": "fnSetCameraTargetControllerNoZForPlayer",
           "body": "SetCameraTargetControllerNoZForPlayer(${0:real yoffset},${1:player whichPlayer},${2:boolean inheritOrientation},${3:unit whichUnit})",
           "description": "fnSetCameraTargetControllerNoZForPlayer",
           "scope": "source.vjass"
       },
        "fnSetCameraPositionForPlayer": {
           "prefix": "fnSetCameraPositionForPlayer",
           "body": "SetCameraPositionForPlayer(${0:real y},${1:player whichPlayer})",
           "description": "fnSetCameraPositionForPlayer",
           "scope": "source.vjass"
       },
        "fnSetCameraPositionLocForPlayer": {
           "prefix": "fnSetCameraPositionLocForPlayer",
           "body": "SetCameraPositionLocForPlayer(${0:player whichPlayer},${1:location loc})",
           "description": "fnSetCameraPositionLocForPlayer",
           "scope": "source.vjass"
       },
        "fnRotateCameraAroundLocBJ": {
           "prefix": "fnRotateCameraAroundLocBJ",
           "body": "RotateCameraAroundLocBJ(${0:real duration},${1:player whichPlayer},${2:location loc})",
           "description": "fnRotateCameraAroundLocBJ",
           "scope": "source.vjass"
       },
        "fnPanCameraToForPlayer": {
           "prefix": "fnPanCameraToForPlayer",
           "body": "PanCameraToForPlayer(${0:real y},${1:player whichPlayer})",
           "description": "fnPanCameraToForPlayer",
           "scope": "source.vjass"
       },
        "fnPanCameraToLocForPlayer": {
           "prefix": "fnPanCameraToLocForPlayer",
           "body": "PanCameraToLocForPlayer(${0:player whichPlayer},${1:location loc})",
           "description": "fnPanCameraToLocForPlayer",
           "scope": "source.vjass"
       },
        "fnPanCameraToTimedForPlayer": {
           "prefix": "fnPanCameraToTimedForPlayer",
           "body": "PanCameraToTimedForPlayer(${0:real duration},${1:player whichPlayer})",
           "description": "fnPanCameraToTimedForPlayer",
           "scope": "source.vjass"
       },
        "fnPanCameraToTimedLocForPlayer": {
           "prefix": "fnPanCameraToTimedLocForPlayer",
           "body": "PanCameraToTimedLocForPlayer(${0:real duration},${1:player whichPlayer},${2:location loc})",
           "description": "fnPanCameraToTimedLocForPlayer",
           "scope": "source.vjass"
       },
        "fnPanCameraToTimedLocWithZForPlayer": {
           "prefix": "fnPanCameraToTimedLocWithZForPlayer",
           "body": "PanCameraToTimedLocWithZForPlayer(${0:real duration},${1:player whichPlayer},${2:location loc})",
           "description": "fnPanCameraToTimedLocWithZForPlayer",
           "scope": "source.vjass"
       },
        "fnSmartCameraPanBJ": {
           "prefix": "fnSmartCameraPanBJ",
           "body": "SmartCameraPanBJ(${0:real duration},${1:player whichPlayer},${2:location loc})",
           "description": "fnSmartCameraPanBJ",
           "scope": "source.vjass"
       },
        "fnSetCinematicCameraForPlayer": {
           "prefix": "fnSetCinematicCameraForPlayer",
           "body": "SetCinematicCameraForPlayer(${0:player whichPlayer},${1:string cameraModelFile})",
           "description": "fnSetCinematicCameraForPlayer",
           "scope": "source.vjass"
       },
        "fnResetToGameCameraForPlayer": {
           "prefix": "fnResetToGameCameraForPlayer",
           "body": "ResetToGameCameraForPlayer(${0:real duration},${1:player whichPlayer})",
           "description": "fnResetToGameCameraForPlayer",
           "scope": "source.vjass"
       },
        "fnCameraSetSourceNoiseForPlayer": {
           "prefix": "fnCameraSetSourceNoiseForPlayer",
           "body": "CameraSetSourceNoiseForPlayer(${0:real velocity},${1:player whichPlayer})",
           "description": "fnCameraSetSourceNoiseForPlayer",
           "scope": "source.vjass"
       },
        "fnCameraSetTargetNoiseForPlayer": {
           "prefix": "fnCameraSetTargetNoiseForPlayer",
           "body": "CameraSetTargetNoiseForPlayer(${0:real velocity},${1:player whichPlayer})",
           "description": "fnCameraSetTargetNoiseForPlayer",
           "scope": "source.vjass"
       },
        "fnCameraSetEQNoiseForPlayer": {
           "prefix": "fnCameraSetEQNoiseForPlayer",
           "body": "CameraSetEQNoiseForPlayer(${0:real magnitude},${1:player whichPlayer})",
           "description": "fnCameraSetEQNoiseForPlayer",
           "scope": "source.vjass"
       },
        "fnCameraClearNoiseForPlayer": {
           "prefix": "fnCameraClearNoiseForPlayer",
           "body": "CameraClearNoiseForPlayer(${0:player whichPlayer})",
           "description": "fnCameraClearNoiseForPlayer",
           "scope": "source.vjass"
       },
        "fnGetCurrentCameraBoundsMapRectBJ": {
           "prefix": "fnGetCurrentCameraBoundsMapRectBJ",
           "body": "GetCurrentCameraBoundsMapRectBJ(${0:nothing})",
           "description": "fnGetCurrentCameraBoundsMapRectBJ",
           "scope": "source.vjass"
       },
        "fnGetCameraBoundsMapRect": {
           "prefix": "fnGetCameraBoundsMapRect",
           "body": "GetCameraBoundsMapRect(${0:nothing})",
           "description": "fnGetCameraBoundsMapRect",
           "scope": "source.vjass"
       },
        "fnGetPlayableMapRect": {
           "prefix": "fnGetPlayableMapRect",
           "body": "GetPlayableMapRect(${0:nothing})",
           "description": "fnGetPlayableMapRect",
           "scope": "source.vjass"
       },
        "fnGetEntireMapRect": {
           "prefix": "fnGetEntireMapRect",
           "body": "GetEntireMapRect(${0:nothing})",
           "description": "fnGetEntireMapRect",
           "scope": "source.vjass"
       },
        "fnSetCameraBoundsToRect": {
           "prefix": "fnSetCameraBoundsToRect",
           "body": "SetCameraBoundsToRect(${0:rect r})",
           "description": "fnSetCameraBoundsToRect",
           "scope": "source.vjass"
       },
        "fnSetCameraBoundsToRectForPlayerBJ": {
           "prefix": "fnSetCameraBoundsToRectForPlayerBJ",
           "body": "SetCameraBoundsToRectForPlayerBJ(${0:player whichPlayer},${1:rect r})",
           "description": "fnSetCameraBoundsToRectForPlayerBJ",
           "scope": "source.vjass"
       },
        "fnAdjustCameraBoundsBJ": {
           "prefix": "fnAdjustCameraBoundsBJ",
           "body": "AdjustCameraBoundsBJ(${0:real dySouth},${1:integer adjustMethod})",
           "description": "fnAdjustCameraBoundsBJ",
           "scope": "source.vjass"
       },
        "fnAdjustCameraBoundsForPlayerBJ": {
           "prefix": "fnAdjustCameraBoundsForPlayerBJ",
           "body": "AdjustCameraBoundsForPlayerBJ(${0:real dySouth},${1:integer adjustMethod},${2:player whichPlayer})",
           "description": "fnAdjustCameraBoundsForPlayerBJ",
           "scope": "source.vjass"
       },
        "fnSetCameraQuickPositionForPlayer": {
           "prefix": "fnSetCameraQuickPositionForPlayer",
           "body": "SetCameraQuickPositionForPlayer(${0:real y},${1:player whichPlayer})",
           "description": "fnSetCameraQuickPositionForPlayer",
           "scope": "source.vjass"
       },
        "fnSetCameraQuickPositionLocForPlayer": {
           "prefix": "fnSetCameraQuickPositionLocForPlayer",
           "body": "SetCameraQuickPositionLocForPlayer(${0:player whichPlayer},${1:location loc})",
           "description": "fnSetCameraQuickPositionLocForPlayer",
           "scope": "source.vjass"
       },
        "fnSetCameraQuickPositionLoc": {
           "prefix": "fnSetCameraQuickPositionLoc",
           "body": "SetCameraQuickPositionLoc(${0:location loc})",
           "description": "fnSetCameraQuickPositionLoc",
           "scope": "source.vjass"
       },
        "fnStopCameraForPlayerBJ": {
           "prefix": "fnStopCameraForPlayerBJ",
           "body": "StopCameraForPlayerBJ(${0:player whichPlayer})",
           "description": "fnStopCameraForPlayerBJ",
           "scope": "source.vjass"
       },
        "fnSetCameraOrientControllerForPlayerBJ": {
           "prefix": "fnSetCameraOrientControllerForPlayerBJ",
           "body": "SetCameraOrientControllerForPlayerBJ(${0:real yoffset},${1:player whichPlayer},${2:unit whichUnit})",
           "description": "fnSetCameraOrientControllerForPlayerBJ",
           "scope": "source.vjass"
       },
        "fnCameraSetSmoothingFactorBJ": {
           "prefix": "fnCameraSetSmoothingFactorBJ",
           "body": "CameraSetSmoothingFactorBJ(${0:real factor})",
           "description": "fnCameraSetSmoothingFactorBJ",
           "scope": "source.vjass"
       },
        "fnCameraResetSmoothingFactorBJ": {
           "prefix": "fnCameraResetSmoothingFactorBJ",
           "body": "CameraResetSmoothingFactorBJ(${0:nothing})",
           "description": "fnCameraResetSmoothingFactorBJ",
           "scope": "source.vjass"
       },
        "fnDisplayTextToForce": {
           "prefix": "fnDisplayTextToForce",
           "body": "DisplayTextToForce(${0:force toForce},${1:string message})",
           "description": "fnDisplayTextToForce",
           "scope": "source.vjass"
       },
        "fnDisplayTimedTextToForce": {
           "prefix": "fnDisplayTimedTextToForce",
           "body": "DisplayTimedTextToForce(${0:real duration},${1:force toForce},${2:string message})",
           "description": "fnDisplayTimedTextToForce",
           "scope": "source.vjass"
       },
        "fnClearTextMessagesBJ": {
           "prefix": "fnClearTextMessagesBJ",
           "body": "ClearTextMessagesBJ(${0:force toForce})",
           "description": "fnClearTextMessagesBJ",
           "scope": "source.vjass"
       },
        "fnSubStringBJ": {
           "prefix": "fnSubStringBJ",
           "body": "SubStringBJ(${0:integer end},${1:string source})",
           "description": "fnSubStringBJ",
           "scope": "source.vjass"
       },
        "fnGetHandleIdBJ": {
           "prefix": "fnGetHandleIdBJ",
           "body": "GetHandleIdBJ(${0:handle h})",
           "description": "fnGetHandleIdBJ",
           "scope": "source.vjass"
       },
        "fnStringHashBJ": {
           "prefix": "fnStringHashBJ",
           "body": "StringHashBJ(${0:string s})",
           "description": "fnStringHashBJ",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterTimerEventPeriodic": {
           "prefix": "fnTriggerRegisterTimerEventPeriodic",
           "body": "TriggerRegisterTimerEventPeriodic(${0:real timeout},${1:trigger trig})",
           "description": "fnTriggerRegisterTimerEventPeriodic",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterTimerEventSingle": {
           "prefix": "fnTriggerRegisterTimerEventSingle",
           "body": "TriggerRegisterTimerEventSingle(${0:real timeout},${1:trigger trig})",
           "description": "fnTriggerRegisterTimerEventSingle",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterTimerExpireEventBJ": {
           "prefix": "fnTriggerRegisterTimerExpireEventBJ",
           "body": "TriggerRegisterTimerExpireEventBJ(${0:trigger trig},${1:timer t})",
           "description": "fnTriggerRegisterTimerExpireEventBJ",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterPlayerUnitEventSimple": {
           "prefix": "fnTriggerRegisterPlayerUnitEventSimple",
           "body": "TriggerRegisterPlayerUnitEventSimple(${0:playerunitevent whichEvent},${1:player whichPlayer},${2:trigger trig})",
           "description": "fnTriggerRegisterPlayerUnitEventSimple",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterAnyUnitEventBJ": {
           "prefix": "fnTriggerRegisterAnyUnitEventBJ",
           "body": "TriggerRegisterAnyUnitEventBJ(${0:playerunitevent whichEvent},${1:trigger trig})",
           "description": "fnTriggerRegisterAnyUnitEventBJ",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterPlayerSelectionEventBJ": {
           "prefix": "fnTriggerRegisterPlayerSelectionEventBJ",
           "body": "TriggerRegisterPlayerSelectionEventBJ(${0:boolean selected},${1:player whichPlayer},${2:trigger trig})",
           "description": "fnTriggerRegisterPlayerSelectionEventBJ",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterPlayerKeyEventBJ": {
           "prefix": "fnTriggerRegisterPlayerKeyEventBJ",
           "body": "TriggerRegisterPlayerKeyEventBJ(${0:player whichPlayer},${1:trigger trig},${2:integer keKey})",
           "description": "fnTriggerRegisterPlayerKeyEventBJ",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterPlayerEventVictory": {
           "prefix": "fnTriggerRegisterPlayerEventVictory",
           "body": "TriggerRegisterPlayerEventVictory(${0:player whichPlayer},${1:trigger trig})",
           "description": "fnTriggerRegisterPlayerEventVictory",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterPlayerEventDefeat": {
           "prefix": "fnTriggerRegisterPlayerEventDefeat",
           "body": "TriggerRegisterPlayerEventDefeat(${0:player whichPlayer},${1:trigger trig})",
           "description": "fnTriggerRegisterPlayerEventDefeat",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterPlayerEventLeave": {
           "prefix": "fnTriggerRegisterPlayerEventLeave",
           "body": "TriggerRegisterPlayerEventLeave(${0:player whichPlayer},${1:trigger trig})",
           "description": "fnTriggerRegisterPlayerEventLeave",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterPlayerEventAllianceChanged": {
           "prefix": "fnTriggerRegisterPlayerEventAllianceChanged",
           "body": "TriggerRegisterPlayerEventAllianceChanged(${0:player whichPlayer},${1:trigger trig})",
           "description": "fnTriggerRegisterPlayerEventAllianceChanged",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterPlayerEventEndCinematic": {
           "prefix": "fnTriggerRegisterPlayerEventEndCinematic",
           "body": "TriggerRegisterPlayerEventEndCinematic(${0:player whichPlayer},${1:trigger trig})",
           "description": "fnTriggerRegisterPlayerEventEndCinematic",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterGameStateEventTimeOfDay": {
           "prefix": "fnTriggerRegisterGameStateEventTimeOfDay",
           "body": "TriggerRegisterGameStateEventTimeOfDay(${0:real limitval},${1:trigger trig},${2:limitop opcode})",
           "description": "fnTriggerRegisterGameStateEventTimeOfDay",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterEnterRegionSimple": {
           "prefix": "fnTriggerRegisterEnterRegionSimple",
           "body": "TriggerRegisterEnterRegionSimple(${0:region whichRegion},${1:trigger trig})",
           "description": "fnTriggerRegisterEnterRegionSimple",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterLeaveRegionSimple": {
           "prefix": "fnTriggerRegisterLeaveRegionSimple",
           "body": "TriggerRegisterLeaveRegionSimple(${0:region whichRegion},${1:trigger trig})",
           "description": "fnTriggerRegisterLeaveRegionSimple",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterEnterRectSimple": {
           "prefix": "fnTriggerRegisterEnterRectSimple",
           "body": "TriggerRegisterEnterRectSimple(${0:trigger trig},${1:rect r})",
           "description": "fnTriggerRegisterEnterRectSimple",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterLeaveRectSimple": {
           "prefix": "fnTriggerRegisterLeaveRectSimple",
           "body": "TriggerRegisterLeaveRectSimple(${0:trigger trig},${1:rect r})",
           "description": "fnTriggerRegisterLeaveRectSimple",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterDistanceBetweenUnits": {
           "prefix": "fnTriggerRegisterDistanceBetweenUnits",
           "body": "TriggerRegisterDistanceBetweenUnits(${0:real range},${1:trigger trig},${2:boolexpr condition},${3:unit whichUnit})",
           "description": "fnTriggerRegisterDistanceBetweenUnits",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterUnitInRangeSimple": {
           "prefix": "fnTriggerRegisterUnitInRangeSimple",
           "body": "TriggerRegisterUnitInRangeSimple(${0:real range},${1:trigger trig},${2:unit whichUnit})",
           "description": "fnTriggerRegisterUnitInRangeSimple",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterUnitLifeEvent": {
           "prefix": "fnTriggerRegisterUnitLifeEvent",
           "body": "TriggerRegisterUnitLifeEvent(${0:real limitval},${1:trigger trig},${2:limitop opcode},${3:unit whichUnit})",
           "description": "fnTriggerRegisterUnitLifeEvent",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterUnitManaEvent": {
           "prefix": "fnTriggerRegisterUnitManaEvent",
           "body": "TriggerRegisterUnitManaEvent(${0:real limitval},${1:trigger trig},${2:limitop opcode},${3:unit whichUnit})",
           "description": "fnTriggerRegisterUnitManaEvent",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterDialogEventBJ": {
           "prefix": "fnTriggerRegisterDialogEventBJ",
           "body": "TriggerRegisterDialogEventBJ(${0:trigger trig},${1:dialog whichDialog})",
           "description": "fnTriggerRegisterDialogEventBJ",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterShowSkillEventBJ": {
           "prefix": "fnTriggerRegisterShowSkillEventBJ",
           "body": "TriggerRegisterShowSkillEventBJ(${0:trigger trig})",
           "description": "fnTriggerRegisterShowSkillEventBJ",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterBuildSubmenuEventBJ": {
           "prefix": "fnTriggerRegisterBuildSubmenuEventBJ",
           "body": "TriggerRegisterBuildSubmenuEventBJ(${0:trigger trig})",
           "description": "fnTriggerRegisterBuildSubmenuEventBJ",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterGameLoadedEventBJ": {
           "prefix": "fnTriggerRegisterGameLoadedEventBJ",
           "body": "TriggerRegisterGameLoadedEventBJ(${0:trigger trig})",
           "description": "fnTriggerRegisterGameLoadedEventBJ",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterGameSavedEventBJ": {
           "prefix": "fnTriggerRegisterGameSavedEventBJ",
           "body": "TriggerRegisterGameSavedEventBJ(${0:trigger trig})",
           "description": "fnTriggerRegisterGameSavedEventBJ",
           "scope": "source.vjass"
       },
        "fnRegisterDestDeathInRegionEnum": {
           "prefix": "fnRegisterDestDeathInRegionEnum",
           "body": "RegisterDestDeathInRegionEnum(${0:nothing})",
           "description": "fnRegisterDestDeathInRegionEnum",
           "scope": "source.vjass"
       },
        "fnTriggerRegisterDestDeathInRegionEvent": {
           "prefix": "fnTriggerRegisterDestDeathInRegionEvent",
           "body": "TriggerRegisterDestDeathInRegionEvent(${0:trigger trig},${1:rect r})",
           "description": "fnTriggerRegisterDestDeathInRegionEvent",
           "scope": "source.vjass"
       },
        "fnAddWeatherEffectSaveLast": {
           "prefix": "fnAddWeatherEffectSaveLast",
           "body": "AddWeatherEffectSaveLast(${0:integer effectID},${1:rect where})",
           "description": "fnAddWeatherEffectSaveLast",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedWeatherEffect": {
           "prefix": "fnGetLastCreatedWeatherEffect",
           "body": "GetLastCreatedWeatherEffect(${0:nothing})",
           "description": "fnGetLastCreatedWeatherEffect",
           "scope": "source.vjass"
       },
        "fnRemoveWeatherEffectBJ": {
           "prefix": "fnRemoveWeatherEffectBJ",
           "body": "RemoveWeatherEffectBJ(${0:weathereffect whichWeatherEffect})",
           "description": "fnRemoveWeatherEffectBJ",
           "scope": "source.vjass"
       },
        "fnTerrainDeformationCraterBJ": {
           "prefix": "fnTerrainDeformationCraterBJ",
           "body": "TerrainDeformationCraterBJ(${0:real depth},${1:boolean permanent},${2:location where})",
           "description": "fnTerrainDeformationCraterBJ",
           "scope": "source.vjass"
       },
        "fnTerrainDeformationRippleBJ": {
           "prefix": "fnTerrainDeformationRippleBJ",
           "body": "TerrainDeformationRippleBJ(${0:real waveWidth},${1:boolean limitNeg},${2:location where})",
           "description": "fnTerrainDeformationRippleBJ",
           "scope": "source.vjass"
       },
        "fnTerrainDeformationWaveBJ": {
           "prefix": "fnTerrainDeformationWaveBJ",
           "body": "TerrainDeformationWaveBJ(${0:real trailDelay},${1:location target})",
           "description": "fnTerrainDeformationWaveBJ",
           "scope": "source.vjass"
       },
        "fnTerrainDeformationRandomBJ": {
           "prefix": "fnTerrainDeformationRandomBJ",
           "body": "TerrainDeformationRandomBJ(${0:real updateInterval},${1:location where})",
           "description": "fnTerrainDeformationRandomBJ",
           "scope": "source.vjass"
       },
        "fnTerrainDeformationStopBJ": {
           "prefix": "fnTerrainDeformationStopBJ",
           "body": "TerrainDeformationStopBJ(${0:real duration},${1:terraindeformation deformation})",
           "description": "fnTerrainDeformationStopBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedTerrainDeformation": {
           "prefix": "fnGetLastCreatedTerrainDeformation",
           "body": "GetLastCreatedTerrainDeformation(${0:nothing})",
           "description": "fnGetLastCreatedTerrainDeformation",
           "scope": "source.vjass"
       },
        "fnAddLightningLoc": {
           "prefix": "fnAddLightningLoc",
           "body": "AddLightningLoc(${0:string codeName},${1:location where2})",
           "description": "fnAddLightningLoc",
           "scope": "source.vjass"
       },
        "fnDestroyLightningBJ": {
           "prefix": "fnDestroyLightningBJ",
           "body": "DestroyLightningBJ(${0:lightning whichBolt})",
           "description": "fnDestroyLightningBJ",
           "scope": "source.vjass"
       },
        "fnMoveLightningLoc": {
           "prefix": "fnMoveLightningLoc",
           "body": "MoveLightningLoc(${0:location where2},${1:lightning whichBolt})",
           "description": "fnMoveLightningLoc",
           "scope": "source.vjass"
       },
        "fnGetLightningColorABJ": {
           "prefix": "fnGetLightningColorABJ",
           "body": "GetLightningColorABJ(${0:lightning whichBolt})",
           "description": "fnGetLightningColorABJ",
           "scope": "source.vjass"
       },
        "fnGetLightningColorRBJ": {
           "prefix": "fnGetLightningColorRBJ",
           "body": "GetLightningColorRBJ(${0:lightning whichBolt})",
           "description": "fnGetLightningColorRBJ",
           "scope": "source.vjass"
       },
        "fnGetLightningColorGBJ": {
           "prefix": "fnGetLightningColorGBJ",
           "body": "GetLightningColorGBJ(${0:lightning whichBolt})",
           "description": "fnGetLightningColorGBJ",
           "scope": "source.vjass"
       },
        "fnGetLightningColorBBJ": {
           "prefix": "fnGetLightningColorBBJ",
           "body": "GetLightningColorBBJ(${0:lightning whichBolt})",
           "description": "fnGetLightningColorBBJ",
           "scope": "source.vjass"
       },
        "fnSetLightningColorBJ": {
           "prefix": "fnSetLightningColorBJ",
           "body": "SetLightningColorBJ(${0:real a},${1:lightning whichBolt})",
           "description": "fnSetLightningColorBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedLightningBJ": {
           "prefix": "fnGetLastCreatedLightningBJ",
           "body": "GetLastCreatedLightningBJ(${0:nothing})",
           "description": "fnGetLastCreatedLightningBJ",
           "scope": "source.vjass"
       },
        "fnGetAbilityEffectBJ": {
           "prefix": "fnGetAbilityEffectBJ",
           "body": "GetAbilityEffectBJ(${0:integer index},${1:effecttype t})",
           "description": "fnGetAbilityEffectBJ",
           "scope": "source.vjass"
       },
        "fnGetAbilitySoundBJ": {
           "prefix": "fnGetAbilitySoundBJ",
           "body": "GetAbilitySoundBJ(${0:integer abilcode},${1:soundtype t})",
           "description": "fnGetAbilitySoundBJ",
           "scope": "source.vjass"
       },
        "fnGetTerrainCliffLevelBJ": {
           "prefix": "fnGetTerrainCliffLevelBJ",
           "body": "GetTerrainCliffLevelBJ(${0:location where})",
           "description": "fnGetTerrainCliffLevelBJ",
           "scope": "source.vjass"
       },
        "fnGetTerrainTypeBJ": {
           "prefix": "fnGetTerrainTypeBJ",
           "body": "GetTerrainTypeBJ(${0:location where})",
           "description": "fnGetTerrainTypeBJ",
           "scope": "source.vjass"
       },
        "fnGetTerrainVarianceBJ": {
           "prefix": "fnGetTerrainVarianceBJ",
           "body": "GetTerrainVarianceBJ(${0:location where})",
           "description": "fnGetTerrainVarianceBJ",
           "scope": "source.vjass"
       },
        "fnSetTerrainTypeBJ": {
           "prefix": "fnSetTerrainTypeBJ",
           "body": "SetTerrainTypeBJ(${0:integer shape},${1:location where})",
           "description": "fnSetTerrainTypeBJ",
           "scope": "source.vjass"
       },
        "fnIsTerrainPathableBJ": {
           "prefix": "fnIsTerrainPathableBJ",
           "body": "IsTerrainPathableBJ(${0:pathingtype t},${1:location where})",
           "description": "fnIsTerrainPathableBJ",
           "scope": "source.vjass"
       },
        "fnSetTerrainPathableBJ": {
           "prefix": "fnSetTerrainPathableBJ",
           "body": "SetTerrainPathableBJ(${0:pathingtype t},${1:boolean flag},${2:location where})",
           "description": "fnSetTerrainPathableBJ",
           "scope": "source.vjass"
       },
        "fnSetWaterBaseColorBJ": {
           "prefix": "fnSetWaterBaseColorBJ",
           "body": "SetWaterBaseColorBJ(${0:real transparency})",
           "description": "fnSetWaterBaseColorBJ",
           "scope": "source.vjass"
       },
        "fnCreateFogModifierRectSimple": {
           "prefix": "fnCreateFogModifierRectSimple",
           "body": "CreateFogModifierRectSimple(${0:player whichPlayer},${1:boolean afterUnits},${2:rect r},${3:fogstate whichFogState})",
           "description": "fnCreateFogModifierRectSimple",
           "scope": "source.vjass"
       },
        "fnCreateFogModifierRadiusLocSimple": {
           "prefix": "fnCreateFogModifierRadiusLocSimple",
           "body": "CreateFogModifierRadiusLocSimple(${0:real radius},${1:player whichPlayer},${2:boolean afterUnits},${3:location center},${4:fogstate whichFogState})",
           "description": "fnCreateFogModifierRadiusLocSimple",
           "scope": "source.vjass"
       },
        "fnCreateFogModifierRectBJ": {
           "prefix": "fnCreateFogModifierRectBJ",
           "body": "CreateFogModifierRectBJ(${0:player whichPlayer},${1:boolean enabled},${2:rect r},${3:fogstate whichFogState})",
           "description": "fnCreateFogModifierRectBJ",
           "scope": "source.vjass"
       },
        "fnCreateFogModifierRadiusLocBJ": {
           "prefix": "fnCreateFogModifierRadiusLocBJ",
           "body": "CreateFogModifierRadiusLocBJ(${0:real radius},${1:player whichPlayer},${2:boolean enabled},${3:location center},${4:fogstate whichFogState})",
           "description": "fnCreateFogModifierRadiusLocBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedFogModifier": {
           "prefix": "fnGetLastCreatedFogModifier",
           "body": "GetLastCreatedFogModifier(${0:nothing})",
           "description": "fnGetLastCreatedFogModifier",
           "scope": "source.vjass"
       },
        "fnFogEnableOn": {
           "prefix": "fnFogEnableOn",
           "body": "FogEnableOn(${0:nothing})",
           "description": "fnFogEnableOn",
           "scope": "source.vjass"
       },
        "fnFogEnableOff": {
           "prefix": "fnFogEnableOff",
           "body": "FogEnableOff(${0:nothing})",
           "description": "fnFogEnableOff",
           "scope": "source.vjass"
       },
        "fnFogMaskEnableOn": {
           "prefix": "fnFogMaskEnableOn",
           "body": "FogMaskEnableOn(${0:nothing})",
           "description": "fnFogMaskEnableOn",
           "scope": "source.vjass"
       },
        "fnFogMaskEnableOff": {
           "prefix": "fnFogMaskEnableOff",
           "body": "FogMaskEnableOff(${0:nothing})",
           "description": "fnFogMaskEnableOff",
           "scope": "source.vjass"
       },
        "fnUseTimeOfDayBJ": {
           "prefix": "fnUseTimeOfDayBJ",
           "body": "UseTimeOfDayBJ(${0:boolean flag})",
           "description": "fnUseTimeOfDayBJ",
           "scope": "source.vjass"
       },
        "fnSetTerrainFogExBJ": {
           "prefix": "fnSetTerrainFogExBJ",
           "body": "SetTerrainFogExBJ(${0:real blue},${1:integer style})",
           "description": "fnSetTerrainFogExBJ",
           "scope": "source.vjass"
       },
        "fnResetTerrainFogBJ": {
           "prefix": "fnResetTerrainFogBJ",
           "body": "ResetTerrainFogBJ(${0:nothing})",
           "description": "fnResetTerrainFogBJ",
           "scope": "source.vjass"
       },
        "fnSetDoodadAnimationBJ": {
           "prefix": "fnSetDoodadAnimationBJ",
           "body": "SetDoodadAnimationBJ(${0:real radius},${1:integer doodadID},${2:string animName},${3:location center})",
           "description": "fnSetDoodadAnimationBJ",
           "scope": "source.vjass"
       },
        "fnSetDoodadAnimationRectBJ": {
           "prefix": "fnSetDoodadAnimationRectBJ",
           "body": "SetDoodadAnimationRectBJ(${0:integer doodadID},${1:string animName},${2:rect r})",
           "description": "fnSetDoodadAnimationRectBJ",
           "scope": "source.vjass"
       },
        "fnAddUnitAnimationPropertiesBJ": {
           "prefix": "fnAddUnitAnimationPropertiesBJ",
           "body": "AddUnitAnimationPropertiesBJ(${0:boolean add},${1:string animProperties},${2:unit whichUnit})",
           "description": "fnAddUnitAnimationPropertiesBJ",
           "scope": "source.vjass"
       },
        "fnCreateImageBJ": {
           "prefix": "fnCreateImageBJ",
           "body": "CreateImageBJ(${0:real zOffset},${1:integer imageType},${2:string file},${3:location where})",
           "description": "fnCreateImageBJ",
           "scope": "source.vjass"
       },
        "fnShowImageBJ": {
           "prefix": "fnShowImageBJ",
           "body": "ShowImageBJ(${0:image whichImage},${1:boolean flag})",
           "description": "fnShowImageBJ",
           "scope": "source.vjass"
       },
        "fnSetImagePositionBJ": {
           "prefix": "fnSetImagePositionBJ",
           "body": "SetImagePositionBJ(${0:real zOffset},${1:image whichImage},${2:location where})",
           "description": "fnSetImagePositionBJ",
           "scope": "source.vjass"
       },
        "fnSetImageColorBJ": {
           "prefix": "fnSetImageColorBJ",
           "body": "SetImageColorBJ(${0:real alpha},${1:image whichImage})",
           "description": "fnSetImageColorBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedImage": {
           "prefix": "fnGetLastCreatedImage",
           "body": "GetLastCreatedImage(${0:nothing})",
           "description": "fnGetLastCreatedImage",
           "scope": "source.vjass"
       },
        "fnCreateUbersplatBJ": {
           "prefix": "fnCreateUbersplatBJ",
           "body": "CreateUbersplatBJ(${0:real alpha},${1:boolean noBirthTime},${2:location where},${3:string name})",
           "description": "fnCreateUbersplatBJ",
           "scope": "source.vjass"
       },
        "fnShowUbersplatBJ": {
           "prefix": "fnShowUbersplatBJ",
           "body": "ShowUbersplatBJ(${0:boolean flag},${1:ubersplat whichSplat})",
           "description": "fnShowUbersplatBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedUbersplat": {
           "prefix": "fnGetLastCreatedUbersplat",
           "body": "GetLastCreatedUbersplat(${0:nothing})",
           "description": "fnGetLastCreatedUbersplat",
           "scope": "source.vjass"
       },
        "fnPlaySoundBJ": {
           "prefix": "fnPlaySoundBJ",
           "body": "PlaySoundBJ(${0:sound soundHandle})",
           "description": "fnPlaySoundBJ",
           "scope": "source.vjass"
       },
        "fnStopSoundBJ": {
           "prefix": "fnStopSoundBJ",
           "body": "StopSoundBJ(${0:sound soundHandle},${1:boolean fadeOut})",
           "description": "fnStopSoundBJ",
           "scope": "source.vjass"
       },
        "fnSetSoundVolumeBJ": {
           "prefix": "fnSetSoundVolumeBJ",
           "body": "SetSoundVolumeBJ(${0:sound soundHandle},${1:real volumePercent})",
           "description": "fnSetSoundVolumeBJ",
           "scope": "source.vjass"
       },
        "fnSetSoundOffsetBJ": {
           "prefix": "fnSetSoundOffsetBJ",
           "body": "SetSoundOffsetBJ(${0:real newOffset},${1:sound soundHandle})",
           "description": "fnSetSoundOffsetBJ",
           "scope": "source.vjass"
       },
        "fnSetSoundDistanceCutoffBJ": {
           "prefix": "fnSetSoundDistanceCutoffBJ",
           "body": "SetSoundDistanceCutoffBJ(${0:sound soundHandle},${1:real cutoff})",
           "description": "fnSetSoundDistanceCutoffBJ",
           "scope": "source.vjass"
       },
        "fnSetSoundPitchBJ": {
           "prefix": "fnSetSoundPitchBJ",
           "body": "SetSoundPitchBJ(${0:sound soundHandle},${1:real pitch})",
           "description": "fnSetSoundPitchBJ",
           "scope": "source.vjass"
       },
        "fnSetSoundPositionLocBJ": {
           "prefix": "fnSetSoundPositionLocBJ",
           "body": "SetSoundPositionLocBJ(${0:sound soundHandle},${1:real z},${2:location loc})",
           "description": "fnSetSoundPositionLocBJ",
           "scope": "source.vjass"
       },
        "fnAttachSoundToUnitBJ": {
           "prefix": "fnAttachSoundToUnitBJ",
           "body": "AttachSoundToUnitBJ(${0:sound soundHandle},${1:unit whichUnit})",
           "description": "fnAttachSoundToUnitBJ",
           "scope": "source.vjass"
       },
        "fnSetSoundConeAnglesBJ": {
           "prefix": "fnSetSoundConeAnglesBJ",
           "body": "SetSoundConeAnglesBJ(${0:sound soundHandle},${1:real outsideVolumePercent})",
           "description": "fnSetSoundConeAnglesBJ",
           "scope": "source.vjass"
       },
        "fnKillSoundWhenDoneBJ": {
           "prefix": "fnKillSoundWhenDoneBJ",
           "body": "KillSoundWhenDoneBJ(${0:sound soundHandle})",
           "description": "fnKillSoundWhenDoneBJ",
           "scope": "source.vjass"
       },
        "fnPlaySoundAtPointBJ": {
           "prefix": "fnPlaySoundAtPointBJ",
           "body": "PlaySoundAtPointBJ(${0:sound soundHandle},${1:real z},${2:location loc})",
           "description": "fnPlaySoundAtPointBJ",
           "scope": "source.vjass"
       },
        "fnPlaySoundOnUnitBJ": {
           "prefix": "fnPlaySoundOnUnitBJ",
           "body": "PlaySoundOnUnitBJ(${0:sound soundHandle},${1:real volumePercent},${2:unit whichUnit})",
           "description": "fnPlaySoundOnUnitBJ",
           "scope": "source.vjass"
       },
        "fnPlaySoundFromOffsetBJ": {
           "prefix": "fnPlaySoundFromOffsetBJ",
           "body": "PlaySoundFromOffsetBJ(${0:sound soundHandle},${1:real startingOffset})",
           "description": "fnPlaySoundFromOffsetBJ",
           "scope": "source.vjass"
       },
        "fnPlayMusicBJ": {
           "prefix": "fnPlayMusicBJ",
           "body": "PlayMusicBJ(${0:string musicFileName})",
           "description": "fnPlayMusicBJ",
           "scope": "source.vjass"
       },
        "fnPlayMusicExBJ": {
           "prefix": "fnPlayMusicExBJ",
           "body": "PlayMusicExBJ(${0:real fadeInTime},${1:string musicFileName})",
           "description": "fnPlayMusicExBJ",
           "scope": "source.vjass"
       },
        "fnSetMusicOffsetBJ": {
           "prefix": "fnSetMusicOffsetBJ",
           "body": "SetMusicOffsetBJ(${0:real newOffset})",
           "description": "fnSetMusicOffsetBJ",
           "scope": "source.vjass"
       },
        "fnPlayThematicMusicBJ": {
           "prefix": "fnPlayThematicMusicBJ",
           "body": "PlayThematicMusicBJ(${0:string musicName})",
           "description": "fnPlayThematicMusicBJ",
           "scope": "source.vjass"
       },
        "fnPlayThematicMusicExBJ": {
           "prefix": "fnPlayThematicMusicExBJ",
           "body": "PlayThematicMusicExBJ(${0:real startingOffset},${1:string musicName})",
           "description": "fnPlayThematicMusicExBJ",
           "scope": "source.vjass"
       },
        "fnSetThematicMusicOffsetBJ": {
           "prefix": "fnSetThematicMusicOffsetBJ",
           "body": "SetThematicMusicOffsetBJ(${0:real newOffset})",
           "description": "fnSetThematicMusicOffsetBJ",
           "scope": "source.vjass"
       },
        "fnEndThematicMusicBJ": {
           "prefix": "fnEndThematicMusicBJ",
           "body": "EndThematicMusicBJ(${0:nothing})",
           "description": "fnEndThematicMusicBJ",
           "scope": "source.vjass"
       },
        "fnStopMusicBJ": {
           "prefix": "fnStopMusicBJ",
           "body": "StopMusicBJ(${0:boolean fadeOut})",
           "description": "fnStopMusicBJ",
           "scope": "source.vjass"
       },
        "fnResumeMusicBJ": {
           "prefix": "fnResumeMusicBJ",
           "body": "ResumeMusicBJ(${0:nothing})",
           "description": "fnResumeMusicBJ",
           "scope": "source.vjass"
       },
        "fnSetMusicVolumeBJ": {
           "prefix": "fnSetMusicVolumeBJ",
           "body": "SetMusicVolumeBJ(${0:real volumePercent})",
           "description": "fnSetMusicVolumeBJ",
           "scope": "source.vjass"
       },
        "fnGetSoundDurationBJ": {
           "prefix": "fnGetSoundDurationBJ",
           "body": "GetSoundDurationBJ(${0:sound soundHandle})",
           "description": "fnGetSoundDurationBJ",
           "scope": "source.vjass"
       },
        "fnGetSoundFileDurationBJ": {
           "prefix": "fnGetSoundFileDurationBJ",
           "body": "GetSoundFileDurationBJ(${0:string musicFileName})",
           "description": "fnGetSoundFileDurationBJ",
           "scope": "source.vjass"
       },
        "fnGetLastPlayedSound": {
           "prefix": "fnGetLastPlayedSound",
           "body": "GetLastPlayedSound(${0:nothing})",
           "description": "fnGetLastPlayedSound",
           "scope": "source.vjass"
       },
        "fnGetLastPlayedMusic": {
           "prefix": "fnGetLastPlayedMusic",
           "body": "GetLastPlayedMusic(${0:nothing})",
           "description": "fnGetLastPlayedMusic",
           "scope": "source.vjass"
       },
        "fnVolumeGroupSetVolumeBJ": {
           "prefix": "fnVolumeGroupSetVolumeBJ",
           "body": "VolumeGroupSetVolumeBJ(${0:real percent},${1:volumegroup vgroup})",
           "description": "fnVolumeGroupSetVolumeBJ",
           "scope": "source.vjass"
       },
        "fnSetCineModeVolumeGroupsImmediateBJ": {
           "prefix": "fnSetCineModeVolumeGroupsImmediateBJ",
           "body": "SetCineModeVolumeGroupsImmediateBJ(${0:nothing})",
           "description": "fnSetCineModeVolumeGroupsImmediateBJ",
           "scope": "source.vjass"
       },
        "fnSetCineModeVolumeGroupsBJ": {
           "prefix": "fnSetCineModeVolumeGroupsBJ",
           "body": "SetCineModeVolumeGroupsBJ(${0:nothing})",
           "description": "fnSetCineModeVolumeGroupsBJ",
           "scope": "source.vjass"
       },
        "fnSetSpeechVolumeGroupsImmediateBJ": {
           "prefix": "fnSetSpeechVolumeGroupsImmediateBJ",
           "body": "SetSpeechVolumeGroupsImmediateBJ(${0:nothing})",
           "description": "fnSetSpeechVolumeGroupsImmediateBJ",
           "scope": "source.vjass"
       },
        "fnSetSpeechVolumeGroupsBJ": {
           "prefix": "fnSetSpeechVolumeGroupsBJ",
           "body": "SetSpeechVolumeGroupsBJ(${0:nothing})",
           "description": "fnSetSpeechVolumeGroupsBJ",
           "scope": "source.vjass"
       },
        "fnVolumeGroupResetImmediateBJ": {
           "prefix": "fnVolumeGroupResetImmediateBJ",
           "body": "VolumeGroupResetImmediateBJ(${0:nothing})",
           "description": "fnVolumeGroupResetImmediateBJ",
           "scope": "source.vjass"
       },
        "fnVolumeGroupResetBJ": {
           "prefix": "fnVolumeGroupResetBJ",
           "body": "VolumeGroupResetBJ(${0:nothing})",
           "description": "fnVolumeGroupResetBJ",
           "scope": "source.vjass"
       },
        "fnGetSoundIsPlayingBJ": {
           "prefix": "fnGetSoundIsPlayingBJ",
           "body": "GetSoundIsPlayingBJ(${0:sound soundHandle})",
           "description": "fnGetSoundIsPlayingBJ",
           "scope": "source.vjass"
       },
        "fnWaitForSoundBJ": {
           "prefix": "fnWaitForSoundBJ",
           "body": "WaitForSoundBJ(${0:sound soundHandle},${1:real offset})",
           "description": "fnWaitForSoundBJ",
           "scope": "source.vjass"
       },
        "fnSetMapMusicIndexedBJ": {
           "prefix": "fnSetMapMusicIndexedBJ",
           "body": "SetMapMusicIndexedBJ(${0:integer index},${1:string musicName})",
           "description": "fnSetMapMusicIndexedBJ",
           "scope": "source.vjass"
       },
        "fnSetMapMusicRandomBJ": {
           "prefix": "fnSetMapMusicRandomBJ",
           "body": "SetMapMusicRandomBJ(${0:string musicName})",
           "description": "fnSetMapMusicRandomBJ",
           "scope": "source.vjass"
       },
        "fnClearMapMusicBJ": {
           "prefix": "fnClearMapMusicBJ",
           "body": "ClearMapMusicBJ(${0:nothing})",
           "description": "fnClearMapMusicBJ",
           "scope": "source.vjass"
       },
        "fnSetStackedSoundBJ": {
           "prefix": "fnSetStackedSoundBJ",
           "body": "SetStackedSoundBJ(${0:sound soundHandle},${1:boolean add},${2:rect r})",
           "description": "fnSetStackedSoundBJ",
           "scope": "source.vjass"
       },
        "fnStartSoundForPlayerBJ": {
           "prefix": "fnStartSoundForPlayerBJ",
           "body": "StartSoundForPlayerBJ(${0:sound soundHandle},${1:player whichPlayer})",
           "description": "fnStartSoundForPlayerBJ",
           "scope": "source.vjass"
       },
        "fnVolumeGroupSetVolumeForPlayerBJ": {
           "prefix": "fnVolumeGroupSetVolumeForPlayerBJ",
           "body": "VolumeGroupSetVolumeForPlayerBJ(${0:real scale},${1:player whichPlayer},${2:volumegroup vgroup})",
           "description": "fnVolumeGroupSetVolumeForPlayerBJ",
           "scope": "source.vjass"
       },
        "fnEnableDawnDusk": {
           "prefix": "fnEnableDawnDusk",
           "body": "EnableDawnDusk(${0:boolean flag})",
           "description": "fnEnableDawnDusk",
           "scope": "source.vjass"
       },
        "fnIsDawnDuskEnabled": {
           "prefix": "fnIsDawnDuskEnabled",
           "body": "IsDawnDuskEnabled(${0:nothing})",
           "description": "fnIsDawnDuskEnabled",
           "scope": "source.vjass"
       },
        "fnSetAmbientDaySound": {
           "prefix": "fnSetAmbientDaySound",
           "body": "SetAmbientDaySound(${0:string inLabel})",
           "description": "fnSetAmbientDaySound",
           "scope": "source.vjass"
       },
        "fnSetAmbientNightSound": {
           "prefix": "fnSetAmbientNightSound",
           "body": "SetAmbientNightSound(${0:string inLabel})",
           "description": "fnSetAmbientNightSound",
           "scope": "source.vjass"
       },
        "fnAddSpecialEffectLocBJ": {
           "prefix": "fnAddSpecialEffectLocBJ",
           "body": "AddSpecialEffectLocBJ(${0:location where},${1:string modelName})",
           "description": "fnAddSpecialEffectLocBJ",
           "scope": "source.vjass"
       },
        "fnAddSpecialEffectTargetUnitBJ": {
           "prefix": "fnAddSpecialEffectTargetUnitBJ",
           "body": "AddSpecialEffectTargetUnitBJ(${0:widget targetWidget},${1:string modelName})",
           "description": "fnAddSpecialEffectTargetUnitBJ",
           "scope": "source.vjass"
       },
        "fnDestroyEffectBJ": {
           "prefix": "fnDestroyEffectBJ",
           "body": "DestroyEffectBJ(${0:effect whichEffect})",
           "description": "fnDestroyEffectBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedEffectBJ": {
           "prefix": "fnGetLastCreatedEffectBJ",
           "body": "GetLastCreatedEffectBJ(${0:nothing})",
           "description": "fnGetLastCreatedEffectBJ",
           "scope": "source.vjass"
       },
        "fnGetItemLoc": {
           "prefix": "fnGetItemLoc",
           "body": "GetItemLoc(${0:item whichItem})",
           "description": "fnGetItemLoc",
           "scope": "source.vjass"
       },
        "fnGetItemLifeBJ": {
           "prefix": "fnGetItemLifeBJ",
           "body": "GetItemLifeBJ(${0:widget whichWidget})",
           "description": "fnGetItemLifeBJ",
           "scope": "source.vjass"
       },
        "fnSetItemLifeBJ": {
           "prefix": "fnSetItemLifeBJ",
           "body": "SetItemLifeBJ(${0:real life},${1:widget whichWidget})",
           "description": "fnSetItemLifeBJ",
           "scope": "source.vjass"
       },
        "fnAddHeroXPSwapped": {
           "prefix": "fnAddHeroXPSwapped",
           "body": "AddHeroXPSwapped(${0:integer xpToAdd},${1:boolean showEyeCandy},${2:unit whichHero})",
           "description": "fnAddHeroXPSwapped",
           "scope": "source.vjass"
       },
        "fnSetHeroLevelBJ": {
           "prefix": "fnSetHeroLevelBJ",
           "body": "SetHeroLevelBJ(${0:integer newLevel},${1:boolean showEyeCandy},${2:unit whichHero})",
           "description": "fnSetHeroLevelBJ",
           "scope": "source.vjass"
       },
        "fnDecUnitAbilityLevelSwapped": {
           "prefix": "fnDecUnitAbilityLevelSwapped",
           "body": "DecUnitAbilityLevelSwapped(${0:integer abilcode},${1:unit whichUnit})",
           "description": "fnDecUnitAbilityLevelSwapped",
           "scope": "source.vjass"
       },
        "fnIncUnitAbilityLevelSwapped": {
           "prefix": "fnIncUnitAbilityLevelSwapped",
           "body": "IncUnitAbilityLevelSwapped(${0:integer abilcode},${1:unit whichUnit})",
           "description": "fnIncUnitAbilityLevelSwapped",
           "scope": "source.vjass"
       },
        "fnSetUnitAbilityLevelSwapped": {
           "prefix": "fnSetUnitAbilityLevelSwapped",
           "body": "SetUnitAbilityLevelSwapped(${0:integer level},${1:unit whichUnit})",
           "description": "fnSetUnitAbilityLevelSwapped",
           "scope": "source.vjass"
       },
        "fnGetUnitAbilityLevelSwapped": {
           "prefix": "fnGetUnitAbilityLevelSwapped",
           "body": "GetUnitAbilityLevelSwapped(${0:integer abilcode},${1:unit whichUnit})",
           "description": "fnGetUnitAbilityLevelSwapped",
           "scope": "source.vjass"
       },
        "fnUnitHasBuffBJ": {
           "prefix": "fnUnitHasBuffBJ",
           "body": "UnitHasBuffBJ(${0:integer buffcode},${1:unit whichUnit})",
           "description": "fnUnitHasBuffBJ",
           "scope": "source.vjass"
       },
        "fnUnitRemoveBuffBJ": {
           "prefix": "fnUnitRemoveBuffBJ",
           "body": "UnitRemoveBuffBJ(${0:integer buffcode},${1:unit whichUnit})",
           "description": "fnUnitRemoveBuffBJ",
           "scope": "source.vjass"
       },
        "fnUnitAddItemSwapped": {
           "prefix": "fnUnitAddItemSwapped",
           "body": "UnitAddItemSwapped(${0:item whichItem},${1:unit whichHero})",
           "description": "fnUnitAddItemSwapped",
           "scope": "source.vjass"
       },
        "fnUnitAddItemByIdSwapped": {
           "prefix": "fnUnitAddItemByIdSwapped",
           "body": "UnitAddItemByIdSwapped(${0:integer itemId},${1:unit whichHero})",
           "description": "fnUnitAddItemByIdSwapped",
           "scope": "source.vjass"
       },
        "fnUnitRemoveItemSwapped": {
           "prefix": "fnUnitRemoveItemSwapped",
           "body": "UnitRemoveItemSwapped(${0:item whichItem},${1:unit whichHero})",
           "description": "fnUnitRemoveItemSwapped",
           "scope": "source.vjass"
       },
        "fnUnitRemoveItemFromSlotSwapped": {
           "prefix": "fnUnitRemoveItemFromSlotSwapped",
           "body": "UnitRemoveItemFromSlotSwapped(${0:integer itemSlot},${1:unit whichHero})",
           "description": "fnUnitRemoveItemFromSlotSwapped",
           "scope": "source.vjass"
       },
        "fnCreateItemLoc": {
           "prefix": "fnCreateItemLoc",
           "body": "CreateItemLoc(${0:integer itemId},${1:location loc})",
           "description": "fnCreateItemLoc",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedItem": {
           "prefix": "fnGetLastCreatedItem",
           "body": "GetLastCreatedItem(${0:nothing})",
           "description": "fnGetLastCreatedItem",
           "scope": "source.vjass"
       },
        "fnGetLastRemovedItem": {
           "prefix": "fnGetLastRemovedItem",
           "body": "GetLastRemovedItem(${0:nothing})",
           "description": "fnGetLastRemovedItem",
           "scope": "source.vjass"
       },
        "fnSetItemPositionLoc": {
           "prefix": "fnSetItemPositionLoc",
           "body": "SetItemPositionLoc(${0:item whichItem},${1:location loc})",
           "description": "fnSetItemPositionLoc",
           "scope": "source.vjass"
       },
        "fnGetLearnedSkillBJ": {
           "prefix": "fnGetLearnedSkillBJ",
           "body": "GetLearnedSkillBJ(${0:nothing})",
           "description": "fnGetLearnedSkillBJ",
           "scope": "source.vjass"
       },
        "fnSuspendHeroXPBJ": {
           "prefix": "fnSuspendHeroXPBJ",
           "body": "SuspendHeroXPBJ(${0:boolean flag},${1:unit whichHero})",
           "description": "fnSuspendHeroXPBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerHandicapXPBJ": {
           "prefix": "fnSetPlayerHandicapXPBJ",
           "body": "SetPlayerHandicapXPBJ(${0:real handicapPercent},${1:player whichPlayer})",
           "description": "fnSetPlayerHandicapXPBJ",
           "scope": "source.vjass"
       },
        "fnGetPlayerHandicapXPBJ": {
           "prefix": "fnGetPlayerHandicapXPBJ",
           "body": "GetPlayerHandicapXPBJ(${0:player whichPlayer})",
           "description": "fnGetPlayerHandicapXPBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerHandicapBJ": {
           "prefix": "fnSetPlayerHandicapBJ",
           "body": "SetPlayerHandicapBJ(${0:real handicapPercent},${1:player whichPlayer})",
           "description": "fnSetPlayerHandicapBJ",
           "scope": "source.vjass"
       },
        "fnGetPlayerHandicapBJ": {
           "prefix": "fnGetPlayerHandicapBJ",
           "body": "GetPlayerHandicapBJ(${0:player whichPlayer})",
           "description": "fnGetPlayerHandicapBJ",
           "scope": "source.vjass"
       },
        "fnGetHeroStatBJ": {
           "prefix": "fnGetHeroStatBJ",
           "body": "GetHeroStatBJ(${0:integer whichStat},${1:boolean includeBonuses},${2:unit whichHero})",
           "description": "fnGetHeroStatBJ",
           "scope": "source.vjass"
       },
        "fnSetHeroStat": {
           "prefix": "fnSetHeroStat",
           "body": "SetHeroStat(${0:integer value},${1:unit whichHero})",
           "description": "fnSetHeroStat",
           "scope": "source.vjass"
       },
        "fnModifyHeroStat": {
           "prefix": "fnModifyHeroStat",
           "body": "ModifyHeroStat(${0:integer value},${1:unit whichHero})",
           "description": "fnModifyHeroStat",
           "scope": "source.vjass"
       },
        "fnModifyHeroSkillPoints": {
           "prefix": "fnModifyHeroSkillPoints",
           "body": "ModifyHeroSkillPoints(${0:integer value},${1:unit whichHero})",
           "description": "fnModifyHeroSkillPoints",
           "scope": "source.vjass"
       },
        "fnUnitDropItemPointBJ": {
           "prefix": "fnUnitDropItemPointBJ",
           "body": "UnitDropItemPointBJ(${0:real y},${1:item whichItem},${2:unit whichUnit})",
           "description": "fnUnitDropItemPointBJ",
           "scope": "source.vjass"
       },
        "fnUnitDropItemPointLoc": {
           "prefix": "fnUnitDropItemPointLoc",
           "body": "UnitDropItemPointLoc(${0:item whichItem},${1:location loc},${2:unit whichUnit})",
           "description": "fnUnitDropItemPointLoc",
           "scope": "source.vjass"
       },
        "fnUnitDropItemSlotBJ": {
           "prefix": "fnUnitDropItemSlotBJ",
           "body": "UnitDropItemSlotBJ(${0:item whichItem},${1:unit whichUnit},${2:integer slot})",
           "description": "fnUnitDropItemSlotBJ",
           "scope": "source.vjass"
       },
        "fnUnitDropItemTargetBJ": {
           "prefix": "fnUnitDropItemTargetBJ",
           "body": "UnitDropItemTargetBJ(${0:item whichItem},${1:widget target},${2:unit whichUnit})",
           "description": "fnUnitDropItemTargetBJ",
           "scope": "source.vjass"
       },
        "fnUnitUseItemDestructable": {
           "prefix": "fnUnitUseItemDestructable",
           "body": "UnitUseItemDestructable(${0:item whichItem},${1:widget target},${2:unit whichUnit})",
           "description": "fnUnitUseItemDestructable",
           "scope": "source.vjass"
       },
        "fnUnitUseItemPointLoc": {
           "prefix": "fnUnitUseItemPointLoc",
           "body": "UnitUseItemPointLoc(${0:item whichItem},${1:location loc},${2:unit whichUnit})",
           "description": "fnUnitUseItemPointLoc",
           "scope": "source.vjass"
       },
        "fnUnitItemInSlotBJ": {
           "prefix": "fnUnitItemInSlotBJ",
           "body": "UnitItemInSlotBJ(${0:integer itemSlot},${1:unit whichUnit})",
           "description": "fnUnitItemInSlotBJ",
           "scope": "source.vjass"
       },
        "fnGetInventoryIndexOfItemTypeBJ": {
           "prefix": "fnGetInventoryIndexOfItemTypeBJ",
           "body": "GetInventoryIndexOfItemTypeBJ(${0:integer itemId},${1:unit whichUnit})",
           "description": "fnGetInventoryIndexOfItemTypeBJ",
           "scope": "source.vjass"
       },
        "fnGetItemOfTypeFromUnitBJ": {
           "prefix": "fnGetItemOfTypeFromUnitBJ",
           "body": "GetItemOfTypeFromUnitBJ(${0:integer itemId},${1:unit whichUnit})",
           "description": "fnGetItemOfTypeFromUnitBJ",
           "scope": "source.vjass"
       },
        "fnUnitHasItemOfTypeBJ": {
           "prefix": "fnUnitHasItemOfTypeBJ",
           "body": "UnitHasItemOfTypeBJ(${0:integer itemId},${1:unit whichUnit})",
           "description": "fnUnitHasItemOfTypeBJ",
           "scope": "source.vjass"
       },
        "fnUnitInventoryCount": {
           "prefix": "fnUnitInventoryCount",
           "body": "UnitInventoryCount(${0:unit whichUnit})",
           "description": "fnUnitInventoryCount",
           "scope": "source.vjass"
       },
        "fnUnitInventorySizeBJ": {
           "prefix": "fnUnitInventorySizeBJ",
           "body": "UnitInventorySizeBJ(${0:unit whichUnit})",
           "description": "fnUnitInventorySizeBJ",
           "scope": "source.vjass"
       },
        "fnSetItemInvulnerableBJ": {
           "prefix": "fnSetItemInvulnerableBJ",
           "body": "SetItemInvulnerableBJ(${0:item whichItem},${1:boolean flag})",
           "description": "fnSetItemInvulnerableBJ",
           "scope": "source.vjass"
       },
        "fnSetItemDropOnDeathBJ": {
           "prefix": "fnSetItemDropOnDeathBJ",
           "body": "SetItemDropOnDeathBJ(${0:item whichItem},${1:boolean flag})",
           "description": "fnSetItemDropOnDeathBJ",
           "scope": "source.vjass"
       },
        "fnSetItemDroppableBJ": {
           "prefix": "fnSetItemDroppableBJ",
           "body": "SetItemDroppableBJ(${0:item whichItem},${1:boolean flag})",
           "description": "fnSetItemDroppableBJ",
           "scope": "source.vjass"
       },
        "fnSetItemPlayerBJ": {
           "prefix": "fnSetItemPlayerBJ",
           "body": "SetItemPlayerBJ(${0:item whichItem},${1:boolean changeColor},${2:player whichPlayer})",
           "description": "fnSetItemPlayerBJ",
           "scope": "source.vjass"
       },
        "fnSetItemVisibleBJ": {
           "prefix": "fnSetItemVisibleBJ",
           "body": "SetItemVisibleBJ(${0:item whichItem},${1:boolean show})",
           "description": "fnSetItemVisibleBJ",
           "scope": "source.vjass"
       },
        "fnIsItemHiddenBJ": {
           "prefix": "fnIsItemHiddenBJ",
           "body": "IsItemHiddenBJ(${0:item whichItem})",
           "description": "fnIsItemHiddenBJ",
           "scope": "source.vjass"
       },
        "fnChooseRandomItemBJ": {
           "prefix": "fnChooseRandomItemBJ",
           "body": "ChooseRandomItemBJ(${0:integer level})",
           "description": "fnChooseRandomItemBJ",
           "scope": "source.vjass"
       },
        "fnChooseRandomItemExBJ": {
           "prefix": "fnChooseRandomItemExBJ",
           "body": "ChooseRandomItemExBJ(${0:integer level},${1:itemtype whichType})",
           "description": "fnChooseRandomItemExBJ",
           "scope": "source.vjass"
       },
        "fnChooseRandomNPBuildingBJ": {
           "prefix": "fnChooseRandomNPBuildingBJ",
           "body": "ChooseRandomNPBuildingBJ(${0:nothing})",
           "description": "fnChooseRandomNPBuildingBJ",
           "scope": "source.vjass"
       },
        "fnChooseRandomCreepBJ": {
           "prefix": "fnChooseRandomCreepBJ",
           "body": "ChooseRandomCreepBJ(${0:integer level})",
           "description": "fnChooseRandomCreepBJ",
           "scope": "source.vjass"
       },
        "fnEnumItemsInRectBJ": {
           "prefix": "fnEnumItemsInRectBJ",
           "body": "EnumItemsInRectBJ(${0:code actionFunc},${1:rect r})",
           "description": "fnEnumItemsInRectBJ",
           "scope": "source.vjass"
       },
        "fnRandomItemInRectBJEnum": {
           "prefix": "fnRandomItemInRectBJEnum",
           "body": "RandomItemInRectBJEnum(${0:nothing})",
           "description": "fnRandomItemInRectBJEnum",
           "scope": "source.vjass"
       },
        "fnRandomItemInRectBJ": {
           "prefix": "fnRandomItemInRectBJ",
           "body": "RandomItemInRectBJ(${0:boolexpr filter},${1:rect r})",
           "description": "fnRandomItemInRectBJ",
           "scope": "source.vjass"
       },
        "fnRandomItemInRectSimpleBJ": {
           "prefix": "fnRandomItemInRectSimpleBJ",
           "body": "RandomItemInRectSimpleBJ(${0:rect r})",
           "description": "fnRandomItemInRectSimpleBJ",
           "scope": "source.vjass"
       },
        "fnCheckItemStatus": {
           "prefix": "fnCheckItemStatus",
           "body": "CheckItemStatus(${0:item whichItem},${1:integer status})",
           "description": "fnCheckItemStatus",
           "scope": "source.vjass"
       },
        "fnCheckItemcodeStatus": {
           "prefix": "fnCheckItemcodeStatus",
           "body": "CheckItemcodeStatus(${0:integer status})",
           "description": "fnCheckItemcodeStatus",
           "scope": "source.vjass"
       },
        "fnUnitId2OrderIdBJ": {
           "prefix": "fnUnitId2OrderIdBJ",
           "body": "UnitId2OrderIdBJ(${0:integer unitId})",
           "description": "fnUnitId2OrderIdBJ",
           "scope": "source.vjass"
       },
        "fnString2UnitIdBJ": {
           "prefix": "fnString2UnitIdBJ",
           "body": "String2UnitIdBJ(${0:string unitIdString})",
           "description": "fnString2UnitIdBJ",
           "scope": "source.vjass"
       },
        "fnUnitId2StringBJ": {
           "prefix": "fnUnitId2StringBJ",
           "body": "UnitId2StringBJ(${0:integer unitId})",
           "description": "fnUnitId2StringBJ",
           "scope": "source.vjass"
       },
        "fnString2OrderIdBJ": {
           "prefix": "fnString2OrderIdBJ",
           "body": "String2OrderIdBJ(${0:string orderIdString})",
           "description": "fnString2OrderIdBJ",
           "scope": "source.vjass"
       },
        "fnOrderId2StringBJ": {
           "prefix": "fnOrderId2StringBJ",
           "body": "OrderId2StringBJ(${0:integer orderId})",
           "description": "fnOrderId2StringBJ",
           "scope": "source.vjass"
       },
        "fnGetIssuedOrderIdBJ": {
           "prefix": "fnGetIssuedOrderIdBJ",
           "body": "GetIssuedOrderIdBJ(${0:nothing})",
           "description": "fnGetIssuedOrderIdBJ",
           "scope": "source.vjass"
       },
        "fnGetKillingUnitBJ": {
           "prefix": "fnGetKillingUnitBJ",
           "body": "GetKillingUnitBJ(${0:nothing})",
           "description": "fnGetKillingUnitBJ",
           "scope": "source.vjass"
       },
        "fnCreateUnitAtLocSaveLast": {
           "prefix": "fnCreateUnitAtLocSaveLast",
           "body": "CreateUnitAtLocSaveLast(${0:real face},${1:player id},${2:location loc},${3:integer unitid})",
           "description": "fnCreateUnitAtLocSaveLast",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedUnit": {
           "prefix": "fnGetLastCreatedUnit",
           "body": "GetLastCreatedUnit(${0:nothing})",
           "description": "fnGetLastCreatedUnit",
           "scope": "source.vjass"
       },
        "fnCreateNUnitsAtLoc": {
           "prefix": "fnCreateNUnitsAtLoc",
           "body": "CreateNUnitsAtLoc(${0:real face},${1:integer unitId},${2:location loc},${3:player whichPlayer})",
           "description": "fnCreateNUnitsAtLoc",
           "scope": "source.vjass"
       },
        "fnCreateNUnitsAtLocFacingLocBJ": {
           "prefix": "fnCreateNUnitsAtLocFacingLocBJ",
           "body": "CreateNUnitsAtLocFacingLocBJ(${0:integer unitId},${1:location lookAt},${2:player whichPlayer})",
           "description": "fnCreateNUnitsAtLocFacingLocBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedGroupEnum": {
           "prefix": "fnGetLastCreatedGroupEnum",
           "body": "GetLastCreatedGroupEnum(${0:nothing})",
           "description": "fnGetLastCreatedGroupEnum",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedGroup": {
           "prefix": "fnGetLastCreatedGroup",
           "body": "GetLastCreatedGroup(${0:nothing})",
           "description": "fnGetLastCreatedGroup",
           "scope": "source.vjass"
       },
        "fnCreateCorpseLocBJ": {
           "prefix": "fnCreateCorpseLocBJ",
           "body": "CreateCorpseLocBJ(${0:integer unitid},${1:location loc},${2:player whichPlayer})",
           "description": "fnCreateCorpseLocBJ",
           "scope": "source.vjass"
       },
        "fnUnitSuspendDecayBJ": {
           "prefix": "fnUnitSuspendDecayBJ",
           "body": "UnitSuspendDecayBJ(${0:boolean suspend},${1:unit whichUnit})",
           "description": "fnUnitSuspendDecayBJ",
           "scope": "source.vjass"
       },
        "fnDelayedSuspendDecayStopAnimEnum": {
           "prefix": "fnDelayedSuspendDecayStopAnimEnum",
           "body": "DelayedSuspendDecayStopAnimEnum(${0:nothing})",
           "description": "fnDelayedSuspendDecayStopAnimEnum",
           "scope": "source.vjass"
       },
        "fnDelayedSuspendDecayBoneEnum": {
           "prefix": "fnDelayedSuspendDecayBoneEnum",
           "body": "DelayedSuspendDecayBoneEnum(${0:nothing})",
           "description": "fnDelayedSuspendDecayBoneEnum",
           "scope": "source.vjass"
       },
        "fnDelayedSuspendDecayFleshEnum": {
           "prefix": "fnDelayedSuspendDecayFleshEnum",
           "body": "DelayedSuspendDecayFleshEnum(${0:nothing})",
           "description": "fnDelayedSuspendDecayFleshEnum",
           "scope": "source.vjass"
       },
        "fnDelayedSuspendDecay": {
           "prefix": "fnDelayedSuspendDecay",
           "body": "DelayedSuspendDecay(${0:nothing})",
           "description": "fnDelayedSuspendDecay",
           "scope": "source.vjass"
       },
        "fnDelayedSuspendDecayCreate": {
           "prefix": "fnDelayedSuspendDecayCreate",
           "body": "DelayedSuspendDecayCreate(${0:nothing})",
           "description": "fnDelayedSuspendDecayCreate",
           "scope": "source.vjass"
       },
        "fnCreatePermanentCorpseLocBJ": {
           "prefix": "fnCreatePermanentCorpseLocBJ",
           "body": "CreatePermanentCorpseLocBJ(${0:real facing},${1:integer unitid},${2:location loc},${3:player whichPlayer})",
           "description": "fnCreatePermanentCorpseLocBJ",
           "scope": "source.vjass"
       },
        "fnGetUnitStateSwap": {
           "prefix": "fnGetUnitStateSwap",
           "body": "GetUnitStateSwap(${0:unitstate whichState},${1:unit whichUnit})",
           "description": "fnGetUnitStateSwap",
           "scope": "source.vjass"
       },
        "fnGetUnitStatePercent": {
           "prefix": "fnGetUnitStatePercent",
           "body": "GetUnitStatePercent(${0:unitstate whichMaxState},${1:unit whichUnit})",
           "description": "fnGetUnitStatePercent",
           "scope": "source.vjass"
       },
        "fnGetUnitLifePercent": {
           "prefix": "fnGetUnitLifePercent",
           "body": "GetUnitLifePercent(${0:unit whichUnit})",
           "description": "fnGetUnitLifePercent",
           "scope": "source.vjass"
       },
        "fnGetUnitManaPercent": {
           "prefix": "fnGetUnitManaPercent",
           "body": "GetUnitManaPercent(${0:unit whichUnit})",
           "description": "fnGetUnitManaPercent",
           "scope": "source.vjass"
       },
        "fnSelectUnitSingle": {
           "prefix": "fnSelectUnitSingle",
           "body": "SelectUnitSingle(${0:unit whichUnit})",
           "description": "fnSelectUnitSingle",
           "scope": "source.vjass"
       },
        "fnSelectGroupBJEnum": {
           "prefix": "fnSelectGroupBJEnum",
           "body": "SelectGroupBJEnum(${0:nothing})",
           "description": "fnSelectGroupBJEnum",
           "scope": "source.vjass"
       },
        "fnSelectGroupBJ": {
           "prefix": "fnSelectGroupBJ",
           "body": "SelectGroupBJ(${0:group g})",
           "description": "fnSelectGroupBJ",
           "scope": "source.vjass"
       },
        "fnSelectUnitAdd": {
           "prefix": "fnSelectUnitAdd",
           "body": "SelectUnitAdd(${0:unit whichUnit})",
           "description": "fnSelectUnitAdd",
           "scope": "source.vjass"
       },
        "fnSelectUnitRemove": {
           "prefix": "fnSelectUnitRemove",
           "body": "SelectUnitRemove(${0:unit whichUnit})",
           "description": "fnSelectUnitRemove",
           "scope": "source.vjass"
       },
        "fnClearSelectionForPlayer": {
           "prefix": "fnClearSelectionForPlayer",
           "body": "ClearSelectionForPlayer(${0:player whichPlayer})",
           "description": "fnClearSelectionForPlayer",
           "scope": "source.vjass"
       },
        "fnSelectUnitForPlayerSingle": {
           "prefix": "fnSelectUnitForPlayerSingle",
           "body": "SelectUnitForPlayerSingle(${0:player whichPlayer},${1:unit whichUnit})",
           "description": "fnSelectUnitForPlayerSingle",
           "scope": "source.vjass"
       },
        "fnSelectGroupForPlayerBJ": {
           "prefix": "fnSelectGroupForPlayerBJ",
           "body": "SelectGroupForPlayerBJ(${0:player whichPlayer},${1:group g})",
           "description": "fnSelectGroupForPlayerBJ",
           "scope": "source.vjass"
       },
        "fnSelectUnitAddForPlayer": {
           "prefix": "fnSelectUnitAddForPlayer",
           "body": "SelectUnitAddForPlayer(${0:player whichPlayer},${1:unit whichUnit})",
           "description": "fnSelectUnitAddForPlayer",
           "scope": "source.vjass"
       },
        "fnSelectUnitRemoveForPlayer": {
           "prefix": "fnSelectUnitRemoveForPlayer",
           "body": "SelectUnitRemoveForPlayer(${0:player whichPlayer},${1:unit whichUnit})",
           "description": "fnSelectUnitRemoveForPlayer",
           "scope": "source.vjass"
       },
        "fnSetUnitLifeBJ": {
           "prefix": "fnSetUnitLifeBJ",
           "body": "SetUnitLifeBJ(${0:real newValue},${1:unit whichUnit})",
           "description": "fnSetUnitLifeBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitManaBJ": {
           "prefix": "fnSetUnitManaBJ",
           "body": "SetUnitManaBJ(${0:real newValue},${1:unit whichUnit})",
           "description": "fnSetUnitManaBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitLifePercentBJ": {
           "prefix": "fnSetUnitLifePercentBJ",
           "body": "SetUnitLifePercentBJ(${0:real percent},${1:unit whichUnit})",
           "description": "fnSetUnitLifePercentBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitManaPercentBJ": {
           "prefix": "fnSetUnitManaPercentBJ",
           "body": "SetUnitManaPercentBJ(${0:real percent},${1:unit whichUnit})",
           "description": "fnSetUnitManaPercentBJ",
           "scope": "source.vjass"
       },
        "fnIsUnitDeadBJ": {
           "prefix": "fnIsUnitDeadBJ",
           "body": "IsUnitDeadBJ(${0:unit whichUnit})",
           "description": "fnIsUnitDeadBJ",
           "scope": "source.vjass"
       },
        "fnIsUnitAliveBJ": {
           "prefix": "fnIsUnitAliveBJ",
           "body": "IsUnitAliveBJ(${0:unit whichUnit})",
           "description": "fnIsUnitAliveBJ",
           "scope": "source.vjass"
       },
        "fnIsUnitGroupDeadBJEnum": {
           "prefix": "fnIsUnitGroupDeadBJEnum",
           "body": "IsUnitGroupDeadBJEnum(${0:nothing})",
           "description": "fnIsUnitGroupDeadBJEnum",
           "scope": "source.vjass"
       },
        "fnIsUnitGroupDeadBJ": {
           "prefix": "fnIsUnitGroupDeadBJ",
           "body": "IsUnitGroupDeadBJ(${0:group g})",
           "description": "fnIsUnitGroupDeadBJ",
           "scope": "source.vjass"
       },
        "fnIsUnitGroupEmptyBJEnum": {
           "prefix": "fnIsUnitGroupEmptyBJEnum",
           "body": "IsUnitGroupEmptyBJEnum(${0:nothing})",
           "description": "fnIsUnitGroupEmptyBJEnum",
           "scope": "source.vjass"
       },
        "fnIsUnitGroupEmptyBJ": {
           "prefix": "fnIsUnitGroupEmptyBJ",
           "body": "IsUnitGroupEmptyBJ(${0:group g})",
           "description": "fnIsUnitGroupEmptyBJ",
           "scope": "source.vjass"
       },
        "fnIsUnitGroupInRectBJEnum": {
           "prefix": "fnIsUnitGroupInRectBJEnum",
           "body": "IsUnitGroupInRectBJEnum(${0:nothing})",
           "description": "fnIsUnitGroupInRectBJEnum",
           "scope": "source.vjass"
       },
        "fnIsUnitGroupInRectBJ": {
           "prefix": "fnIsUnitGroupInRectBJ",
           "body": "IsUnitGroupInRectBJ(${0:group g},${1:rect r})",
           "description": "fnIsUnitGroupInRectBJ",
           "scope": "source.vjass"
       },
        "fnIsUnitHiddenBJ": {
           "prefix": "fnIsUnitHiddenBJ",
           "body": "IsUnitHiddenBJ(${0:unit whichUnit})",
           "description": "fnIsUnitHiddenBJ",
           "scope": "source.vjass"
       },
        "fnShowUnitHide": {
           "prefix": "fnShowUnitHide",
           "body": "ShowUnitHide(${0:unit whichUnit})",
           "description": "fnShowUnitHide",
           "scope": "source.vjass"
       },
        "fnShowUnitShow": {
           "prefix": "fnShowUnitShow",
           "body": "ShowUnitShow(${0:unit whichUnit})",
           "description": "fnShowUnitShow",
           "scope": "source.vjass"
       },
        "fnIssueHauntOrderAtLocBJFilter": {
           "prefix": "fnIssueHauntOrderAtLocBJFilter",
           "body": "IssueHauntOrderAtLocBJFilter(${0:nothing})",
           "description": "fnIssueHauntOrderAtLocBJFilter",
           "scope": "source.vjass"
       },
        "fnIssueHauntOrderAtLocBJ": {
           "prefix": "fnIssueHauntOrderAtLocBJ",
           "body": "IssueHauntOrderAtLocBJ(${0:location loc},${1:unit whichPeon})",
           "description": "fnIssueHauntOrderAtLocBJ",
           "scope": "source.vjass"
       },
        "fnIssueBuildOrderByIdLocBJ": {
           "prefix": "fnIssueBuildOrderByIdLocBJ",
           "body": "IssueBuildOrderByIdLocBJ(${0:integer unitId},${1:location loc},${2:unit whichPeon})",
           "description": "fnIssueBuildOrderByIdLocBJ",
           "scope": "source.vjass"
       },
        "fnIssueTrainOrderByIdBJ": {
           "prefix": "fnIssueTrainOrderByIdBJ",
           "body": "IssueTrainOrderByIdBJ(${0:integer unitId},${1:unit whichUnit})",
           "description": "fnIssueTrainOrderByIdBJ",
           "scope": "source.vjass"
       },
        "fnGroupTrainOrderByIdBJ": {
           "prefix": "fnGroupTrainOrderByIdBJ",
           "body": "GroupTrainOrderByIdBJ(${0:integer unitId},${1:group g})",
           "description": "fnGroupTrainOrderByIdBJ",
           "scope": "source.vjass"
       },
        "fnIssueUpgradeOrderByIdBJ": {
           "prefix": "fnIssueUpgradeOrderByIdBJ",
           "body": "IssueUpgradeOrderByIdBJ(${0:integer techId},${1:unit whichUnit})",
           "description": "fnIssueUpgradeOrderByIdBJ",
           "scope": "source.vjass"
       },
        "fnGetAttackedUnitBJ": {
           "prefix": "fnGetAttackedUnitBJ",
           "body": "GetAttackedUnitBJ(${0:nothing})",
           "description": "fnGetAttackedUnitBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitFlyHeightBJ": {
           "prefix": "fnSetUnitFlyHeightBJ",
           "body": "SetUnitFlyHeightBJ(${0:real rate},${1:unit whichUnit})",
           "description": "fnSetUnitFlyHeightBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitTurnSpeedBJ": {
           "prefix": "fnSetUnitTurnSpeedBJ",
           "body": "SetUnitTurnSpeedBJ(${0:real turnSpeed},${1:unit whichUnit})",
           "description": "fnSetUnitTurnSpeedBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitPropWindowBJ": {
           "prefix": "fnSetUnitPropWindowBJ",
           "body": "SetUnitPropWindowBJ(${0:real propWindow},${1:unit whichUnit})",
           "description": "fnSetUnitPropWindowBJ",
           "scope": "source.vjass"
       },
        "fnGetUnitPropWindowBJ": {
           "prefix": "fnGetUnitPropWindowBJ",
           "body": "GetUnitPropWindowBJ(${0:unit whichUnit})",
           "description": "fnGetUnitPropWindowBJ",
           "scope": "source.vjass"
       },
        "fnGetUnitDefaultPropWindowBJ": {
           "prefix": "fnGetUnitDefaultPropWindowBJ",
           "body": "GetUnitDefaultPropWindowBJ(${0:unit whichUnit})",
           "description": "fnGetUnitDefaultPropWindowBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitBlendTimeBJ": {
           "prefix": "fnSetUnitBlendTimeBJ",
           "body": "SetUnitBlendTimeBJ(${0:real blendTime},${1:unit whichUnit})",
           "description": "fnSetUnitBlendTimeBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitAcquireRangeBJ": {
           "prefix": "fnSetUnitAcquireRangeBJ",
           "body": "SetUnitAcquireRangeBJ(${0:real acquireRange},${1:unit whichUnit})",
           "description": "fnSetUnitAcquireRangeBJ",
           "scope": "source.vjass"
       },
        "fnUnitSetCanSleepBJ": {
           "prefix": "fnUnitSetCanSleepBJ",
           "body": "UnitSetCanSleepBJ(${0:boolean canSleep},${1:unit whichUnit})",
           "description": "fnUnitSetCanSleepBJ",
           "scope": "source.vjass"
       },
        "fnUnitCanSleepBJ": {
           "prefix": "fnUnitCanSleepBJ",
           "body": "UnitCanSleepBJ(${0:unit whichUnit})",
           "description": "fnUnitCanSleepBJ",
           "scope": "source.vjass"
       },
        "fnUnitWakeUpBJ": {
           "prefix": "fnUnitWakeUpBJ",
           "body": "UnitWakeUpBJ(${0:unit whichUnit})",
           "description": "fnUnitWakeUpBJ",
           "scope": "source.vjass"
       },
        "fnUnitIsSleepingBJ": {
           "prefix": "fnUnitIsSleepingBJ",
           "body": "UnitIsSleepingBJ(${0:unit whichUnit})",
           "description": "fnUnitIsSleepingBJ",
           "scope": "source.vjass"
       },
        "fnWakePlayerUnitsEnum": {
           "prefix": "fnWakePlayerUnitsEnum",
           "body": "WakePlayerUnitsEnum(${0:nothing})",
           "description": "fnWakePlayerUnitsEnum",
           "scope": "source.vjass"
       },
        "fnWakePlayerUnits": {
           "prefix": "fnWakePlayerUnits",
           "body": "WakePlayerUnits(${0:player whichPlayer})",
           "description": "fnWakePlayerUnits",
           "scope": "source.vjass"
       },
        "fnEnableCreepSleepBJ": {
           "prefix": "fnEnableCreepSleepBJ",
           "body": "EnableCreepSleepBJ(${0:boolean enable})",
           "description": "fnEnableCreepSleepBJ",
           "scope": "source.vjass"
       },
        "fnUnitGenerateAlarms": {
           "prefix": "fnUnitGenerateAlarms",
           "body": "UnitGenerateAlarms(${0:boolean generate},${1:unit whichUnit})",
           "description": "fnUnitGenerateAlarms",
           "scope": "source.vjass"
       },
        "fnDoesUnitGenerateAlarms": {
           "prefix": "fnDoesUnitGenerateAlarms",
           "body": "DoesUnitGenerateAlarms(${0:unit whichUnit})",
           "description": "fnDoesUnitGenerateAlarms",
           "scope": "source.vjass"
       },
        "fnPauseAllUnitsBJEnum": {
           "prefix": "fnPauseAllUnitsBJEnum",
           "body": "PauseAllUnitsBJEnum(${0:nothing})",
           "description": "fnPauseAllUnitsBJEnum",
           "scope": "source.vjass"
       },
        "fnPauseAllUnitsBJ": {
           "prefix": "fnPauseAllUnitsBJ",
           "body": "PauseAllUnitsBJ(${0:boolean pause})",
           "description": "fnPauseAllUnitsBJ",
           "scope": "source.vjass"
       },
        "fnPauseUnitBJ": {
           "prefix": "fnPauseUnitBJ",
           "body": "PauseUnitBJ(${0:boolean pause},${1:unit whichUnit})",
           "description": "fnPauseUnitBJ",
           "scope": "source.vjass"
       },
        "fnIsUnitPausedBJ": {
           "prefix": "fnIsUnitPausedBJ",
           "body": "IsUnitPausedBJ(${0:unit whichUnit})",
           "description": "fnIsUnitPausedBJ",
           "scope": "source.vjass"
       },
        "fnUnitPauseTimedLifeBJ": {
           "prefix": "fnUnitPauseTimedLifeBJ",
           "body": "UnitPauseTimedLifeBJ(${0:boolean flag},${1:unit whichUnit})",
           "description": "fnUnitPauseTimedLifeBJ",
           "scope": "source.vjass"
       },
        "fnUnitApplyTimedLifeBJ": {
           "prefix": "fnUnitApplyTimedLifeBJ",
           "body": "UnitApplyTimedLifeBJ(${0:real duration},${1:integer buffId},${2:unit whichUnit})",
           "description": "fnUnitApplyTimedLifeBJ",
           "scope": "source.vjass"
       },
        "fnUnitShareVisionBJ": {
           "prefix": "fnUnitShareVisionBJ",
           "body": "UnitShareVisionBJ(${0:player whichPlayer},${1:boolean share},${2:unit whichUnit})",
           "description": "fnUnitShareVisionBJ",
           "scope": "source.vjass"
       },
        "fnUnitRemoveBuffsBJ": {
           "prefix": "fnUnitRemoveBuffsBJ",
           "body": "UnitRemoveBuffsBJ(${0:integer buffType},${1:unit whichUnit})",
           "description": "fnUnitRemoveBuffsBJ",
           "scope": "source.vjass"
       },
        "fnUnitRemoveBuffsExBJ": {
           "prefix": "fnUnitRemoveBuffsExBJ",
           "body": "UnitRemoveBuffsExBJ(${0:integer resist},${1:boolean bAura},${2:unit whichUnit})",
           "description": "fnUnitRemoveBuffsExBJ",
           "scope": "source.vjass"
       },
        "fnUnitCountBuffsExBJ": {
           "prefix": "fnUnitCountBuffsExBJ",
           "body": "UnitCountBuffsExBJ(${0:integer resist},${1:boolean bAura},${2:unit whichUnit})",
           "description": "fnUnitCountBuffsExBJ",
           "scope": "source.vjass"
       },
        "fnUnitRemoveAbilityBJ": {
           "prefix": "fnUnitRemoveAbilityBJ",
           "body": "UnitRemoveAbilityBJ(${0:integer abilityId},${1:unit whichUnit})",
           "description": "fnUnitRemoveAbilityBJ",
           "scope": "source.vjass"
       },
        "fnUnitAddAbilityBJ": {
           "prefix": "fnUnitAddAbilityBJ",
           "body": "UnitAddAbilityBJ(${0:integer abilityId},${1:unit whichUnit})",
           "description": "fnUnitAddAbilityBJ",
           "scope": "source.vjass"
       },
        "fnUnitRemoveTypeBJ": {
           "prefix": "fnUnitRemoveTypeBJ",
           "body": "UnitRemoveTypeBJ(${0:unittype whichType},${1:unit whichUnit})",
           "description": "fnUnitRemoveTypeBJ",
           "scope": "source.vjass"
       },
        "fnUnitAddTypeBJ": {
           "prefix": "fnUnitAddTypeBJ",
           "body": "UnitAddTypeBJ(${0:unittype whichType},${1:unit whichUnit})",
           "description": "fnUnitAddTypeBJ",
           "scope": "source.vjass"
       },
        "fnUnitMakeAbilityPermanentBJ": {
           "prefix": "fnUnitMakeAbilityPermanentBJ",
           "body": "UnitMakeAbilityPermanentBJ(${0:integer abilityId},${1:boolean permanent},${2:unit whichUnit})",
           "description": "fnUnitMakeAbilityPermanentBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitExplodedBJ": {
           "prefix": "fnSetUnitExplodedBJ",
           "body": "SetUnitExplodedBJ(${0:boolean exploded},${1:unit whichUnit})",
           "description": "fnSetUnitExplodedBJ",
           "scope": "source.vjass"
       },
        "fnExplodeUnitBJ": {
           "prefix": "fnExplodeUnitBJ",
           "body": "ExplodeUnitBJ(${0:unit whichUnit})",
           "description": "fnExplodeUnitBJ",
           "scope": "source.vjass"
       },
        "fnGetTransportUnitBJ": {
           "prefix": "fnGetTransportUnitBJ",
           "body": "GetTransportUnitBJ(${0:nothing})",
           "description": "fnGetTransportUnitBJ",
           "scope": "source.vjass"
       },
        "fnGetLoadedUnitBJ": {
           "prefix": "fnGetLoadedUnitBJ",
           "body": "GetLoadedUnitBJ(${0:nothing})",
           "description": "fnGetLoadedUnitBJ",
           "scope": "source.vjass"
       },
        "fnIsUnitInTransportBJ": {
           "prefix": "fnIsUnitInTransportBJ",
           "body": "IsUnitInTransportBJ(${0:unit whichTransport})",
           "description": "fnIsUnitInTransportBJ",
           "scope": "source.vjass"
       },
        "fnIsUnitLoadedBJ": {
           "prefix": "fnIsUnitLoadedBJ",
           "body": "IsUnitLoadedBJ(${0:unit whichUnit})",
           "description": "fnIsUnitLoadedBJ",
           "scope": "source.vjass"
       },
        "fnIsUnitIllusionBJ": {
           "prefix": "fnIsUnitIllusionBJ",
           "body": "IsUnitIllusionBJ(${0:unit whichUnit})",
           "description": "fnIsUnitIllusionBJ",
           "scope": "source.vjass"
       },
        "fnReplaceUnitBJ": {
           "prefix": "fnReplaceUnitBJ",
           "body": "ReplaceUnitBJ(${0:integer unitStateMethod},${1:unit whichUnit})",
           "description": "fnReplaceUnitBJ",
           "scope": "source.vjass"
       },
        "fnGetLastReplacedUnitBJ": {
           "prefix": "fnGetLastReplacedUnitBJ",
           "body": "GetLastReplacedUnitBJ(${0:nothing})",
           "description": "fnGetLastReplacedUnitBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitPositionLocFacingBJ": {
           "prefix": "fnSetUnitPositionLocFacingBJ",
           "body": "SetUnitPositionLocFacingBJ(${0:real facing},${1:location loc},${2:unit whichUnit})",
           "description": "fnSetUnitPositionLocFacingBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitPositionLocFacingLocBJ": {
           "prefix": "fnSetUnitPositionLocFacingLocBJ",
           "body": "SetUnitPositionLocFacingLocBJ(${0:location lookAt},${1:unit whichUnit})",
           "description": "fnSetUnitPositionLocFacingLocBJ",
           "scope": "source.vjass"
       },
        "fnAddItemToStockBJ": {
           "prefix": "fnAddItemToStockBJ",
           "body": "AddItemToStockBJ(${0:integer stockMax},${1:unit whichUnit})",
           "description": "fnAddItemToStockBJ",
           "scope": "source.vjass"
       },
        "fnAddUnitToStockBJ": {
           "prefix": "fnAddUnitToStockBJ",
           "body": "AddUnitToStockBJ(${0:integer stockMax},${1:unit whichUnit})",
           "description": "fnAddUnitToStockBJ",
           "scope": "source.vjass"
       },
        "fnRemoveItemFromStockBJ": {
           "prefix": "fnRemoveItemFromStockBJ",
           "body": "RemoveItemFromStockBJ(${0:integer itemId},${1:unit whichUnit})",
           "description": "fnRemoveItemFromStockBJ",
           "scope": "source.vjass"
       },
        "fnRemoveUnitFromStockBJ": {
           "prefix": "fnRemoveUnitFromStockBJ",
           "body": "RemoveUnitFromStockBJ(${0:integer unitId},${1:unit whichUnit})",
           "description": "fnRemoveUnitFromStockBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitUseFoodBJ": {
           "prefix": "fnSetUnitUseFoodBJ",
           "body": "SetUnitUseFoodBJ(${0:boolean enable},${1:unit whichUnit})",
           "description": "fnSetUnitUseFoodBJ",
           "scope": "source.vjass"
       },
        "fnUnitDamagePointLoc": {
           "prefix": "fnUnitDamagePointLoc",
           "body": "UnitDamagePointLoc(${0:real amount},${1:attacktype whichAttack},${2:location loc},${3:unit whichUnit},${4:damagetype whichDamage})",
           "description": "fnUnitDamagePointLoc",
           "scope": "source.vjass"
       },
        "fnUnitDamageTargetBJ": {
           "prefix": "fnUnitDamageTargetBJ",
           "body": "UnitDamageTargetBJ(${0:real amount},${1:damagetype whichDamage},${2:attacktype whichAttack},${3:unit target})",
           "description": "fnUnitDamageTargetBJ",
           "scope": "source.vjass"
       },
        "fnCreateDestructableLoc": {
           "prefix": "fnCreateDestructableLoc",
           "body": "CreateDestructableLoc(${0:real scale},${1:integer variation},${2:location loc})",
           "description": "fnCreateDestructableLoc",
           "scope": "source.vjass"
       },
        "fnCreateDeadDestructableLocBJ": {
           "prefix": "fnCreateDeadDestructableLocBJ",
           "body": "CreateDeadDestructableLocBJ(${0:real scale},${1:integer variation},${2:location loc})",
           "description": "fnCreateDeadDestructableLocBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedDestructable": {
           "prefix": "fnGetLastCreatedDestructable",
           "body": "GetLastCreatedDestructable(${0:nothing})",
           "description": "fnGetLastCreatedDestructable",
           "scope": "source.vjass"
       },
        "fnShowDestructableBJ": {
           "prefix": "fnShowDestructableBJ",
           "body": "ShowDestructableBJ(${0:boolean flag},${1:destructable d})",
           "description": "fnShowDestructableBJ",
           "scope": "source.vjass"
       },
        "fnSetDestructableInvulnerableBJ": {
           "prefix": "fnSetDestructableInvulnerableBJ",
           "body": "SetDestructableInvulnerableBJ(${0:boolean flag},${1:destructable d})",
           "description": "fnSetDestructableInvulnerableBJ",
           "scope": "source.vjass"
       },
        "fnIsDestructableInvulnerableBJ": {
           "prefix": "fnIsDestructableInvulnerableBJ",
           "body": "IsDestructableInvulnerableBJ(${0:destructable d})",
           "description": "fnIsDestructableInvulnerableBJ",
           "scope": "source.vjass"
       },
        "fnGetDestructableLoc": {
           "prefix": "fnGetDestructableLoc",
           "body": "GetDestructableLoc(${0:destructable whichDestructable})",
           "description": "fnGetDestructableLoc",
           "scope": "source.vjass"
       },
        "fnEnumDestructablesInRectAll": {
           "prefix": "fnEnumDestructablesInRectAll",
           "body": "EnumDestructablesInRectAll(${0:code actionFunc},${1:rect r})",
           "description": "fnEnumDestructablesInRectAll",
           "scope": "source.vjass"
       },
        "fnEnumDestructablesInCircleBJFilter": {
           "prefix": "fnEnumDestructablesInCircleBJFilter",
           "body": "EnumDestructablesInCircleBJFilter(${0:nothing})",
           "description": "fnEnumDestructablesInCircleBJFilter",
           "scope": "source.vjass"
       },
        "fnIsDestructableDeadBJ": {
           "prefix": "fnIsDestructableDeadBJ",
           "body": "IsDestructableDeadBJ(${0:destructable d})",
           "description": "fnIsDestructableDeadBJ",
           "scope": "source.vjass"
       },
        "fnIsDestructableAliveBJ": {
           "prefix": "fnIsDestructableAliveBJ",
           "body": "IsDestructableAliveBJ(${0:destructable d})",
           "description": "fnIsDestructableAliveBJ",
           "scope": "source.vjass"
       },
        "fnRandomDestructableInRectBJEnum": {
           "prefix": "fnRandomDestructableInRectBJEnum",
           "body": "RandomDestructableInRectBJEnum(${0:nothing})",
           "description": "fnRandomDestructableInRectBJEnum",
           "scope": "source.vjass"
       },
        "fnRandomDestructableInRectBJ": {
           "prefix": "fnRandomDestructableInRectBJ",
           "body": "RandomDestructableInRectBJ(${0:boolexpr filter},${1:rect r})",
           "description": "fnRandomDestructableInRectBJ",
           "scope": "source.vjass"
       },
        "fnRandomDestructableInRectSimpleBJ": {
           "prefix": "fnRandomDestructableInRectSimpleBJ",
           "body": "RandomDestructableInRectSimpleBJ(${0:rect r})",
           "description": "fnRandomDestructableInRectSimpleBJ",
           "scope": "source.vjass"
       },
        "fnEnumDestructablesInCircleBJ": {
           "prefix": "fnEnumDestructablesInCircleBJ",
           "body": "EnumDestructablesInCircleBJ(${0:real radius},${1:code actionFunc},${2:location loc})",
           "description": "fnEnumDestructablesInCircleBJ",
           "scope": "source.vjass"
       },
        "fnSetDestructableLifePercentBJ": {
           "prefix": "fnSetDestructableLifePercentBJ",
           "body": "SetDestructableLifePercentBJ(${0:real percent},${1:destructable d})",
           "description": "fnSetDestructableLifePercentBJ",
           "scope": "source.vjass"
       },
        "fnSetDestructableMaxLifeBJ": {
           "prefix": "fnSetDestructableMaxLifeBJ",
           "body": "SetDestructableMaxLifeBJ(${0:real max},${1:destructable d})",
           "description": "fnSetDestructableMaxLifeBJ",
           "scope": "source.vjass"
       },
        "fnModifyGateBJ": {
           "prefix": "fnModifyGateBJ",
           "body": "ModifyGateBJ(${0:integer gateOperation},${1:destructable d})",
           "description": "fnModifyGateBJ",
           "scope": "source.vjass"
       },
        "fnGetElevatorHeight": {
           "prefix": "fnGetElevatorHeight",
           "body": "GetElevatorHeight(${0:destructable d})",
           "description": "fnGetElevatorHeight",
           "scope": "source.vjass"
       },
        "fnChangeElevatorHeight": {
           "prefix": "fnChangeElevatorHeight",
           "body": "ChangeElevatorHeight(${0:integer newHeight},${1:destructable d})",
           "description": "fnChangeElevatorHeight",
           "scope": "source.vjass"
       },
        "fnNudgeUnitsInRectEnum": {
           "prefix": "fnNudgeUnitsInRectEnum",
           "body": "NudgeUnitsInRectEnum(${0:nothing})",
           "description": "fnNudgeUnitsInRectEnum",
           "scope": "source.vjass"
       },
        "fnNudgeItemsInRectEnum": {
           "prefix": "fnNudgeItemsInRectEnum",
           "body": "NudgeItemsInRectEnum(${0:nothing})",
           "description": "fnNudgeItemsInRectEnum",
           "scope": "source.vjass"
       },
        "fnNudgeObjectsInRect": {
           "prefix": "fnNudgeObjectsInRect",
           "body": "NudgeObjectsInRect(${0:rect nudgeArea})",
           "description": "fnNudgeObjectsInRect",
           "scope": "source.vjass"
       },
        "fnNearbyElevatorExistsEnum": {
           "prefix": "fnNearbyElevatorExistsEnum",
           "body": "NearbyElevatorExistsEnum(${0:nothing})",
           "description": "fnNearbyElevatorExistsEnum",
           "scope": "source.vjass"
       },
        "fnNearbyElevatorExists": {
           "prefix": "fnNearbyElevatorExists",
           "body": "NearbyElevatorExists(${0:real y})",
           "description": "fnNearbyElevatorExists",
           "scope": "source.vjass"
       },
        "fnFindElevatorWallBlockerEnum": {
           "prefix": "fnFindElevatorWallBlockerEnum",
           "body": "FindElevatorWallBlockerEnum(${0:nothing})",
           "description": "fnFindElevatorWallBlockerEnum",
           "scope": "source.vjass"
       },
        "fnChangeElevatorWallBlocker": {
           "prefix": "fnChangeElevatorWallBlocker",
           "body": "ChangeElevatorWallBlocker(${0:real facing},${1:boolean open})",
           "description": "fnChangeElevatorWallBlocker",
           "scope": "source.vjass"
       },
        "fnChangeElevatorWalls": {
           "prefix": "fnChangeElevatorWalls",
           "body": "ChangeElevatorWalls(${0:integer walls},${1:boolean open},${2:destructable d})",
           "description": "fnChangeElevatorWalls",
           "scope": "source.vjass"
       },
        "fnWaygateActivateBJ": {
           "prefix": "fnWaygateActivateBJ",
           "body": "WaygateActivateBJ(${0:boolean activate},${1:unit waygate})",
           "description": "fnWaygateActivateBJ",
           "scope": "source.vjass"
       },
        "fnWaygateIsActiveBJ": {
           "prefix": "fnWaygateIsActiveBJ",
           "body": "WaygateIsActiveBJ(${0:unit waygate})",
           "description": "fnWaygateIsActiveBJ",
           "scope": "source.vjass"
       },
        "fnWaygateSetDestinationLocBJ": {
           "prefix": "fnWaygateSetDestinationLocBJ",
           "body": "WaygateSetDestinationLocBJ(${0:location loc},${1:unit waygate})",
           "description": "fnWaygateSetDestinationLocBJ",
           "scope": "source.vjass"
       },
        "fnWaygateGetDestinationLocBJ": {
           "prefix": "fnWaygateGetDestinationLocBJ",
           "body": "WaygateGetDestinationLocBJ(${0:unit waygate})",
           "description": "fnWaygateGetDestinationLocBJ",
           "scope": "source.vjass"
       },
        "fnUnitSetUsesAltIconBJ": {
           "prefix": "fnUnitSetUsesAltIconBJ",
           "body": "UnitSetUsesAltIconBJ(${0:boolean flag},${1:unit whichUnit})",
           "description": "fnUnitSetUsesAltIconBJ",
           "scope": "source.vjass"
       },
        "fnForceUIKeyBJ": {
           "prefix": "fnForceUIKeyBJ",
           "body": "ForceUIKeyBJ(${0:player whichPlayer},${1:string key})",
           "description": "fnForceUIKeyBJ",
           "scope": "source.vjass"
       },
        "fnForceUICancelBJ": {
           "prefix": "fnForceUICancelBJ",
           "body": "ForceUICancelBJ(${0:player whichPlayer})",
           "description": "fnForceUICancelBJ",
           "scope": "source.vjass"
       },
        "fnForGroupBJ": {
           "prefix": "fnForGroupBJ",
           "body": "ForGroupBJ(${0:code callback},${1:group whichGroup})",
           "description": "fnForGroupBJ",
           "scope": "source.vjass"
       },
        "fnGroupAddUnitSimple": {
           "prefix": "fnGroupAddUnitSimple",
           "body": "GroupAddUnitSimple(${0:group whichGroup},${1:unit whichUnit})",
           "description": "fnGroupAddUnitSimple",
           "scope": "source.vjass"
       },
        "fnGroupRemoveUnitSimple": {
           "prefix": "fnGroupRemoveUnitSimple",
           "body": "GroupRemoveUnitSimple(${0:group whichGroup},${1:unit whichUnit})",
           "description": "fnGroupRemoveUnitSimple",
           "scope": "source.vjass"
       },
        "fnGroupAddGroupEnum": {
           "prefix": "fnGroupAddGroupEnum",
           "body": "GroupAddGroupEnum(${0:nothing})",
           "description": "fnGroupAddGroupEnum",
           "scope": "source.vjass"
       },
        "fnGroupAddGroup": {
           "prefix": "fnGroupAddGroup",
           "body": "GroupAddGroup(${0:group destGroup})",
           "description": "fnGroupAddGroup",
           "scope": "source.vjass"
       },
        "fnGroupRemoveGroupEnum": {
           "prefix": "fnGroupRemoveGroupEnum",
           "body": "GroupRemoveGroupEnum(${0:nothing})",
           "description": "fnGroupRemoveGroupEnum",
           "scope": "source.vjass"
       },
        "fnGroupRemoveGroup": {
           "prefix": "fnGroupRemoveGroup",
           "body": "GroupRemoveGroup(${0:group destGroup})",
           "description": "fnGroupRemoveGroup",
           "scope": "source.vjass"
       },
        "fnForceAddPlayerSimple": {
           "prefix": "fnForceAddPlayerSimple",
           "body": "ForceAddPlayerSimple(${0:player whichPlayer},${1:force whichForce})",
           "description": "fnForceAddPlayerSimple",
           "scope": "source.vjass"
       },
        "fnForceRemovePlayerSimple": {
           "prefix": "fnForceRemovePlayerSimple",
           "body": "ForceRemovePlayerSimple(${0:player whichPlayer},${1:force whichForce})",
           "description": "fnForceRemovePlayerSimple",
           "scope": "source.vjass"
       },
        "fnGroupPickRandomUnitEnum": {
           "prefix": "fnGroupPickRandomUnitEnum",
           "body": "GroupPickRandomUnitEnum(${0:nothing})",
           "description": "fnGroupPickRandomUnitEnum",
           "scope": "source.vjass"
       },
        "fnGroupPickRandomUnit": {
           "prefix": "fnGroupPickRandomUnit",
           "body": "GroupPickRandomUnit(${0:group whichGroup})",
           "description": "fnGroupPickRandomUnit",
           "scope": "source.vjass"
       },
        "fnForcePickRandomPlayerEnum": {
           "prefix": "fnForcePickRandomPlayerEnum",
           "body": "ForcePickRandomPlayerEnum(${0:nothing})",
           "description": "fnForcePickRandomPlayerEnum",
           "scope": "source.vjass"
       },
        "fnForcePickRandomPlayer": {
           "prefix": "fnForcePickRandomPlayer",
           "body": "ForcePickRandomPlayer(${0:force whichForce})",
           "description": "fnForcePickRandomPlayer",
           "scope": "source.vjass"
       },
        "fnEnumUnitsSelected": {
           "prefix": "fnEnumUnitsSelected",
           "body": "EnumUnitsSelected(${0:player whichPlayer},${1:code enumAction},${2:boolexpr enumFilter})",
           "description": "fnEnumUnitsSelected",
           "scope": "source.vjass"
       },
        "fnGetUnitsInRectMatching": {
           "prefix": "fnGetUnitsInRectMatching",
           "body": "GetUnitsInRectMatching(${0:boolexpr filter},${1:rect r})",
           "description": "fnGetUnitsInRectMatching",
           "scope": "source.vjass"
       },
        "fnGetUnitsInRectAll": {
           "prefix": "fnGetUnitsInRectAll",
           "body": "GetUnitsInRectAll(${0:rect r})",
           "description": "fnGetUnitsInRectAll",
           "scope": "source.vjass"
       },
        "fnGetUnitsInRectOfPlayerFilter": {
           "prefix": "fnGetUnitsInRectOfPlayerFilter",
           "body": "GetUnitsInRectOfPlayerFilter(${0:nothing})",
           "description": "fnGetUnitsInRectOfPlayerFilter",
           "scope": "source.vjass"
       },
        "fnGetUnitsInRectOfPlayer": {
           "prefix": "fnGetUnitsInRectOfPlayer",
           "body": "GetUnitsInRectOfPlayer(${0:player whichPlayer},${1:rect r})",
           "description": "fnGetUnitsInRectOfPlayer",
           "scope": "source.vjass"
       },
        "fnGetUnitsInRangeOfLocMatching": {
           "prefix": "fnGetUnitsInRangeOfLocMatching",
           "body": "GetUnitsInRangeOfLocMatching(${0:real radius},${1:location whichLocation},${2:boolexpr filter})",
           "description": "fnGetUnitsInRangeOfLocMatching",
           "scope": "source.vjass"
       },
        "fnGetUnitsInRangeOfLocAll": {
           "prefix": "fnGetUnitsInRangeOfLocAll",
           "body": "GetUnitsInRangeOfLocAll(${0:real radius},${1:location whichLocation})",
           "description": "fnGetUnitsInRangeOfLocAll",
           "scope": "source.vjass"
       },
        "fnGetUnitsOfTypeIdAllFilter": {
           "prefix": "fnGetUnitsOfTypeIdAllFilter",
           "body": "GetUnitsOfTypeIdAllFilter(${0:nothing})",
           "description": "fnGetUnitsOfTypeIdAllFilter",
           "scope": "source.vjass"
       },
        "fnGetUnitsOfTypeIdAll": {
           "prefix": "fnGetUnitsOfTypeIdAll",
           "body": "GetUnitsOfTypeIdAll(${0:integer unitid})",
           "description": "fnGetUnitsOfTypeIdAll",
           "scope": "source.vjass"
       },
        "fnGetUnitsOfPlayerMatching": {
           "prefix": "fnGetUnitsOfPlayerMatching",
           "body": "GetUnitsOfPlayerMatching(${0:player whichPlayer},${1:boolexpr filter})",
           "description": "fnGetUnitsOfPlayerMatching",
           "scope": "source.vjass"
       },
        "fnGetUnitsOfPlayerAll": {
           "prefix": "fnGetUnitsOfPlayerAll",
           "body": "GetUnitsOfPlayerAll(${0:player whichPlayer})",
           "description": "fnGetUnitsOfPlayerAll",
           "scope": "source.vjass"
       },
        "fnGetUnitsOfPlayerAndTypeIdFilter": {
           "prefix": "fnGetUnitsOfPlayerAndTypeIdFilter",
           "body": "GetUnitsOfPlayerAndTypeIdFilter(${0:nothing})",
           "description": "fnGetUnitsOfPlayerAndTypeIdFilter",
           "scope": "source.vjass"
       },
        "fnGetUnitsOfPlayerAndTypeId": {
           "prefix": "fnGetUnitsOfPlayerAndTypeId",
           "body": "GetUnitsOfPlayerAndTypeId(${0:player whichPlayer},${1:integer unitid})",
           "description": "fnGetUnitsOfPlayerAndTypeId",
           "scope": "source.vjass"
       },
        "fnGetUnitsSelectedAll": {
           "prefix": "fnGetUnitsSelectedAll",
           "body": "GetUnitsSelectedAll(${0:player whichPlayer})",
           "description": "fnGetUnitsSelectedAll",
           "scope": "source.vjass"
       },
        "fnGetForceOfPlayer": {
           "prefix": "fnGetForceOfPlayer",
           "body": "GetForceOfPlayer(${0:player whichPlayer})",
           "description": "fnGetForceOfPlayer",
           "scope": "source.vjass"
       },
        "fnGetPlayersAll": {
           "prefix": "fnGetPlayersAll",
           "body": "GetPlayersAll(${0:nothing})",
           "description": "fnGetPlayersAll",
           "scope": "source.vjass"
       },
        "fnGetPlayersByMapControl": {
           "prefix": "fnGetPlayersByMapControl",
           "body": "GetPlayersByMapControl(${0:mapcontrol whichControl})",
           "description": "fnGetPlayersByMapControl",
           "scope": "source.vjass"
       },
        "fnGetPlayersAllies": {
           "prefix": "fnGetPlayersAllies",
           "body": "GetPlayersAllies(${0:player whichPlayer})",
           "description": "fnGetPlayersAllies",
           "scope": "source.vjass"
       },
        "fnGetPlayersEnemies": {
           "prefix": "fnGetPlayersEnemies",
           "body": "GetPlayersEnemies(${0:player whichPlayer})",
           "description": "fnGetPlayersEnemies",
           "scope": "source.vjass"
       },
        "fnGetPlayersMatching": {
           "prefix": "fnGetPlayersMatching",
           "body": "GetPlayersMatching(${0:boolexpr filter})",
           "description": "fnGetPlayersMatching",
           "scope": "source.vjass"
       },
        "fnCountUnitsInGroupEnum": {
           "prefix": "fnCountUnitsInGroupEnum",
           "body": "CountUnitsInGroupEnum(${0:nothing})",
           "description": "fnCountUnitsInGroupEnum",
           "scope": "source.vjass"
       },
        "fnCountUnitsInGroup": {
           "prefix": "fnCountUnitsInGroup",
           "body": "CountUnitsInGroup(${0:group g})",
           "description": "fnCountUnitsInGroup",
           "scope": "source.vjass"
       },
        "fnCountPlayersInForceEnum": {
           "prefix": "fnCountPlayersInForceEnum",
           "body": "CountPlayersInForceEnum(${0:nothing})",
           "description": "fnCountPlayersInForceEnum",
           "scope": "source.vjass"
       },
        "fnCountPlayersInForceBJ": {
           "prefix": "fnCountPlayersInForceBJ",
           "body": "CountPlayersInForceBJ(${0:force f})",
           "description": "fnCountPlayersInForceBJ",
           "scope": "source.vjass"
       },
        "fnGetRandomSubGroupEnum": {
           "prefix": "fnGetRandomSubGroupEnum",
           "body": "GetRandomSubGroupEnum(${0:nothing})",
           "description": "fnGetRandomSubGroupEnum",
           "scope": "source.vjass"
       },
        "fnGetRandomSubGroup": {
           "prefix": "fnGetRandomSubGroup",
           "body": "GetRandomSubGroup(${0:integer count},${1:group sourceGroup})",
           "description": "fnGetRandomSubGroup",
           "scope": "source.vjass"
       },
        "fnLivingPlayerUnitsOfTypeIdFilter": {
           "prefix": "fnLivingPlayerUnitsOfTypeIdFilter",
           "body": "LivingPlayerUnitsOfTypeIdFilter(${0:nothing})",
           "description": "fnLivingPlayerUnitsOfTypeIdFilter",
           "scope": "source.vjass"
       },
        "fnCountLivingPlayerUnitsOfTypeId": {
           "prefix": "fnCountLivingPlayerUnitsOfTypeId",
           "body": "CountLivingPlayerUnitsOfTypeId(${0:integer unitId},${1:player whichPlayer})",
           "description": "fnCountLivingPlayerUnitsOfTypeId",
           "scope": "source.vjass"
       },
        "fnResetUnitAnimation": {
           "prefix": "fnResetUnitAnimation",
           "body": "ResetUnitAnimation(${0:unit whichUnit})",
           "description": "fnResetUnitAnimation",
           "scope": "source.vjass"
       },
        "fnSetUnitTimeScalePercent": {
           "prefix": "fnSetUnitTimeScalePercent",
           "body": "SetUnitTimeScalePercent(${0:real percentScale},${1:unit whichUnit})",
           "description": "fnSetUnitTimeScalePercent",
           "scope": "source.vjass"
       },
        "fnSetUnitScalePercent": {
           "prefix": "fnSetUnitScalePercent",
           "body": "SetUnitScalePercent(${0:real percentScaleZ},${1:unit whichUnit})",
           "description": "fnSetUnitScalePercent",
           "scope": "source.vjass"
       },
        "fnSetUnitVertexColorBJ": {
           "prefix": "fnSetUnitVertexColorBJ",
           "body": "SetUnitVertexColorBJ(${0:real transparency},${1:unit whichUnit})",
           "description": "fnSetUnitVertexColorBJ",
           "scope": "source.vjass"
       },
        "fnUnitAddIndicatorBJ": {
           "prefix": "fnUnitAddIndicatorBJ",
           "body": "UnitAddIndicatorBJ(${0:real transparency},${1:unit whichUnit})",
           "description": "fnUnitAddIndicatorBJ",
           "scope": "source.vjass"
       },
        "fnDestructableAddIndicatorBJ": {
           "prefix": "fnDestructableAddIndicatorBJ",
           "body": "DestructableAddIndicatorBJ(${0:real transparency},${1:destructable whichDestructable})",
           "description": "fnDestructableAddIndicatorBJ",
           "scope": "source.vjass"
       },
        "fnItemAddIndicatorBJ": {
           "prefix": "fnItemAddIndicatorBJ",
           "body": "ItemAddIndicatorBJ(${0:real transparency},${1:item whichItem})",
           "description": "fnItemAddIndicatorBJ",
           "scope": "source.vjass"
       },
        "fnSetUnitFacingToFaceLocTimed": {
           "prefix": "fnSetUnitFacingToFaceLocTimed",
           "body": "SetUnitFacingToFaceLocTimed(${0:real duration},${1:location target},${2:unit whichUnit})",
           "description": "fnSetUnitFacingToFaceLocTimed",
           "scope": "source.vjass"
       },
        "fnSetUnitFacingToFaceUnitTimed": {
           "prefix": "fnSetUnitFacingToFaceUnitTimed",
           "body": "SetUnitFacingToFaceUnitTimed(${0:real duration},${1:unit target})",
           "description": "fnSetUnitFacingToFaceUnitTimed",
           "scope": "source.vjass"
       },
        "fnQueueUnitAnimationBJ": {
           "prefix": "fnQueueUnitAnimationBJ",
           "body": "QueueUnitAnimationBJ(${0:string whichAnimation},${1:unit whichUnit})",
           "description": "fnQueueUnitAnimationBJ",
           "scope": "source.vjass"
       },
        "fnSetDestructableAnimationBJ": {
           "prefix": "fnSetDestructableAnimationBJ",
           "body": "SetDestructableAnimationBJ(${0:string whichAnimation},${1:destructable d})",
           "description": "fnSetDestructableAnimationBJ",
           "scope": "source.vjass"
       },
        "fnQueueDestructableAnimationBJ": {
           "prefix": "fnQueueDestructableAnimationBJ",
           "body": "QueueDestructableAnimationBJ(${0:string whichAnimation},${1:destructable d})",
           "description": "fnQueueDestructableAnimationBJ",
           "scope": "source.vjass"
       },
        "fnSetDestAnimationSpeedPercent": {
           "prefix": "fnSetDestAnimationSpeedPercent",
           "body": "SetDestAnimationSpeedPercent(${0:real percentScale},${1:destructable d})",
           "description": "fnSetDestAnimationSpeedPercent",
           "scope": "source.vjass"
       },
        "fnDialogDisplayBJ": {
           "prefix": "fnDialogDisplayBJ",
           "body": "DialogDisplayBJ(${0:player whichPlayer},${1:boolean flag},${2:dialog whichDialog})",
           "description": "fnDialogDisplayBJ",
           "scope": "source.vjass"
       },
        "fnDialogSetMessageBJ": {
           "prefix": "fnDialogSetMessageBJ",
           "body": "DialogSetMessageBJ(${0:string message},${1:dialog whichDialog})",
           "description": "fnDialogSetMessageBJ",
           "scope": "source.vjass"
       },
        "fnDialogAddButtonBJ": {
           "prefix": "fnDialogAddButtonBJ",
           "body": "DialogAddButtonBJ(${0:string buttonText},${1:dialog whichDialog})",
           "description": "fnDialogAddButtonBJ",
           "scope": "source.vjass"
       },
        "fnDialogAddButtonWithHotkeyBJ": {
           "prefix": "fnDialogAddButtonWithHotkeyBJ",
           "body": "DialogAddButtonWithHotkeyBJ(${0:integer hotkey},${1:string buttonText},${2:dialog whichDialog})",
           "description": "fnDialogAddButtonWithHotkeyBJ",
           "scope": "source.vjass"
       },
        "fnDialogClearBJ": {
           "prefix": "fnDialogClearBJ",
           "body": "DialogClearBJ(${0:dialog whichDialog})",
           "description": "fnDialogClearBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedButtonBJ": {
           "prefix": "fnGetLastCreatedButtonBJ",
           "body": "GetLastCreatedButtonBJ(${0:nothing})",
           "description": "fnGetLastCreatedButtonBJ",
           "scope": "source.vjass"
       },
        "fnGetClickedButtonBJ": {
           "prefix": "fnGetClickedButtonBJ",
           "body": "GetClickedButtonBJ(${0:nothing})",
           "description": "fnGetClickedButtonBJ",
           "scope": "source.vjass"
       },
        "fnGetClickedDialogBJ": {
           "prefix": "fnGetClickedDialogBJ",
           "body": "GetClickedDialogBJ(${0:nothing})",
           "description": "fnGetClickedDialogBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerAllianceBJ": {
           "prefix": "fnSetPlayerAllianceBJ",
           "body": "SetPlayerAllianceBJ(${0:player otherPlayer},${1:boolean value},${2:alliancetype whichAllianceSetting})",
           "description": "fnSetPlayerAllianceBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerAllianceStateAllyBJ": {
           "prefix": "fnSetPlayerAllianceStateAllyBJ",
           "body": "SetPlayerAllianceStateAllyBJ(${0:player otherPlayer},${1:boolean flag})",
           "description": "fnSetPlayerAllianceStateAllyBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerAllianceStateVisionBJ": {
           "prefix": "fnSetPlayerAllianceStateVisionBJ",
           "body": "SetPlayerAllianceStateVisionBJ(${0:player otherPlayer},${1:boolean flag})",
           "description": "fnSetPlayerAllianceStateVisionBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerAllianceStateControlBJ": {
           "prefix": "fnSetPlayerAllianceStateControlBJ",
           "body": "SetPlayerAllianceStateControlBJ(${0:player otherPlayer},${1:boolean flag})",
           "description": "fnSetPlayerAllianceStateControlBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerAllianceStateFullControlBJ": {
           "prefix": "fnSetPlayerAllianceStateFullControlBJ",
           "body": "SetPlayerAllianceStateFullControlBJ(${0:player otherPlayer},${1:boolean flag})",
           "description": "fnSetPlayerAllianceStateFullControlBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerAllianceStateBJ": {
           "prefix": "fnSetPlayerAllianceStateBJ",
           "body": "SetPlayerAllianceStateBJ(${0:player otherPlayer},${1:integer allianceState})",
           "description": "fnSetPlayerAllianceStateBJ",
           "scope": "source.vjass"
       },
        "fnSetForceAllianceStateBJ": {
           "prefix": "fnSetForceAllianceStateBJ",
           "body": "SetForceAllianceStateBJ(${0:integer allianceState},${1:force targetForce})",
           "description": "fnSetForceAllianceStateBJ",
           "scope": "source.vjass"
       },
        "fnPlayersAreCoAllied": {
           "prefix": "fnPlayersAreCoAllied",
           "body": "PlayersAreCoAllied(${0:player playerB})",
           "description": "fnPlayersAreCoAllied",
           "scope": "source.vjass"
       },
        "fnShareEverythingWithTeamAI": {
           "prefix": "fnShareEverythingWithTeamAI",
           "body": "ShareEverythingWithTeamAI(${0:player whichPlayer})",
           "description": "fnShareEverythingWithTeamAI",
           "scope": "source.vjass"
       },
        "fnShareEverythingWithTeam": {
           "prefix": "fnShareEverythingWithTeam",
           "body": "ShareEverythingWithTeam(${0:player whichPlayer})",
           "description": "fnShareEverythingWithTeam",
           "scope": "source.vjass"
       },
        "fnConfigureNeutralVictim": {
           "prefix": "fnConfigureNeutralVictim",
           "body": "ConfigureNeutralVictim(${0:nothing})",
           "description": "fnConfigureNeutralVictim",
           "scope": "source.vjass"
       },
        "fnMakeUnitsPassiveForPlayerEnum": {
           "prefix": "fnMakeUnitsPassiveForPlayerEnum",
           "body": "MakeUnitsPassiveForPlayerEnum(${0:nothing})",
           "description": "fnMakeUnitsPassiveForPlayerEnum",
           "scope": "source.vjass"
       },
        "fnMakeUnitsPassiveForPlayer": {
           "prefix": "fnMakeUnitsPassiveForPlayer",
           "body": "MakeUnitsPassiveForPlayer(${0:player whichPlayer})",
           "description": "fnMakeUnitsPassiveForPlayer",
           "scope": "source.vjass"
       },
        "fnMakeUnitsPassiveForTeam": {
           "prefix": "fnMakeUnitsPassiveForTeam",
           "body": "MakeUnitsPassiveForTeam(${0:player whichPlayer})",
           "description": "fnMakeUnitsPassiveForTeam",
           "scope": "source.vjass"
       },
        "fnAllowVictoryDefeat": {
           "prefix": "fnAllowVictoryDefeat",
           "body": "AllowVictoryDefeat(${0:playergameresult gameResult})",
           "description": "fnAllowVictoryDefeat",
           "scope": "source.vjass"
       },
        "fnEndGameBJ": {
           "prefix": "fnEndGameBJ",
           "body": "EndGameBJ(${0:nothing})",
           "description": "fnEndGameBJ",
           "scope": "source.vjass"
       },
        "fnMeleeVictoryDialogBJ": {
           "prefix": "fnMeleeVictoryDialogBJ",
           "body": "MeleeVictoryDialogBJ(${0:player whichPlayer},${1:boolean leftGame})",
           "description": "fnMeleeVictoryDialogBJ",
           "scope": "source.vjass"
       },
        "fnMeleeDefeatDialogBJ": {
           "prefix": "fnMeleeDefeatDialogBJ",
           "body": "MeleeDefeatDialogBJ(${0:player whichPlayer},${1:boolean leftGame})",
           "description": "fnMeleeDefeatDialogBJ",
           "scope": "source.vjass"
       },
        "fnGameOverDialogBJ": {
           "prefix": "fnGameOverDialogBJ",
           "body": "GameOverDialogBJ(${0:player whichPlayer},${1:boolean leftGame})",
           "description": "fnGameOverDialogBJ",
           "scope": "source.vjass"
       },
        "fnRemovePlayerPreserveUnitsBJ": {
           "prefix": "fnRemovePlayerPreserveUnitsBJ",
           "body": "RemovePlayerPreserveUnitsBJ(${0:player whichPlayer},${1:playergameresult gameResult},${2:boolean leftGame})",
           "description": "fnRemovePlayerPreserveUnitsBJ",
           "scope": "source.vjass"
       },
        "fnCustomVictoryOkBJ": {
           "prefix": "fnCustomVictoryOkBJ",
           "body": "CustomVictoryOkBJ(${0:nothing})",
           "description": "fnCustomVictoryOkBJ",
           "scope": "source.vjass"
       },
        "fnCustomVictoryQuitBJ": {
           "prefix": "fnCustomVictoryQuitBJ",
           "body": "CustomVictoryQuitBJ(${0:nothing})",
           "description": "fnCustomVictoryQuitBJ",
           "scope": "source.vjass"
       },
        "fnCustomVictoryDialogBJ": {
           "prefix": "fnCustomVictoryDialogBJ",
           "body": "CustomVictoryDialogBJ(${0:player whichPlayer})",
           "description": "fnCustomVictoryDialogBJ",
           "scope": "source.vjass"
       },
        "fnCustomVictorySkipBJ": {
           "prefix": "fnCustomVictorySkipBJ",
           "body": "CustomVictorySkipBJ(${0:player whichPlayer})",
           "description": "fnCustomVictorySkipBJ",
           "scope": "source.vjass"
       },
        "fnCustomVictoryBJ": {
           "prefix": "fnCustomVictoryBJ",
           "body": "CustomVictoryBJ(${0:player whichPlayer},${1:boolean showScores})",
           "description": "fnCustomVictoryBJ",
           "scope": "source.vjass"
       },
        "fnCustomDefeatRestartBJ": {
           "prefix": "fnCustomDefeatRestartBJ",
           "body": "CustomDefeatRestartBJ(${0:nothing})",
           "description": "fnCustomDefeatRestartBJ",
           "scope": "source.vjass"
       },
        "fnCustomDefeatReduceDifficultyBJ": {
           "prefix": "fnCustomDefeatReduceDifficultyBJ",
           "body": "CustomDefeatReduceDifficultyBJ(${0:nothing})",
           "description": "fnCustomDefeatReduceDifficultyBJ",
           "scope": "source.vjass"
       },
        "fnCustomDefeatLoadBJ": {
           "prefix": "fnCustomDefeatLoadBJ",
           "body": "CustomDefeatLoadBJ(${0:nothing})",
           "description": "fnCustomDefeatLoadBJ",
           "scope": "source.vjass"
       },
        "fnCustomDefeatQuitBJ": {
           "prefix": "fnCustomDefeatQuitBJ",
           "body": "CustomDefeatQuitBJ(${0:nothing})",
           "description": "fnCustomDefeatQuitBJ",
           "scope": "source.vjass"
       },
        "fnCustomDefeatDialogBJ": {
           "prefix": "fnCustomDefeatDialogBJ",
           "body": "CustomDefeatDialogBJ(${0:player whichPlayer},${1:string message})",
           "description": "fnCustomDefeatDialogBJ",
           "scope": "source.vjass"
       },
        "fnCustomDefeatBJ": {
           "prefix": "fnCustomDefeatBJ",
           "body": "CustomDefeatBJ(${0:player whichPlayer},${1:string message})",
           "description": "fnCustomDefeatBJ",
           "scope": "source.vjass"
       },
        "fnSetNextLevelBJ": {
           "prefix": "fnSetNextLevelBJ",
           "body": "SetNextLevelBJ(${0:string nextLevel})",
           "description": "fnSetNextLevelBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerOnScoreScreenBJ": {
           "prefix": "fnSetPlayerOnScoreScreenBJ",
           "body": "SetPlayerOnScoreScreenBJ(${0:player whichPlayer},${1:boolean flag})",
           "description": "fnSetPlayerOnScoreScreenBJ",
           "scope": "source.vjass"
       },
        "fnCreateQuestBJ": {
           "prefix": "fnCreateQuestBJ",
           "body": "CreateQuestBJ(${0:integer questType},${1:string iconPath})",
           "description": "fnCreateQuestBJ",
           "scope": "source.vjass"
       },
        "fnDestroyQuestBJ": {
           "prefix": "fnDestroyQuestBJ",
           "body": "DestroyQuestBJ(${0:quest whichQuest})",
           "description": "fnDestroyQuestBJ",
           "scope": "source.vjass"
       },
        "fnQuestSetEnabledBJ": {
           "prefix": "fnQuestSetEnabledBJ",
           "body": "QuestSetEnabledBJ(${0:quest whichQuest},${1:boolean enabled})",
           "description": "fnQuestSetEnabledBJ",
           "scope": "source.vjass"
       },
        "fnQuestSetTitleBJ": {
           "prefix": "fnQuestSetTitleBJ",
           "body": "QuestSetTitleBJ(${0:quest whichQuest},${1:string title})",
           "description": "fnQuestSetTitleBJ",
           "scope": "source.vjass"
       },
        "fnQuestSetDescriptionBJ": {
           "prefix": "fnQuestSetDescriptionBJ",
           "body": "QuestSetDescriptionBJ(${0:quest whichQuest},${1:string description})",
           "description": "fnQuestSetDescriptionBJ",
           "scope": "source.vjass"
       },
        "fnQuestSetCompletedBJ": {
           "prefix": "fnQuestSetCompletedBJ",
           "body": "QuestSetCompletedBJ(${0:boolean completed},${1:quest whichQuest})",
           "description": "fnQuestSetCompletedBJ",
           "scope": "source.vjass"
       },
        "fnQuestSetFailedBJ": {
           "prefix": "fnQuestSetFailedBJ",
           "body": "QuestSetFailedBJ(${0:boolean failed},${1:quest whichQuest})",
           "description": "fnQuestSetFailedBJ",
           "scope": "source.vjass"
       },
        "fnQuestSetDiscoveredBJ": {
           "prefix": "fnQuestSetDiscoveredBJ",
           "body": "QuestSetDiscoveredBJ(${0:boolean discovered},${1:quest whichQuest})",
           "description": "fnQuestSetDiscoveredBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedQuestBJ": {
           "prefix": "fnGetLastCreatedQuestBJ",
           "body": "GetLastCreatedQuestBJ(${0:nothing})",
           "description": "fnGetLastCreatedQuestBJ",
           "scope": "source.vjass"
       },
        "fnCreateQuestItemBJ": {
           "prefix": "fnCreateQuestItemBJ",
           "body": "CreateQuestItemBJ(${0:quest whichQuest},${1:string description})",
           "description": "fnCreateQuestItemBJ",
           "scope": "source.vjass"
       },
        "fnQuestItemSetDescriptionBJ": {
           "prefix": "fnQuestItemSetDescriptionBJ",
           "body": "QuestItemSetDescriptionBJ(${0:questitem whichQuestItem},${1:string description})",
           "description": "fnQuestItemSetDescriptionBJ",
           "scope": "source.vjass"
       },
        "fnQuestItemSetCompletedBJ": {
           "prefix": "fnQuestItemSetCompletedBJ",
           "body": "QuestItemSetCompletedBJ(${0:questitem whichQuestItem},${1:boolean completed})",
           "description": "fnQuestItemSetCompletedBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedQuestItemBJ": {
           "prefix": "fnGetLastCreatedQuestItemBJ",
           "body": "GetLastCreatedQuestItemBJ(${0:nothing})",
           "description": "fnGetLastCreatedQuestItemBJ",
           "scope": "source.vjass"
       },
        "fnCreateDefeatConditionBJ": {
           "prefix": "fnCreateDefeatConditionBJ",
           "body": "CreateDefeatConditionBJ(${0:string description})",
           "description": "fnCreateDefeatConditionBJ",
           "scope": "source.vjass"
       },
        "fnDestroyDefeatConditionBJ": {
           "prefix": "fnDestroyDefeatConditionBJ",
           "body": "DestroyDefeatConditionBJ(${0:defeatcondition whichCondition})",
           "description": "fnDestroyDefeatConditionBJ",
           "scope": "source.vjass"
       },
        "fnDefeatConditionSetDescriptionBJ": {
           "prefix": "fnDefeatConditionSetDescriptionBJ",
           "body": "DefeatConditionSetDescriptionBJ(${0:defeatcondition whichCondition},${1:string description})",
           "description": "fnDefeatConditionSetDescriptionBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedDefeatConditionBJ": {
           "prefix": "fnGetLastCreatedDefeatConditionBJ",
           "body": "GetLastCreatedDefeatConditionBJ(${0:nothing})",
           "description": "fnGetLastCreatedDefeatConditionBJ",
           "scope": "source.vjass"
       },
        "fnFlashQuestDialogButtonBJ": {
           "prefix": "fnFlashQuestDialogButtonBJ",
           "body": "FlashQuestDialogButtonBJ(${0:nothing})",
           "description": "fnFlashQuestDialogButtonBJ",
           "scope": "source.vjass"
       },
        "fnQuestMessageBJ": {
           "prefix": "fnQuestMessageBJ",
           "body": "QuestMessageBJ(${0:integer messageType},${1:force f},${2:string message})",
           "description": "fnQuestMessageBJ",
           "scope": "source.vjass"
       },
        "fnStartTimerBJ": {
           "prefix": "fnStartTimerBJ",
           "body": "StartTimerBJ(${0:real timeout},${1:boolean periodic},${2:timer t})",
           "description": "fnStartTimerBJ",
           "scope": "source.vjass"
       },
        "fnCreateTimerBJ": {
           "prefix": "fnCreateTimerBJ",
           "body": "CreateTimerBJ(${0:real timeout},${1:boolean periodic})",
           "description": "fnCreateTimerBJ",
           "scope": "source.vjass"
       },
        "fnDestroyTimerBJ": {
           "prefix": "fnDestroyTimerBJ",
           "body": "DestroyTimerBJ(${0:timer whichTimer})",
           "description": "fnDestroyTimerBJ",
           "scope": "source.vjass"
       },
        "fnPauseTimerBJ": {
           "prefix": "fnPauseTimerBJ",
           "body": "PauseTimerBJ(${0:boolean pause},${1:timer whichTimer})",
           "description": "fnPauseTimerBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedTimerBJ": {
           "prefix": "fnGetLastCreatedTimerBJ",
           "body": "GetLastCreatedTimerBJ(${0:nothing})",
           "description": "fnGetLastCreatedTimerBJ",
           "scope": "source.vjass"
       },
        "fnCreateTimerDialogBJ": {
           "prefix": "fnCreateTimerDialogBJ",
           "body": "CreateTimerDialogBJ(${0:string title},${1:timer t})",
           "description": "fnCreateTimerDialogBJ",
           "scope": "source.vjass"
       },
        "fnDestroyTimerDialogBJ": {
           "prefix": "fnDestroyTimerDialogBJ",
           "body": "DestroyTimerDialogBJ(${0:timerdialog td})",
           "description": "fnDestroyTimerDialogBJ",
           "scope": "source.vjass"
       },
        "fnTimerDialogSetTitleBJ": {
           "prefix": "fnTimerDialogSetTitleBJ",
           "body": "TimerDialogSetTitleBJ(${0:timerdialog td},${1:string title})",
           "description": "fnTimerDialogSetTitleBJ",
           "scope": "source.vjass"
       },
        "fnTimerDialogSetTitleColorBJ": {
           "prefix": "fnTimerDialogSetTitleColorBJ",
           "body": "TimerDialogSetTitleColorBJ(${0:real transparency},${1:timerdialog td})",
           "description": "fnTimerDialogSetTitleColorBJ",
           "scope": "source.vjass"
       },
        "fnTimerDialogSetTimeColorBJ": {
           "prefix": "fnTimerDialogSetTimeColorBJ",
           "body": "TimerDialogSetTimeColorBJ(${0:real transparency},${1:timerdialog td})",
           "description": "fnTimerDialogSetTimeColorBJ",
           "scope": "source.vjass"
       },
        "fnTimerDialogSetSpeedBJ": {
           "prefix": "fnTimerDialogSetSpeedBJ",
           "body": "TimerDialogSetSpeedBJ(${0:real speedMultFactor},${1:timerdialog td})",
           "description": "fnTimerDialogSetSpeedBJ",
           "scope": "source.vjass"
       },
        "fnTimerDialogDisplayForPlayerBJ": {
           "prefix": "fnTimerDialogDisplayForPlayerBJ",
           "body": "TimerDialogDisplayForPlayerBJ(${0:player whichPlayer},${1:boolean show},${2:timerdialog td})",
           "description": "fnTimerDialogDisplayForPlayerBJ",
           "scope": "source.vjass"
       },
        "fnTimerDialogDisplayBJ": {
           "prefix": "fnTimerDialogDisplayBJ",
           "body": "TimerDialogDisplayBJ(${0:boolean show},${1:timerdialog td})",
           "description": "fnTimerDialogDisplayBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedTimerDialogBJ": {
           "prefix": "fnGetLastCreatedTimerDialogBJ",
           "body": "GetLastCreatedTimerDialogBJ(${0:nothing})",
           "description": "fnGetLastCreatedTimerDialogBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardResizeBJ": {
           "prefix": "fnLeaderboardResizeBJ",
           "body": "LeaderboardResizeBJ(${0:leaderboard lb})",
           "description": "fnLeaderboardResizeBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardSetPlayerItemValueBJ": {
           "prefix": "fnLeaderboardSetPlayerItemValueBJ",
           "body": "LeaderboardSetPlayerItemValueBJ(${0:player whichPlayer},${1:leaderboard lb},${2:integer val})",
           "description": "fnLeaderboardSetPlayerItemValueBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardSetPlayerItemLabelBJ": {
           "prefix": "fnLeaderboardSetPlayerItemLabelBJ",
           "body": "LeaderboardSetPlayerItemLabelBJ(${0:player whichPlayer},${1:string val},${2:leaderboard lb})",
           "description": "fnLeaderboardSetPlayerItemLabelBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardSetPlayerItemStyleBJ": {
           "prefix": "fnLeaderboardSetPlayerItemStyleBJ",
           "body": "LeaderboardSetPlayerItemStyleBJ(${0:player whichPlayer},${1:boolean showIcon},${2:leaderboard lb})",
           "description": "fnLeaderboardSetPlayerItemStyleBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardSetPlayerItemLabelColorBJ": {
           "prefix": "fnLeaderboardSetPlayerItemLabelColorBJ",
           "body": "LeaderboardSetPlayerItemLabelColorBJ(${0:real transparency},${1:player whichPlayer},${2:leaderboard lb})",
           "description": "fnLeaderboardSetPlayerItemLabelColorBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardSetPlayerItemValueColorBJ": {
           "prefix": "fnLeaderboardSetPlayerItemValueColorBJ",
           "body": "LeaderboardSetPlayerItemValueColorBJ(${0:real transparency},${1:player whichPlayer},${2:leaderboard lb})",
           "description": "fnLeaderboardSetPlayerItemValueColorBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardSetLabelColorBJ": {
           "prefix": "fnLeaderboardSetLabelColorBJ",
           "body": "LeaderboardSetLabelColorBJ(${0:real transparency},${1:leaderboard lb})",
           "description": "fnLeaderboardSetLabelColorBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardSetValueColorBJ": {
           "prefix": "fnLeaderboardSetValueColorBJ",
           "body": "LeaderboardSetValueColorBJ(${0:real transparency},${1:leaderboard lb})",
           "description": "fnLeaderboardSetValueColorBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardSetLabelBJ": {
           "prefix": "fnLeaderboardSetLabelBJ",
           "body": "LeaderboardSetLabelBJ(${0:string label},${1:leaderboard lb})",
           "description": "fnLeaderboardSetLabelBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardSetStyleBJ": {
           "prefix": "fnLeaderboardSetStyleBJ",
           "body": "LeaderboardSetStyleBJ(${0:boolean showIcons},${1:leaderboard lb})",
           "description": "fnLeaderboardSetStyleBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardGetItemCountBJ": {
           "prefix": "fnLeaderboardGetItemCountBJ",
           "body": "LeaderboardGetItemCountBJ(${0:leaderboard lb})",
           "description": "fnLeaderboardGetItemCountBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardHasPlayerItemBJ": {
           "prefix": "fnLeaderboardHasPlayerItemBJ",
           "body": "LeaderboardHasPlayerItemBJ(${0:player whichPlayer},${1:leaderboard lb})",
           "description": "fnLeaderboardHasPlayerItemBJ",
           "scope": "source.vjass"
       },
        "fnForceSetLeaderboardBJ": {
           "prefix": "fnForceSetLeaderboardBJ",
           "body": "ForceSetLeaderboardBJ(${0:force toForce},${1:leaderboard lb})",
           "description": "fnForceSetLeaderboardBJ",
           "scope": "source.vjass"
       },
        "fnCreateLeaderboardBJ": {
           "prefix": "fnCreateLeaderboardBJ",
           "body": "CreateLeaderboardBJ(${0:force toForce},${1:string label})",
           "description": "fnCreateLeaderboardBJ",
           "scope": "source.vjass"
       },
        "fnDestroyLeaderboardBJ": {
           "prefix": "fnDestroyLeaderboardBJ",
           "body": "DestroyLeaderboardBJ(${0:leaderboard lb})",
           "description": "fnDestroyLeaderboardBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardDisplayBJ": {
           "prefix": "fnLeaderboardDisplayBJ",
           "body": "LeaderboardDisplayBJ(${0:boolean show},${1:leaderboard lb})",
           "description": "fnLeaderboardDisplayBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardAddItemBJ": {
           "prefix": "fnLeaderboardAddItemBJ",
           "body": "LeaderboardAddItemBJ(${0:player whichPlayer},${1:string label},${2:leaderboard lb},${3:integer value})",
           "description": "fnLeaderboardAddItemBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardRemovePlayerItemBJ": {
           "prefix": "fnLeaderboardRemovePlayerItemBJ",
           "body": "LeaderboardRemovePlayerItemBJ(${0:player whichPlayer},${1:leaderboard lb})",
           "description": "fnLeaderboardRemovePlayerItemBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardSortItemsBJ": {
           "prefix": "fnLeaderboardSortItemsBJ",
           "body": "LeaderboardSortItemsBJ(${0:integer sortType},${1:boolean ascending},${2:leaderboard lb})",
           "description": "fnLeaderboardSortItemsBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardSortItemsByPlayerBJ": {
           "prefix": "fnLeaderboardSortItemsByPlayerBJ",
           "body": "LeaderboardSortItemsByPlayerBJ(${0:boolean ascending},${1:leaderboard lb})",
           "description": "fnLeaderboardSortItemsByPlayerBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardSortItemsByLabelBJ": {
           "prefix": "fnLeaderboardSortItemsByLabelBJ",
           "body": "LeaderboardSortItemsByLabelBJ(${0:boolean ascending},${1:leaderboard lb})",
           "description": "fnLeaderboardSortItemsByLabelBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardGetPlayerIndexBJ": {
           "prefix": "fnLeaderboardGetPlayerIndexBJ",
           "body": "LeaderboardGetPlayerIndexBJ(${0:player whichPlayer},${1:leaderboard lb})",
           "description": "fnLeaderboardGetPlayerIndexBJ",
           "scope": "source.vjass"
       },
        "fnLeaderboardGetIndexedPlayerBJ": {
           "prefix": "fnLeaderboardGetIndexedPlayerBJ",
           "body": "LeaderboardGetIndexedPlayerBJ(${0:integer position},${1:leaderboard lb})",
           "description": "fnLeaderboardGetIndexedPlayerBJ",
           "scope": "source.vjass"
       },
        "fnPlayerGetLeaderboardBJ": {
           "prefix": "fnPlayerGetLeaderboardBJ",
           "body": "PlayerGetLeaderboardBJ(${0:player whichPlayer})",
           "description": "fnPlayerGetLeaderboardBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedLeaderboard": {
           "prefix": "fnGetLastCreatedLeaderboard",
           "body": "GetLastCreatedLeaderboard(${0:nothing})",
           "description": "fnGetLastCreatedLeaderboard",
           "scope": "source.vjass"
       },
        "fnCreateMultiboardBJ": {
           "prefix": "fnCreateMultiboardBJ",
           "body": "CreateMultiboardBJ(${0:integer rows},${1:string title})",
           "description": "fnCreateMultiboardBJ",
           "scope": "source.vjass"
       },
        "fnDestroyMultiboardBJ": {
           "prefix": "fnDestroyMultiboardBJ",
           "body": "DestroyMultiboardBJ(${0:multiboard mb})",
           "description": "fnDestroyMultiboardBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedMultiboard": {
           "prefix": "fnGetLastCreatedMultiboard",
           "body": "GetLastCreatedMultiboard(${0:nothing})",
           "description": "fnGetLastCreatedMultiboard",
           "scope": "source.vjass"
       },
        "fnMultiboardDisplayBJ": {
           "prefix": "fnMultiboardDisplayBJ",
           "body": "MultiboardDisplayBJ(${0:boolean show},${1:multiboard mb})",
           "description": "fnMultiboardDisplayBJ",
           "scope": "source.vjass"
       },
        "fnMultiboardMinimizeBJ": {
           "prefix": "fnMultiboardMinimizeBJ",
           "body": "MultiboardMinimizeBJ(${0:boolean minimize},${1:multiboard mb})",
           "description": "fnMultiboardMinimizeBJ",
           "scope": "source.vjass"
       },
        "fnMultiboardSetTitleTextColorBJ": {
           "prefix": "fnMultiboardSetTitleTextColorBJ",
           "body": "MultiboardSetTitleTextColorBJ(${0:real transparency},${1:multiboard mb})",
           "description": "fnMultiboardSetTitleTextColorBJ",
           "scope": "source.vjass"
       },
        "fnMultiboardAllowDisplayBJ": {
           "prefix": "fnMultiboardAllowDisplayBJ",
           "body": "MultiboardAllowDisplayBJ(${0:boolean flag})",
           "description": "fnMultiboardAllowDisplayBJ",
           "scope": "source.vjass"
       },
        "fnMultiboardSetItemStyleBJ": {
           "prefix": "fnMultiboardSetItemStyleBJ",
           "body": "MultiboardSetItemStyleBJ(${0:boolean showIcon},${1:integer row},${2:multiboard mb})",
           "description": "fnMultiboardSetItemStyleBJ",
           "scope": "source.vjass"
       },
        "fnMultiboardSetItemValueBJ": {
           "prefix": "fnMultiboardSetItemValueBJ",
           "body": "MultiboardSetItemValueBJ(${0:integer row},${1:multiboard mb},${2:string val})",
           "description": "fnMultiboardSetItemValueBJ",
           "scope": "source.vjass"
       },
        "fnMultiboardSetItemColorBJ": {
           "prefix": "fnMultiboardSetItemColorBJ",
           "body": "MultiboardSetItemColorBJ(${0:real transparency},${1:integer row},${2:multiboard mb})",
           "description": "fnMultiboardSetItemColorBJ",
           "scope": "source.vjass"
       },
        "fnMultiboardSetItemWidthBJ": {
           "prefix": "fnMultiboardSetItemWidthBJ",
           "body": "MultiboardSetItemWidthBJ(${0:real width},${1:integer row},${2:multiboard mb})",
           "description": "fnMultiboardSetItemWidthBJ",
           "scope": "source.vjass"
       },
        "fnMultiboardSetItemIconBJ": {
           "prefix": "fnMultiboardSetItemIconBJ",
           "body": "MultiboardSetItemIconBJ(${0:integer row},${1:multiboard mb},${2:string iconFileName})",
           "description": "fnMultiboardSetItemIconBJ",
           "scope": "source.vjass"
       },
        "fnTextTagSize2Height": {
           "prefix": "fnTextTagSize2Height",
           "body": "TextTagSize2Height(${0:real size})",
           "description": "fnTextTagSize2Height",
           "scope": "source.vjass"
       },
        "fnTextTagSpeed2Velocity": {
           "prefix": "fnTextTagSpeed2Velocity",
           "body": "TextTagSpeed2Velocity(${0:real speed})",
           "description": "fnTextTagSpeed2Velocity",
           "scope": "source.vjass"
       },
        "fnSetTextTagColorBJ": {
           "prefix": "fnSetTextTagColorBJ",
           "body": "SetTextTagColorBJ(${0:texttag tt},${1:real transparency})",
           "description": "fnSetTextTagColorBJ",
           "scope": "source.vjass"
       },
        "fnSetTextTagVelocityBJ": {
           "prefix": "fnSetTextTagVelocityBJ",
           "body": "SetTextTagVelocityBJ(${0:texttag tt},${1:real angle})",
           "description": "fnSetTextTagVelocityBJ",
           "scope": "source.vjass"
       },
        "fnSetTextTagTextBJ": {
           "prefix": "fnSetTextTagTextBJ",
           "body": "SetTextTagTextBJ(${0:texttag tt},${1:real size},${2:string s})",
           "description": "fnSetTextTagTextBJ",
           "scope": "source.vjass"
       },
        "fnSetTextTagPosBJ": {
           "prefix": "fnSetTextTagPosBJ",
           "body": "SetTextTagPosBJ(${0:texttag tt},${1:real zOffset},${2:location loc})",
           "description": "fnSetTextTagPosBJ",
           "scope": "source.vjass"
       },
        "fnSetTextTagPosUnitBJ": {
           "prefix": "fnSetTextTagPosUnitBJ",
           "body": "SetTextTagPosUnitBJ(${0:texttag tt},${1:real zOffset},${2:unit whichUnit})",
           "description": "fnSetTextTagPosUnitBJ",
           "scope": "source.vjass"
       },
        "fnSetTextTagSuspendedBJ": {
           "prefix": "fnSetTextTagSuspendedBJ",
           "body": "SetTextTagSuspendedBJ(${0:texttag tt},${1:boolean flag})",
           "description": "fnSetTextTagSuspendedBJ",
           "scope": "source.vjass"
       },
        "fnSetTextTagPermanentBJ": {
           "prefix": "fnSetTextTagPermanentBJ",
           "body": "SetTextTagPermanentBJ(${0:texttag tt},${1:boolean flag})",
           "description": "fnSetTextTagPermanentBJ",
           "scope": "source.vjass"
       },
        "fnSetTextTagAgeBJ": {
           "prefix": "fnSetTextTagAgeBJ",
           "body": "SetTextTagAgeBJ(${0:texttag tt},${1:real age})",
           "description": "fnSetTextTagAgeBJ",
           "scope": "source.vjass"
       },
        "fnSetTextTagLifespanBJ": {
           "prefix": "fnSetTextTagLifespanBJ",
           "body": "SetTextTagLifespanBJ(${0:texttag tt},${1:real lifespan})",
           "description": "fnSetTextTagLifespanBJ",
           "scope": "source.vjass"
       },
        "fnSetTextTagFadepointBJ": {
           "prefix": "fnSetTextTagFadepointBJ",
           "body": "SetTextTagFadepointBJ(${0:texttag tt},${1:real fadepoint})",
           "description": "fnSetTextTagFadepointBJ",
           "scope": "source.vjass"
       },
        "fnCreateTextTagLocBJ": {
           "prefix": "fnCreateTextTagLocBJ",
           "body": "CreateTextTagLocBJ(${0:real transparency},${1:string s},${2:location loc})",
           "description": "fnCreateTextTagLocBJ",
           "scope": "source.vjass"
       },
        "fnCreateTextTagUnitBJ": {
           "prefix": "fnCreateTextTagUnitBJ",
           "body": "CreateTextTagUnitBJ(${0:real transparency},${1:string s},${2:unit whichUnit})",
           "description": "fnCreateTextTagUnitBJ",
           "scope": "source.vjass"
       },
        "fnDestroyTextTagBJ": {
           "prefix": "fnDestroyTextTagBJ",
           "body": "DestroyTextTagBJ(${0:texttag tt})",
           "description": "fnDestroyTextTagBJ",
           "scope": "source.vjass"
       },
        "fnShowTextTagForceBJ": {
           "prefix": "fnShowTextTagForceBJ",
           "body": "ShowTextTagForceBJ(${0:texttag tt},${1:boolean show},${2:force whichForce})",
           "description": "fnShowTextTagForceBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedTextTag": {
           "prefix": "fnGetLastCreatedTextTag",
           "body": "GetLastCreatedTextTag(${0:nothing})",
           "description": "fnGetLastCreatedTextTag",
           "scope": "source.vjass"
       },
        "fnPauseGameOn": {
           "prefix": "fnPauseGameOn",
           "body": "PauseGameOn(${0:nothing})",
           "description": "fnPauseGameOn",
           "scope": "source.vjass"
       },
        "fnPauseGameOff": {
           "prefix": "fnPauseGameOff",
           "body": "PauseGameOff(${0:nothing})",
           "description": "fnPauseGameOff",
           "scope": "source.vjass"
       },
        "fnSetUserControlForceOn": {
           "prefix": "fnSetUserControlForceOn",
           "body": "SetUserControlForceOn(${0:force whichForce})",
           "description": "fnSetUserControlForceOn",
           "scope": "source.vjass"
       },
        "fnSetUserControlForceOff": {
           "prefix": "fnSetUserControlForceOff",
           "body": "SetUserControlForceOff(${0:force whichForce})",
           "description": "fnSetUserControlForceOff",
           "scope": "source.vjass"
       },
        "fnShowInterfaceForceOn": {
           "prefix": "fnShowInterfaceForceOn",
           "body": "ShowInterfaceForceOn(${0:real fadeDuration},${1:force whichForce})",
           "description": "fnShowInterfaceForceOn",
           "scope": "source.vjass"
       },
        "fnShowInterfaceForceOff": {
           "prefix": "fnShowInterfaceForceOff",
           "body": "ShowInterfaceForceOff(${0:real fadeDuration},${1:force whichForce})",
           "description": "fnShowInterfaceForceOff",
           "scope": "source.vjass"
       },
        "fnPingMinimapForForce": {
           "prefix": "fnPingMinimapForForce",
           "body": "PingMinimapForForce(${0:real duration},${1:force whichForce})",
           "description": "fnPingMinimapForForce",
           "scope": "source.vjass"
       },
        "fnPingMinimapLocForForce": {
           "prefix": "fnPingMinimapLocForForce",
           "body": "PingMinimapLocForForce(${0:real duration},${1:force whichForce},${2:location loc})",
           "description": "fnPingMinimapLocForForce",
           "scope": "source.vjass"
       },
        "fnPingMinimapForPlayer": {
           "prefix": "fnPingMinimapForPlayer",
           "body": "PingMinimapForPlayer(${0:real duration},${1:player whichPlayer})",
           "description": "fnPingMinimapForPlayer",
           "scope": "source.vjass"
       },
        "fnPingMinimapLocForPlayer": {
           "prefix": "fnPingMinimapLocForPlayer",
           "body": "PingMinimapLocForPlayer(${0:real duration},${1:player whichPlayer},${2:location loc})",
           "description": "fnPingMinimapLocForPlayer",
           "scope": "source.vjass"
       },
        "fnPingMinimapForForceEx": {
           "prefix": "fnPingMinimapForForceEx",
           "body": "PingMinimapForForceEx(${0:real blue},${1:integer style},${2:force whichForce})",
           "description": "fnPingMinimapForForceEx",
           "scope": "source.vjass"
       },
        "fnPingMinimapLocForForceEx": {
           "prefix": "fnPingMinimapLocForForceEx",
           "body": "PingMinimapLocForForceEx(${0:real blue},${1:integer style},${2:force whichForce},${3:location loc})",
           "description": "fnPingMinimapLocForForceEx",
           "scope": "source.vjass"
       },
        "fnEnableWorldFogBoundaryBJ": {
           "prefix": "fnEnableWorldFogBoundaryBJ",
           "body": "EnableWorldFogBoundaryBJ(${0:boolean enable},${1:force f})",
           "description": "fnEnableWorldFogBoundaryBJ",
           "scope": "source.vjass"
       },
        "fnEnableOcclusionBJ": {
           "prefix": "fnEnableOcclusionBJ",
           "body": "EnableOcclusionBJ(${0:boolean enable},${1:force f})",
           "description": "fnEnableOcclusionBJ",
           "scope": "source.vjass"
       },
        "fnCancelCineSceneBJ": {
           "prefix": "fnCancelCineSceneBJ",
           "body": "CancelCineSceneBJ(${0:nothing})",
           "description": "fnCancelCineSceneBJ",
           "scope": "source.vjass"
       },
        "fnTryInitCinematicBehaviorBJ": {
           "prefix": "fnTryInitCinematicBehaviorBJ",
           "body": "TryInitCinematicBehaviorBJ(${0:nothing})",
           "description": "fnTryInitCinematicBehaviorBJ",
           "scope": "source.vjass"
       },
        "fnSetCinematicSceneBJ": {
           "prefix": "fnSetCinematicSceneBJ",
           "body": "SetCinematicSceneBJ(${0:sound soundHandle},${1:integer portraitUnitId},${2:playercolor color},${3:real voiceoverDuration},${4:string text})",
           "description": "fnSetCinematicSceneBJ",
           "scope": "source.vjass"
       },
        "fnGetTransmissionDuration": {
           "prefix": "fnGetTransmissionDuration",
           "body": "GetTransmissionDuration(${0:sound soundHandle},${1:integer timeType},${2:real timeVal})",
           "description": "fnGetTransmissionDuration",
           "scope": "source.vjass"
       },
        "fnWaitTransmissionDuration": {
           "prefix": "fnWaitTransmissionDuration",
           "body": "WaitTransmissionDuration(${0:sound soundHandle},${1:integer timeType},${2:real timeVal})",
           "description": "fnWaitTransmissionDuration",
           "scope": "source.vjass"
       },
        "fnDoTransmissionBasicsXYBJ": {
           "prefix": "fnDoTransmissionBasicsXYBJ",
           "body": "DoTransmissionBasicsXYBJ(${0:real duration},${1:integer unitId},${2:sound soundHandle},${3:playercolor color},${4:string message})",
           "description": "fnDoTransmissionBasicsXYBJ",
           "scope": "source.vjass"
       },
        "fnTransmissionFromUnitWithNameBJ": {
           "prefix": "fnTransmissionFromUnitWithNameBJ",
           "body": "TransmissionFromUnitWithNameBJ(${0:sound soundHandle},${1:real timeVal},${2:force toForce},${3:string message},${4:boolean wait},${5:integer timeType},${6:unit whichUnit})",
           "description": "fnTransmissionFromUnitWithNameBJ",
           "scope": "source.vjass"
       },
        "fnTransmissionFromUnitTypeWithNameBJ": {
           "prefix": "fnTransmissionFromUnitTypeWithNameBJ",
           "body": "TransmissionFromUnitTypeWithNameBJ(${0:sound soundHandle},${1:real timeVal},${2:force toForce},${3:string message},${4:player fromPlayer},${5:boolean wait},${6:location loc},${7:integer timeType})",
           "description": "fnTransmissionFromUnitTypeWithNameBJ",
           "scope": "source.vjass"
       },
        "fnGetLastTransmissionDurationBJ": {
           "prefix": "fnGetLastTransmissionDurationBJ",
           "body": "GetLastTransmissionDurationBJ(${0:nothing})",
           "description": "fnGetLastTransmissionDurationBJ",
           "scope": "source.vjass"
       },
        "fnForceCinematicSubtitlesBJ": {
           "prefix": "fnForceCinematicSubtitlesBJ",
           "body": "ForceCinematicSubtitlesBJ(${0:boolean flag})",
           "description": "fnForceCinematicSubtitlesBJ",
           "scope": "source.vjass"
       },
        "fnCinematicModeExBJ": {
           "prefix": "fnCinematicModeExBJ",
           "body": "CinematicModeExBJ(${0:real interfaceFadeTime},${1:boolean cineMode},${2:force forForce})",
           "description": "fnCinematicModeExBJ",
           "scope": "source.vjass"
       },
        "fnCinematicModeBJ": {
           "prefix": "fnCinematicModeBJ",
           "body": "CinematicModeBJ(${0:boolean cineMode},${1:force forForce})",
           "description": "fnCinematicModeBJ",
           "scope": "source.vjass"
       },
        "fnDisplayCineFilterBJ": {
           "prefix": "fnDisplayCineFilterBJ",
           "body": "DisplayCineFilterBJ(${0:boolean flag})",
           "description": "fnDisplayCineFilterBJ",
           "scope": "source.vjass"
       },
        "fnCinematicFadeCommonBJ": {
           "prefix": "fnCinematicFadeCommonBJ",
           "body": "CinematicFadeCommonBJ(${0:real endTrans},${1:string tex})",
           "description": "fnCinematicFadeCommonBJ",
           "scope": "source.vjass"
       },
        "fnFinishCinematicFadeBJ": {
           "prefix": "fnFinishCinematicFadeBJ",
           "body": "FinishCinematicFadeBJ(${0:nothing})",
           "description": "fnFinishCinematicFadeBJ",
           "scope": "source.vjass"
       },
        "fnFinishCinematicFadeAfterBJ": {
           "prefix": "fnFinishCinematicFadeAfterBJ",
           "body": "FinishCinematicFadeAfterBJ(${0:real duration})",
           "description": "fnFinishCinematicFadeAfterBJ",
           "scope": "source.vjass"
       },
        "fnContinueCinematicFadeBJ": {
           "prefix": "fnContinueCinematicFadeBJ",
           "body": "ContinueCinematicFadeBJ(${0:nothing})",
           "description": "fnContinueCinematicFadeBJ",
           "scope": "source.vjass"
       },
        "fnContinueCinematicFadeAfterBJ": {
           "prefix": "fnContinueCinematicFadeAfterBJ",
           "body": "ContinueCinematicFadeAfterBJ(${0:real trans},${1:string tex})",
           "description": "fnContinueCinematicFadeAfterBJ",
           "scope": "source.vjass"
       },
        "fnAbortCinematicFadeBJ": {
           "prefix": "fnAbortCinematicFadeBJ",
           "body": "AbortCinematicFadeBJ(${0:nothing})",
           "description": "fnAbortCinematicFadeBJ",
           "scope": "source.vjass"
       },
        "fnCinematicFadeBJ": {
           "prefix": "fnCinematicFadeBJ",
           "body": "CinematicFadeBJ(${0:real trans},${1:integer fadetype},${2:string tex})",
           "description": "fnCinematicFadeBJ",
           "scope": "source.vjass"
       },
        "fnCinematicFilterGenericBJ": {
           "prefix": "fnCinematicFilterGenericBJ",
           "body": "CinematicFilterGenericBJ(${0:real trans1},${1:blendmode bmode},${2:string tex})",
           "description": "fnCinematicFilterGenericBJ",
           "scope": "source.vjass"
       },
        "fnRescueUnitBJ": {
           "prefix": "fnRescueUnitBJ",
           "body": "RescueUnitBJ(${0:player rescuer},${1:boolean changeColor},${2:unit whichUnit})",
           "description": "fnRescueUnitBJ",
           "scope": "source.vjass"
       },
        "fnTriggerActionUnitRescuedBJ": {
           "prefix": "fnTriggerActionUnitRescuedBJ",
           "body": "TriggerActionUnitRescuedBJ(${0:nothing})",
           "description": "fnTriggerActionUnitRescuedBJ",
           "scope": "source.vjass"
       },
        "fnTryInitRescuableTriggersBJ": {
           "prefix": "fnTryInitRescuableTriggersBJ",
           "body": "TryInitRescuableTriggersBJ(${0:nothing})",
           "description": "fnTryInitRescuableTriggersBJ",
           "scope": "source.vjass"
       },
        "fnSetRescueUnitColorChangeBJ": {
           "prefix": "fnSetRescueUnitColorChangeBJ",
           "body": "SetRescueUnitColorChangeBJ(${0:boolean changeColor})",
           "description": "fnSetRescueUnitColorChangeBJ",
           "scope": "source.vjass"
       },
        "fnSetRescueBuildingColorChangeBJ": {
           "prefix": "fnSetRescueBuildingColorChangeBJ",
           "body": "SetRescueBuildingColorChangeBJ(${0:boolean changeColor})",
           "description": "fnSetRescueBuildingColorChangeBJ",
           "scope": "source.vjass"
       },
        "fnMakeUnitRescuableToForceBJEnum": {
           "prefix": "fnMakeUnitRescuableToForceBJEnum",
           "body": "MakeUnitRescuableToForceBJEnum(${0:nothing})",
           "description": "fnMakeUnitRescuableToForceBJEnum",
           "scope": "source.vjass"
       },
        "fnMakeUnitRescuableToForceBJ": {
           "prefix": "fnMakeUnitRescuableToForceBJ",
           "body": "MakeUnitRescuableToForceBJ(${0:boolean isRescuable},${1:force whichForce},${2:unit whichUnit})",
           "description": "fnMakeUnitRescuableToForceBJ",
           "scope": "source.vjass"
       },
        "fnInitRescuableBehaviorBJ": {
           "prefix": "fnInitRescuableBehaviorBJ",
           "body": "InitRescuableBehaviorBJ(${0:nothing})",
           "description": "fnInitRescuableBehaviorBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerTechResearchedSwap": {
           "prefix": "fnSetPlayerTechResearchedSwap",
           "body": "SetPlayerTechResearchedSwap(${0:integer levels},${1:player whichPlayer})",
           "description": "fnSetPlayerTechResearchedSwap",
           "scope": "source.vjass"
       },
        "fnSetPlayerTechMaxAllowedSwap": {
           "prefix": "fnSetPlayerTechMaxAllowedSwap",
           "body": "SetPlayerTechMaxAllowedSwap(${0:integer maximum},${1:player whichPlayer})",
           "description": "fnSetPlayerTechMaxAllowedSwap",
           "scope": "source.vjass"
       },
        "fnSetPlayerMaxHeroesAllowed": {
           "prefix": "fnSetPlayerMaxHeroesAllowed",
           "body": "SetPlayerMaxHeroesAllowed(${0:integer maximum},${1:player whichPlayer})",
           "description": "fnSetPlayerMaxHeroesAllowed",
           "scope": "source.vjass"
       },
        "fnGetPlayerTechCountSimple": {
           "prefix": "fnGetPlayerTechCountSimple",
           "body": "GetPlayerTechCountSimple(${0:integer techid},${1:player whichPlayer})",
           "description": "fnGetPlayerTechCountSimple",
           "scope": "source.vjass"
       },
        "fnGetPlayerTechMaxAllowedSwap": {
           "prefix": "fnGetPlayerTechMaxAllowedSwap",
           "body": "GetPlayerTechMaxAllowedSwap(${0:integer techid},${1:player whichPlayer})",
           "description": "fnGetPlayerTechMaxAllowedSwap",
           "scope": "source.vjass"
       },
        "fnSetPlayerAbilityAvailableBJ": {
           "prefix": "fnSetPlayerAbilityAvailableBJ",
           "body": "SetPlayerAbilityAvailableBJ(${0:integer abilid},${1:boolean avail},${2:player whichPlayer})",
           "description": "fnSetPlayerAbilityAvailableBJ",
           "scope": "source.vjass"
       },
        "fnSetCampaignMenuRaceBJ": {
           "prefix": "fnSetCampaignMenuRaceBJ",
           "body": "SetCampaignMenuRaceBJ(${0:integer campaignNumber})",
           "description": "fnSetCampaignMenuRaceBJ",
           "scope": "source.vjass"
       },
        "fnSetMissionAvailableBJ": {
           "prefix": "fnSetMissionAvailableBJ",
           "body": "SetMissionAvailableBJ(${0:integer missionIndex},${1:boolean available})",
           "description": "fnSetMissionAvailableBJ",
           "scope": "source.vjass"
       },
        "fnSetCampaignAvailableBJ": {
           "prefix": "fnSetCampaignAvailableBJ",
           "body": "SetCampaignAvailableBJ(${0:integer campaignNumber},${1:boolean available})",
           "description": "fnSetCampaignAvailableBJ",
           "scope": "source.vjass"
       },
        "fnSetCinematicAvailableBJ": {
           "prefix": "fnSetCinematicAvailableBJ",
           "body": "SetCinematicAvailableBJ(${0:integer cinematicIndex},${1:boolean available})",
           "description": "fnSetCinematicAvailableBJ",
           "scope": "source.vjass"
       },
        "fnInitGameCacheBJ": {
           "prefix": "fnInitGameCacheBJ",
           "body": "InitGameCacheBJ(${0:string campaignFile})",
           "description": "fnInitGameCacheBJ",
           "scope": "source.vjass"
       },
        "fnSaveGameCacheBJ": {
           "prefix": "fnSaveGameCacheBJ",
           "body": "SaveGameCacheBJ(${0:gamecache cache})",
           "description": "fnSaveGameCacheBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedGameCacheBJ": {
           "prefix": "fnGetLastCreatedGameCacheBJ",
           "body": "GetLastCreatedGameCacheBJ(${0:nothing})",
           "description": "fnGetLastCreatedGameCacheBJ",
           "scope": "source.vjass"
       },
        "fnInitHashtableBJ": {
           "prefix": "fnInitHashtableBJ",
           "body": "InitHashtableBJ(${0:nothing})",
           "description": "fnInitHashtableBJ",
           "scope": "source.vjass"
       },
        "fnGetLastCreatedHashtableBJ": {
           "prefix": "fnGetLastCreatedHashtableBJ",
           "body": "GetLastCreatedHashtableBJ(${0:nothing})",
           "description": "fnGetLastCreatedHashtableBJ",
           "scope": "source.vjass"
       },
        "fnStoreRealBJ": {
           "prefix": "fnStoreRealBJ",
           "body": "StoreRealBJ(${0:real value},${1:gamecache cache},${2:string missionKey})",
           "description": "fnStoreRealBJ",
           "scope": "source.vjass"
       },
        "fnStoreIntegerBJ": {
           "prefix": "fnStoreIntegerBJ",
           "body": "StoreIntegerBJ(${0:integer value},${1:string missionKey},${2:gamecache cache})",
           "description": "fnStoreIntegerBJ",
           "scope": "source.vjass"
       },
        "fnStoreBooleanBJ": {
           "prefix": "fnStoreBooleanBJ",
           "body": "StoreBooleanBJ(${0:gamecache cache},${1:boolean value},${2:string missionKey})",
           "description": "fnStoreBooleanBJ",
           "scope": "source.vjass"
       },
        "fnStoreStringBJ": {
           "prefix": "fnStoreStringBJ",
           "body": "StoreStringBJ(${0:gamecache cache},${1:string missionKey})",
           "description": "fnStoreStringBJ",
           "scope": "source.vjass"
       },
        "fnStoreUnitBJ": {
           "prefix": "fnStoreUnitBJ",
           "body": "StoreUnitBJ(${0:gamecache cache},${1:string missionKey},${2:unit whichUnit})",
           "description": "fnStoreUnitBJ",
           "scope": "source.vjass"
       },
        "fnSaveRealBJ": {
           "prefix": "fnSaveRealBJ",
           "body": "SaveRealBJ(${0:real value},${1:integer missionKey},${2:hashtable table})",
           "description": "fnSaveRealBJ",
           "scope": "source.vjass"
       },
        "fnSaveIntegerBJ": {
           "prefix": "fnSaveIntegerBJ",
           "body": "SaveIntegerBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnSaveIntegerBJ",
           "scope": "source.vjass"
       },
        "fnSaveBooleanBJ": {
           "prefix": "fnSaveBooleanBJ",
           "body": "SaveBooleanBJ(${0:integer missionKey},${1:boolean value},${2:hashtable table})",
           "description": "fnSaveBooleanBJ",
           "scope": "source.vjass"
       },
        "fnSaveStringBJ": {
           "prefix": "fnSaveStringBJ",
           "body": "SaveStringBJ(${0:integer missionKey},${1:string value},${2:hashtable table})",
           "description": "fnSaveStringBJ",
           "scope": "source.vjass"
       },
        "fnSavePlayerHandleBJ": {
           "prefix": "fnSavePlayerHandleBJ",
           "body": "SavePlayerHandleBJ(${0:player whichPlayer},${1:hashtable table},${2:integer missionKey})",
           "description": "fnSavePlayerHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveWidgetHandleBJ": {
           "prefix": "fnSaveWidgetHandleBJ",
           "body": "SaveWidgetHandleBJ(${0:integer missionKey},${1:widget whichWidget},${2:hashtable table})",
           "description": "fnSaveWidgetHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveDestructableHandleBJ": {
           "prefix": "fnSaveDestructableHandleBJ",
           "body": "SaveDestructableHandleBJ(${0:integer missionKey},${1:hashtable table},${2:destructable whichDestructable})",
           "description": "fnSaveDestructableHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveItemHandleBJ": {
           "prefix": "fnSaveItemHandleBJ",
           "body": "SaveItemHandleBJ(${0:item whichItem},${1:hashtable table},${2:integer missionKey})",
           "description": "fnSaveItemHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveUnitHandleBJ": {
           "prefix": "fnSaveUnitHandleBJ",
           "body": "SaveUnitHandleBJ(${0:integer missionKey},${1:hashtable table},${2:unit whichUnit})",
           "description": "fnSaveUnitHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveAbilityHandleBJ": {
           "prefix": "fnSaveAbilityHandleBJ",
           "body": "SaveAbilityHandleBJ(${0:integer missionKey},${1:ability whichAbility},${2:hashtable table})",
           "description": "fnSaveAbilityHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveTimerHandleBJ": {
           "prefix": "fnSaveTimerHandleBJ",
           "body": "SaveTimerHandleBJ(${0:integer missionKey},${1:hashtable table},${2:timer whichTimer})",
           "description": "fnSaveTimerHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveTriggerHandleBJ": {
           "prefix": "fnSaveTriggerHandleBJ",
           "body": "SaveTriggerHandleBJ(${0:integer missionKey},${1:trigger whichTrigger},${2:hashtable table})",
           "description": "fnSaveTriggerHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveTriggerConditionHandleBJ": {
           "prefix": "fnSaveTriggerConditionHandleBJ",
           "body": "SaveTriggerConditionHandleBJ(${0:integer missionKey},${1:triggercondition whichTriggercondition},${2:hashtable table})",
           "description": "fnSaveTriggerConditionHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveTriggerActionHandleBJ": {
           "prefix": "fnSaveTriggerActionHandleBJ",
           "body": "SaveTriggerActionHandleBJ(${0:integer missionKey},${1:hashtable table},${2:triggeraction whichTriggeraction})",
           "description": "fnSaveTriggerActionHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveTriggerEventHandleBJ": {
           "prefix": "fnSaveTriggerEventHandleBJ",
           "body": "SaveTriggerEventHandleBJ(${0:integer missionKey},${1:event whichEvent},${2:hashtable table})",
           "description": "fnSaveTriggerEventHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveForceHandleBJ": {
           "prefix": "fnSaveForceHandleBJ",
           "body": "SaveForceHandleBJ(${0:integer missionKey},${1:force whichForce},${2:hashtable table})",
           "description": "fnSaveForceHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveGroupHandleBJ": {
           "prefix": "fnSaveGroupHandleBJ",
           "body": "SaveGroupHandleBJ(${0:integer missionKey},${1:group whichGroup},${2:hashtable table})",
           "description": "fnSaveGroupHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveLocationHandleBJ": {
           "prefix": "fnSaveLocationHandleBJ",
           "body": "SaveLocationHandleBJ(${0:integer missionKey},${1:location whichLocation},${2:hashtable table})",
           "description": "fnSaveLocationHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveRectHandleBJ": {
           "prefix": "fnSaveRectHandleBJ",
           "body": "SaveRectHandleBJ(${0:integer missionKey},${1:hashtable table},${2:rect whichRect})",
           "description": "fnSaveRectHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveBooleanExprHandleBJ": {
           "prefix": "fnSaveBooleanExprHandleBJ",
           "body": "SaveBooleanExprHandleBJ(${0:integer missionKey},${1:boolexpr whichBoolexpr},${2:hashtable table})",
           "description": "fnSaveBooleanExprHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveSoundHandleBJ": {
           "prefix": "fnSaveSoundHandleBJ",
           "body": "SaveSoundHandleBJ(${0:sound whichSound},${1:integer missionKey},${2:hashtable table})",
           "description": "fnSaveSoundHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveEffectHandleBJ": {
           "prefix": "fnSaveEffectHandleBJ",
           "body": "SaveEffectHandleBJ(${0:integer missionKey},${1:effect whichEffect},${2:hashtable table})",
           "description": "fnSaveEffectHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveUnitPoolHandleBJ": {
           "prefix": "fnSaveUnitPoolHandleBJ",
           "body": "SaveUnitPoolHandleBJ(${0:integer missionKey},${1:unitpool whichUnitpool},${2:hashtable table})",
           "description": "fnSaveUnitPoolHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveItemPoolHandleBJ": {
           "prefix": "fnSaveItemPoolHandleBJ",
           "body": "SaveItemPoolHandleBJ(${0:integer missionKey},${1:hashtable table},${2:itempool whichItempool})",
           "description": "fnSaveItemPoolHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveQuestHandleBJ": {
           "prefix": "fnSaveQuestHandleBJ",
           "body": "SaveQuestHandleBJ(${0:integer missionKey},${1:quest whichQuest},${2:hashtable table})",
           "description": "fnSaveQuestHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveQuestItemHandleBJ": {
           "prefix": "fnSaveQuestItemHandleBJ",
           "body": "SaveQuestItemHandleBJ(${0:integer missionKey},${1:questitem whichQuestitem},${2:hashtable table})",
           "description": "fnSaveQuestItemHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveDefeatConditionHandleBJ": {
           "prefix": "fnSaveDefeatConditionHandleBJ",
           "body": "SaveDefeatConditionHandleBJ(${0:integer missionKey},${1:defeatcondition whichDefeatcondition},${2:hashtable table})",
           "description": "fnSaveDefeatConditionHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveTimerDialogHandleBJ": {
           "prefix": "fnSaveTimerDialogHandleBJ",
           "body": "SaveTimerDialogHandleBJ(${0:integer missionKey},${1:timerdialog whichTimerdialog},${2:hashtable table})",
           "description": "fnSaveTimerDialogHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveLeaderboardHandleBJ": {
           "prefix": "fnSaveLeaderboardHandleBJ",
           "body": "SaveLeaderboardHandleBJ(${0:integer missionKey},${1:hashtable table},${2:leaderboard whichLeaderboard})",
           "description": "fnSaveLeaderboardHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveMultiboardHandleBJ": {
           "prefix": "fnSaveMultiboardHandleBJ",
           "body": "SaveMultiboardHandleBJ(${0:integer missionKey},${1:multiboard whichMultiboard},${2:hashtable table})",
           "description": "fnSaveMultiboardHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveMultiboardItemHandleBJ": {
           "prefix": "fnSaveMultiboardItemHandleBJ",
           "body": "SaveMultiboardItemHandleBJ(${0:integer missionKey},${1:multiboarditem whichMultiboarditem},${2:hashtable table})",
           "description": "fnSaveMultiboardItemHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveTrackableHandleBJ": {
           "prefix": "fnSaveTrackableHandleBJ",
           "body": "SaveTrackableHandleBJ(${0:trackable whichTrackable},${1:integer missionKey},${2:hashtable table})",
           "description": "fnSaveTrackableHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveDialogHandleBJ": {
           "prefix": "fnSaveDialogHandleBJ",
           "body": "SaveDialogHandleBJ(${0:integer missionKey},${1:hashtable table},${2:dialog whichDialog})",
           "description": "fnSaveDialogHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveButtonHandleBJ": {
           "prefix": "fnSaveButtonHandleBJ",
           "body": "SaveButtonHandleBJ(${0:integer missionKey},${1:button whichButton},${2:hashtable table})",
           "description": "fnSaveButtonHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveTextTagHandleBJ": {
           "prefix": "fnSaveTextTagHandleBJ",
           "body": "SaveTextTagHandleBJ(${0:texttag whichTexttag},${1:integer missionKey},${2:hashtable table})",
           "description": "fnSaveTextTagHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveLightningHandleBJ": {
           "prefix": "fnSaveLightningHandleBJ",
           "body": "SaveLightningHandleBJ(${0:integer missionKey},${1:hashtable table},${2:lightning whichLightning})",
           "description": "fnSaveLightningHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveImageHandleBJ": {
           "prefix": "fnSaveImageHandleBJ",
           "body": "SaveImageHandleBJ(${0:integer missionKey},${1:image whichImage},${2:hashtable table})",
           "description": "fnSaveImageHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveUbersplatHandleBJ": {
           "prefix": "fnSaveUbersplatHandleBJ",
           "body": "SaveUbersplatHandleBJ(${0:integer missionKey},${1:ubersplat whichUbersplat},${2:hashtable table})",
           "description": "fnSaveUbersplatHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveRegionHandleBJ": {
           "prefix": "fnSaveRegionHandleBJ",
           "body": "SaveRegionHandleBJ(${0:integer missionKey},${1:region whichRegion},${2:hashtable table})",
           "description": "fnSaveRegionHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveFogStateHandleBJ": {
           "prefix": "fnSaveFogStateHandleBJ",
           "body": "SaveFogStateHandleBJ(${0:integer missionKey},${1:hashtable table},${2:fogstate whichFogState})",
           "description": "fnSaveFogStateHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveFogModifierHandleBJ": {
           "prefix": "fnSaveFogModifierHandleBJ",
           "body": "SaveFogModifierHandleBJ(${0:fogmodifier whichFogModifier},${1:integer missionKey},${2:hashtable table})",
           "description": "fnSaveFogModifierHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveAgentHandleBJ": {
           "prefix": "fnSaveAgentHandleBJ",
           "body": "SaveAgentHandleBJ(${0:integer missionKey},${1:hashtable table},${2:agent whichAgent})",
           "description": "fnSaveAgentHandleBJ",
           "scope": "source.vjass"
       },
        "fnSaveHashtableHandleBJ": {
           "prefix": "fnSaveHashtableHandleBJ",
           "body": "SaveHashtableHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnSaveHashtableHandleBJ",
           "scope": "source.vjass"
       },
        "fnGetStoredRealBJ": {
           "prefix": "fnGetStoredRealBJ",
           "body": "GetStoredRealBJ(${0:gamecache cache},${1:string missionKey})",
           "description": "fnGetStoredRealBJ",
           "scope": "source.vjass"
       },
        "fnGetStoredIntegerBJ": {
           "prefix": "fnGetStoredIntegerBJ",
           "body": "GetStoredIntegerBJ(${0:gamecache cache},${1:string missionKey})",
           "description": "fnGetStoredIntegerBJ",
           "scope": "source.vjass"
       },
        "fnGetStoredBooleanBJ": {
           "prefix": "fnGetStoredBooleanBJ",
           "body": "GetStoredBooleanBJ(${0:gamecache cache},${1:string missionKey})",
           "description": "fnGetStoredBooleanBJ",
           "scope": "source.vjass"
       },
        "fnGetStoredStringBJ": {
           "prefix": "fnGetStoredStringBJ",
           "body": "GetStoredStringBJ(${0:gamecache cache},${1:string missionKey})",
           "description": "fnGetStoredStringBJ",
           "scope": "source.vjass"
       },
        "fnLoadRealBJ": {
           "prefix": "fnLoadRealBJ",
           "body": "LoadRealBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadRealBJ",
           "scope": "source.vjass"
       },
        "fnLoadIntegerBJ": {
           "prefix": "fnLoadIntegerBJ",
           "body": "LoadIntegerBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadIntegerBJ",
           "scope": "source.vjass"
       },
        "fnLoadBooleanBJ": {
           "prefix": "fnLoadBooleanBJ",
           "body": "LoadBooleanBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadBooleanBJ",
           "scope": "source.vjass"
       },
        "fnLoadStringBJ": {
           "prefix": "fnLoadStringBJ",
           "body": "LoadStringBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadStringBJ",
           "scope": "source.vjass"
       },
        "fnLoadPlayerHandleBJ": {
           "prefix": "fnLoadPlayerHandleBJ",
           "body": "LoadPlayerHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadPlayerHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadWidgetHandleBJ": {
           "prefix": "fnLoadWidgetHandleBJ",
           "body": "LoadWidgetHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadWidgetHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadDestructableHandleBJ": {
           "prefix": "fnLoadDestructableHandleBJ",
           "body": "LoadDestructableHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadDestructableHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadItemHandleBJ": {
           "prefix": "fnLoadItemHandleBJ",
           "body": "LoadItemHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadItemHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadUnitHandleBJ": {
           "prefix": "fnLoadUnitHandleBJ",
           "body": "LoadUnitHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadUnitHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadAbilityHandleBJ": {
           "prefix": "fnLoadAbilityHandleBJ",
           "body": "LoadAbilityHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadAbilityHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadTimerHandleBJ": {
           "prefix": "fnLoadTimerHandleBJ",
           "body": "LoadTimerHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadTimerHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadTriggerHandleBJ": {
           "prefix": "fnLoadTriggerHandleBJ",
           "body": "LoadTriggerHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadTriggerHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadTriggerConditionHandleBJ": {
           "prefix": "fnLoadTriggerConditionHandleBJ",
           "body": "LoadTriggerConditionHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadTriggerConditionHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadTriggerActionHandleBJ": {
           "prefix": "fnLoadTriggerActionHandleBJ",
           "body": "LoadTriggerActionHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadTriggerActionHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadTriggerEventHandleBJ": {
           "prefix": "fnLoadTriggerEventHandleBJ",
           "body": "LoadTriggerEventHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadTriggerEventHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadForceHandleBJ": {
           "prefix": "fnLoadForceHandleBJ",
           "body": "LoadForceHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadForceHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadGroupHandleBJ": {
           "prefix": "fnLoadGroupHandleBJ",
           "body": "LoadGroupHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadGroupHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadLocationHandleBJ": {
           "prefix": "fnLoadLocationHandleBJ",
           "body": "LoadLocationHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadLocationHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadRectHandleBJ": {
           "prefix": "fnLoadRectHandleBJ",
           "body": "LoadRectHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadRectHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadBooleanExprHandleBJ": {
           "prefix": "fnLoadBooleanExprHandleBJ",
           "body": "LoadBooleanExprHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadBooleanExprHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadSoundHandleBJ": {
           "prefix": "fnLoadSoundHandleBJ",
           "body": "LoadSoundHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadSoundHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadEffectHandleBJ": {
           "prefix": "fnLoadEffectHandleBJ",
           "body": "LoadEffectHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadEffectHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadUnitPoolHandleBJ": {
           "prefix": "fnLoadUnitPoolHandleBJ",
           "body": "LoadUnitPoolHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadUnitPoolHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadItemPoolHandleBJ": {
           "prefix": "fnLoadItemPoolHandleBJ",
           "body": "LoadItemPoolHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadItemPoolHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadQuestHandleBJ": {
           "prefix": "fnLoadQuestHandleBJ",
           "body": "LoadQuestHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadQuestHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadQuestItemHandleBJ": {
           "prefix": "fnLoadQuestItemHandleBJ",
           "body": "LoadQuestItemHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadQuestItemHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadDefeatConditionHandleBJ": {
           "prefix": "fnLoadDefeatConditionHandleBJ",
           "body": "LoadDefeatConditionHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadDefeatConditionHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadTimerDialogHandleBJ": {
           "prefix": "fnLoadTimerDialogHandleBJ",
           "body": "LoadTimerDialogHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadTimerDialogHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadLeaderboardHandleBJ": {
           "prefix": "fnLoadLeaderboardHandleBJ",
           "body": "LoadLeaderboardHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadLeaderboardHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadMultiboardHandleBJ": {
           "prefix": "fnLoadMultiboardHandleBJ",
           "body": "LoadMultiboardHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadMultiboardHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadMultiboardItemHandleBJ": {
           "prefix": "fnLoadMultiboardItemHandleBJ",
           "body": "LoadMultiboardItemHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadMultiboardItemHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadTrackableHandleBJ": {
           "prefix": "fnLoadTrackableHandleBJ",
           "body": "LoadTrackableHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadTrackableHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadDialogHandleBJ": {
           "prefix": "fnLoadDialogHandleBJ",
           "body": "LoadDialogHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadDialogHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadButtonHandleBJ": {
           "prefix": "fnLoadButtonHandleBJ",
           "body": "LoadButtonHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadButtonHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadTextTagHandleBJ": {
           "prefix": "fnLoadTextTagHandleBJ",
           "body": "LoadTextTagHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadTextTagHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadLightningHandleBJ": {
           "prefix": "fnLoadLightningHandleBJ",
           "body": "LoadLightningHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadLightningHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadImageHandleBJ": {
           "prefix": "fnLoadImageHandleBJ",
           "body": "LoadImageHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadImageHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadUbersplatHandleBJ": {
           "prefix": "fnLoadUbersplatHandleBJ",
           "body": "LoadUbersplatHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadUbersplatHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadRegionHandleBJ": {
           "prefix": "fnLoadRegionHandleBJ",
           "body": "LoadRegionHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadRegionHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadFogStateHandleBJ": {
           "prefix": "fnLoadFogStateHandleBJ",
           "body": "LoadFogStateHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadFogStateHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadFogModifierHandleBJ": {
           "prefix": "fnLoadFogModifierHandleBJ",
           "body": "LoadFogModifierHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadFogModifierHandleBJ",
           "scope": "source.vjass"
       },
        "fnLoadHashtableHandleBJ": {
           "prefix": "fnLoadHashtableHandleBJ",
           "body": "LoadHashtableHandleBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnLoadHashtableHandleBJ",
           "scope": "source.vjass"
       },
        "fnRestoreUnitLocFacingAngleBJ": {
           "prefix": "fnRestoreUnitLocFacingAngleBJ",
           "body": "RestoreUnitLocFacingAngleBJ(${0:real facing},${1:gamecache cache},${2:location loc},${3:string missionKey},${4:player forWhichPlayer})",
           "description": "fnRestoreUnitLocFacingAngleBJ",
           "scope": "source.vjass"
       },
        "fnRestoreUnitLocFacingPointBJ": {
           "prefix": "fnRestoreUnitLocFacingPointBJ",
           "body": "RestoreUnitLocFacingPointBJ(${0:gamecache cache},${1:location lookAt},${2:string missionKey},${3:player forWhichPlayer})",
           "description": "fnRestoreUnitLocFacingPointBJ",
           "scope": "source.vjass"
       },
        "fnGetLastRestoredUnitBJ": {
           "prefix": "fnGetLastRestoredUnitBJ",
           "body": "GetLastRestoredUnitBJ(${0:nothing})",
           "description": "fnGetLastRestoredUnitBJ",
           "scope": "source.vjass"
       },
        "fnFlushGameCacheBJ": {
           "prefix": "fnFlushGameCacheBJ",
           "body": "FlushGameCacheBJ(${0:gamecache cache})",
           "description": "fnFlushGameCacheBJ",
           "scope": "source.vjass"
       },
        "fnFlushStoredMissionBJ": {
           "prefix": "fnFlushStoredMissionBJ",
           "body": "FlushStoredMissionBJ(${0:gamecache cache},${1:string missionKey})",
           "description": "fnFlushStoredMissionBJ",
           "scope": "source.vjass"
       },
        "fnFlushParentHashtableBJ": {
           "prefix": "fnFlushParentHashtableBJ",
           "body": "FlushParentHashtableBJ(${0:hashtable table})",
           "description": "fnFlushParentHashtableBJ",
           "scope": "source.vjass"
       },
        "fnFlushChildHashtableBJ": {
           "prefix": "fnFlushChildHashtableBJ",
           "body": "FlushChildHashtableBJ(${0:integer missionKey},${1:hashtable table})",
           "description": "fnFlushChildHashtableBJ",
           "scope": "source.vjass"
       },
        "fnHaveStoredValue": {
           "prefix": "fnHaveStoredValue",
           "body": "HaveStoredValue(${0:integer valueType},${1:string missionKey},${2:gamecache cache})",
           "description": "fnHaveStoredValue",
           "scope": "source.vjass"
       },
        "fnHaveSavedValue": {
           "prefix": "fnHaveSavedValue",
           "body": "HaveSavedValue(${0:integer missionKey},${1:hashtable table})",
           "description": "fnHaveSavedValue",
           "scope": "source.vjass"
       },
        "fnShowCustomCampaignButton": {
           "prefix": "fnShowCustomCampaignButton",
           "body": "ShowCustomCampaignButton(${0:integer whichButton},${1:boolean show})",
           "description": "fnShowCustomCampaignButton",
           "scope": "source.vjass"
       },
        "fnIsCustomCampaignButtonVisibile": {
           "prefix": "fnIsCustomCampaignButtonVisibile",
           "body": "IsCustomCampaignButtonVisibile(${0:integer whichButton})",
           "description": "fnIsCustomCampaignButtonVisibile",
           "scope": "source.vjass"
       },
        "fnLoadGameBJ": {
           "prefix": "fnLoadGameBJ",
           "body": "LoadGameBJ(${0:boolean doScoreScreen},${1:string loadFileName})",
           "description": "fnLoadGameBJ",
           "scope": "source.vjass"
       },
        "fnSaveAndChangeLevelBJ": {
           "prefix": "fnSaveAndChangeLevelBJ",
           "body": "SaveAndChangeLevelBJ(${0:boolean doScoreScreen},${1:string newLevel})",
           "description": "fnSaveAndChangeLevelBJ",
           "scope": "source.vjass"
       },
        "fnSaveAndLoadGameBJ": {
           "prefix": "fnSaveAndLoadGameBJ",
           "body": "SaveAndLoadGameBJ(${0:boolean doScoreScreen},${1:string loadFileName})",
           "description": "fnSaveAndLoadGameBJ",
           "scope": "source.vjass"
       },
        "fnRenameSaveDirectoryBJ": {
           "prefix": "fnRenameSaveDirectoryBJ",
           "body": "RenameSaveDirectoryBJ(${0:string destDirName})",
           "description": "fnRenameSaveDirectoryBJ",
           "scope": "source.vjass"
       },
        "fnRemoveSaveDirectoryBJ": {
           "prefix": "fnRemoveSaveDirectoryBJ",
           "body": "RemoveSaveDirectoryBJ(${0:string sourceDirName})",
           "description": "fnRemoveSaveDirectoryBJ",
           "scope": "source.vjass"
       },
        "fnCopySaveGameBJ": {
           "prefix": "fnCopySaveGameBJ",
           "body": "CopySaveGameBJ(${0:string destSaveName})",
           "description": "fnCopySaveGameBJ",
           "scope": "source.vjass"
       },
        "fnGetPlayerStartLocationX": {
           "prefix": "fnGetPlayerStartLocationX",
           "body": "GetPlayerStartLocationX(${0:player whichPlayer})",
           "description": "fnGetPlayerStartLocationX",
           "scope": "source.vjass"
       },
        "fnGetPlayerStartLocationY": {
           "prefix": "fnGetPlayerStartLocationY",
           "body": "GetPlayerStartLocationY(${0:player whichPlayer})",
           "description": "fnGetPlayerStartLocationY",
           "scope": "source.vjass"
       },
        "fnGetPlayerStartLocationLoc": {
           "prefix": "fnGetPlayerStartLocationLoc",
           "body": "GetPlayerStartLocationLoc(${0:player whichPlayer})",
           "description": "fnGetPlayerStartLocationLoc",
           "scope": "source.vjass"
       },
        "fnGetRectCenter": {
           "prefix": "fnGetRectCenter",
           "body": "GetRectCenter(${0:rect whichRect})",
           "description": "fnGetRectCenter",
           "scope": "source.vjass"
       },
        "fnIsPlayerSlotState": {
           "prefix": "fnIsPlayerSlotState",
           "body": "IsPlayerSlotState(${0:player whichPlayer},${1:playerslotstate whichState})",
           "description": "fnIsPlayerSlotState",
           "scope": "source.vjass"
       },
        "fnGetFadeFromSeconds": {
           "prefix": "fnGetFadeFromSeconds",
           "body": "GetFadeFromSeconds(${0:real seconds})",
           "description": "fnGetFadeFromSeconds",
           "scope": "source.vjass"
       },
        "fnGetFadeFromSecondsAsReal": {
           "prefix": "fnGetFadeFromSecondsAsReal",
           "body": "GetFadeFromSecondsAsReal(${0:real seconds})",
           "description": "fnGetFadeFromSecondsAsReal",
           "scope": "source.vjass"
       },
        "fnAdjustPlayerStateSimpleBJ": {
           "prefix": "fnAdjustPlayerStateSimpleBJ",
           "body": "AdjustPlayerStateSimpleBJ(${0:player whichPlayer},${1:integer delta},${2:playerstate whichPlayerState})",
           "description": "fnAdjustPlayerStateSimpleBJ",
           "scope": "source.vjass"
       },
        "fnAdjustPlayerStateBJ": {
           "prefix": "fnAdjustPlayerStateBJ",
           "body": "AdjustPlayerStateBJ(${0:integer delta},${1:playerstate whichPlayerState},${2:player whichPlayer})",
           "description": "fnAdjustPlayerStateBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerStateBJ": {
           "prefix": "fnSetPlayerStateBJ",
           "body": "SetPlayerStateBJ(${0:player whichPlayer},${1:integer value},${2:playerstate whichPlayerState})",
           "description": "fnSetPlayerStateBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerFlagBJ": {
           "prefix": "fnSetPlayerFlagBJ",
           "body": "SetPlayerFlagBJ(${0:playerstate whichPlayerFlag},${1:boolean flag},${2:player whichPlayer})",
           "description": "fnSetPlayerFlagBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerTaxRateBJ": {
           "prefix": "fnSetPlayerTaxRateBJ",
           "body": "SetPlayerTaxRateBJ(${0:player otherPlayer},${1:integer rate},${2:playerstate whichResource})",
           "description": "fnSetPlayerTaxRateBJ",
           "scope": "source.vjass"
       },
        "fnGetPlayerTaxRateBJ": {
           "prefix": "fnGetPlayerTaxRateBJ",
           "body": "GetPlayerTaxRateBJ(${0:playerstate whichResource},${1:player otherPlayer})",
           "description": "fnGetPlayerTaxRateBJ",
           "scope": "source.vjass"
       },
        "fnIsPlayerFlagSetBJ": {
           "prefix": "fnIsPlayerFlagSetBJ",
           "body": "IsPlayerFlagSetBJ(${0:playerstate whichPlayerFlag},${1:player whichPlayer})",
           "description": "fnIsPlayerFlagSetBJ",
           "scope": "source.vjass"
       },
        "fnAddResourceAmountBJ": {
           "prefix": "fnAddResourceAmountBJ",
           "body": "AddResourceAmountBJ(${0:integer delta},${1:unit whichUnit})",
           "description": "fnAddResourceAmountBJ",
           "scope": "source.vjass"
       },
        "fnGetConvertedPlayerId": {
           "prefix": "fnGetConvertedPlayerId",
           "body": "GetConvertedPlayerId(${0:player whichPlayer})",
           "description": "fnGetConvertedPlayerId",
           "scope": "source.vjass"
       },
        "fnConvertedPlayer": {
           "prefix": "fnConvertedPlayer",
           "body": "ConvertedPlayer(${0:integer convertedPlayerId})",
           "description": "fnConvertedPlayer",
           "scope": "source.vjass"
       },
        "fnGetRectWidthBJ": {
           "prefix": "fnGetRectWidthBJ",
           "body": "GetRectWidthBJ(${0:rect r})",
           "description": "fnGetRectWidthBJ",
           "scope": "source.vjass"
       },
        "fnGetRectHeightBJ": {
           "prefix": "fnGetRectHeightBJ",
           "body": "GetRectHeightBJ(${0:rect r})",
           "description": "fnGetRectHeightBJ",
           "scope": "source.vjass"
       },
        "fnBlightGoldMineForPlayerBJ": {
           "prefix": "fnBlightGoldMineForPlayerBJ",
           "body": "BlightGoldMineForPlayerBJ(${0:player whichPlayer},${1:unit goldMine})",
           "description": "fnBlightGoldMineForPlayerBJ",
           "scope": "source.vjass"
       },
        "fnBlightGoldMineForPlayer": {
           "prefix": "fnBlightGoldMineForPlayer",
           "body": "BlightGoldMineForPlayer(${0:player whichPlayer},${1:unit goldMine})",
           "description": "fnBlightGoldMineForPlayer",
           "scope": "source.vjass"
       },
        "fnGetLastHauntedGoldMine": {
           "prefix": "fnGetLastHauntedGoldMine",
           "body": "GetLastHauntedGoldMine(${0:nothing})",
           "description": "fnGetLastHauntedGoldMine",
           "scope": "source.vjass"
       },
        "fnIsPointBlightedBJ": {
           "prefix": "fnIsPointBlightedBJ",
           "body": "IsPointBlightedBJ(${0:location where})",
           "description": "fnIsPointBlightedBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerColorBJEnum": {
           "prefix": "fnSetPlayerColorBJEnum",
           "body": "SetPlayerColorBJEnum(${0:nothing})",
           "description": "fnSetPlayerColorBJEnum",
           "scope": "source.vjass"
       },
        "fnSetPlayerColorBJ": {
           "prefix": "fnSetPlayerColorBJ",
           "body": "SetPlayerColorBJ(${0:boolean changeExisting},${1:player whichPlayer},${2:playercolor color})",
           "description": "fnSetPlayerColorBJ",
           "scope": "source.vjass"
       },
        "fnSetPlayerUnitAvailableBJ": {
           "prefix": "fnSetPlayerUnitAvailableBJ",
           "body": "SetPlayerUnitAvailableBJ(${0:integer unitId},${1:boolean allowed},${2:player whichPlayer})",
           "description": "fnSetPlayerUnitAvailableBJ",
           "scope": "source.vjass"
       },
        "fnLockGameSpeedBJ": {
           "prefix": "fnLockGameSpeedBJ",
           "body": "LockGameSpeedBJ(${0:nothing})",
           "description": "fnLockGameSpeedBJ",
           "scope": "source.vjass"
       },
        "fnUnlockGameSpeedBJ": {
           "prefix": "fnUnlockGameSpeedBJ",
           "body": "UnlockGameSpeedBJ(${0:nothing})",
           "description": "fnUnlockGameSpeedBJ",
           "scope": "source.vjass"
       },
        "fnIssueTargetOrderBJ": {
           "prefix": "fnIssueTargetOrderBJ",
           "body": "IssueTargetOrderBJ(${0:widget targetWidget},${1:string order},${2:unit whichUnit})",
           "description": "fnIssueTargetOrderBJ",
           "scope": "source.vjass"
       },
        "fnIssuePointOrderLocBJ": {
           "prefix": "fnIssuePointOrderLocBJ",
           "body": "IssuePointOrderLocBJ(${0:string order},${1:unit whichUnit},${2:location whichLocation})",
           "description": "fnIssuePointOrderLocBJ",
           "scope": "source.vjass"
       },
        "fnIssueTargetDestructableOrder": {
           "prefix": "fnIssueTargetDestructableOrder",
           "body": "IssueTargetDestructableOrder(${0:widget targetWidget},${1:string order},${2:unit whichUnit})",
           "description": "fnIssueTargetDestructableOrder",
           "scope": "source.vjass"
       },
        "fnIssueTargetItemOrder": {
           "prefix": "fnIssueTargetItemOrder",
           "body": "IssueTargetItemOrder(${0:widget targetWidget},${1:string order},${2:unit whichUnit})",
           "description": "fnIssueTargetItemOrder",
           "scope": "source.vjass"
       },
        "fnIssueImmediateOrderBJ": {
           "prefix": "fnIssueImmediateOrderBJ",
           "body": "IssueImmediateOrderBJ(${0:string order},${1:unit whichUnit})",
           "description": "fnIssueImmediateOrderBJ",
           "scope": "source.vjass"
       },
        "fnGroupTargetOrderBJ": {
           "prefix": "fnGroupTargetOrderBJ",
           "body": "GroupTargetOrderBJ(${0:widget targetWidget},${1:group whichGroup},${2:string order})",
           "description": "fnGroupTargetOrderBJ",
           "scope": "source.vjass"
       },
        "fnGroupPointOrderLocBJ": {
           "prefix": "fnGroupPointOrderLocBJ",
           "body": "GroupPointOrderLocBJ(${0:group whichGroup},${1:string order},${2:location whichLocation})",
           "description": "fnGroupPointOrderLocBJ",
           "scope": "source.vjass"
       },
        "fnGroupImmediateOrderBJ": {
           "prefix": "fnGroupImmediateOrderBJ",
           "body": "GroupImmediateOrderBJ(${0:group whichGroup},${1:string order})",
           "description": "fnGroupImmediateOrderBJ",
           "scope": "source.vjass"
       },
        "fnGroupTargetDestructableOrder": {
           "prefix": "fnGroupTargetDestructableOrder",
           "body": "GroupTargetDestructableOrder(${0:widget targetWidget},${1:group whichGroup},${2:string order})",
           "description": "fnGroupTargetDestructableOrder",
           "scope": "source.vjass"
       },
        "fnGroupTargetItemOrder": {
           "prefix": "fnGroupTargetItemOrder",
           "body": "GroupTargetItemOrder(${0:widget targetWidget},${1:group whichGroup},${2:string order})",
           "description": "fnGroupTargetItemOrder",
           "scope": "source.vjass"
       },
        "fnGetDyingDestructable": {
           "prefix": "fnGetDyingDestructable",
           "body": "GetDyingDestructable(${0:nothing})",
           "description": "fnGetDyingDestructable",
           "scope": "source.vjass"
       },
        "fnSetUnitRallyPoint": {
           "prefix": "fnSetUnitRallyPoint",
           "body": "SetUnitRallyPoint(${0:location targPos},${1:unit whichUnit})",
           "description": "fnSetUnitRallyPoint",
           "scope": "source.vjass"
       },
        "fnSetUnitRallyUnit": {
           "prefix": "fnSetUnitRallyUnit",
           "body": "SetUnitRallyUnit(${0:unit targUnit})",
           "description": "fnSetUnitRallyUnit",
           "scope": "source.vjass"
       },
        "fnSetUnitRallyDestructable": {
           "prefix": "fnSetUnitRallyDestructable",
           "body": "SetUnitRallyDestructable(${0:destructable targDest},${1:unit whichUnit})",
           "description": "fnSetUnitRallyDestructable",
           "scope": "source.vjass"
       },
        "fnSaveDyingWidget": {
           "prefix": "fnSaveDyingWidget",
           "body": "SaveDyingWidget(${0:nothing})",
           "description": "fnSaveDyingWidget",
           "scope": "source.vjass"
       },
        "fnSetBlightRectBJ": {
           "prefix": "fnSetBlightRectBJ",
           "body": "SetBlightRectBJ(${0:player whichPlayer},${1:boolean addBlight},${2:rect r})",
           "description": "fnSetBlightRectBJ",
           "scope": "source.vjass"
       },
        "fnSetBlightRadiusLocBJ": {
           "prefix": "fnSetBlightRadiusLocBJ",
           "body": "SetBlightRadiusLocBJ(${0:real radius},${1:player whichPlayer},${2:boolean addBlight},${3:location loc})",
           "description": "fnSetBlightRadiusLocBJ",
           "scope": "source.vjass"
       },
        "fnGetAbilityName": {
           "prefix": "fnGetAbilityName",
           "body": "GetAbilityName(${0:integer abilcode})",
           "description": "fnGetAbilityName",
           "scope": "source.vjass"
       },
        "fnMeleeStartingVisibility": {
           "prefix": "fnMeleeStartingVisibility",
           "body": "MeleeStartingVisibility(${0:nothing})",
           "description": "fnMeleeStartingVisibility",
           "scope": "source.vjass"
       },
        "fnMeleeStartingResources": {
           "prefix": "fnMeleeStartingResources",
           "body": "MeleeStartingResources(${0:nothing})",
           "description": "fnMeleeStartingResources",
           "scope": "source.vjass"
       },
        "fnReducePlayerTechMaxAllowed": {
           "prefix": "fnReducePlayerTechMaxAllowed",
           "body": "ReducePlayerTechMaxAllowed(${0:player whichPlayer},${1:integer limit})",
           "description": "fnReducePlayerTechMaxAllowed",
           "scope": "source.vjass"
       },
        "fnMeleeStartingHeroLimit": {
           "prefix": "fnMeleeStartingHeroLimit",
           "body": "MeleeStartingHeroLimit(${0:nothing})",
           "description": "fnMeleeStartingHeroLimit",
           "scope": "source.vjass"
       },
        "fnMeleeTrainedUnitIsHeroBJFilter": {
           "prefix": "fnMeleeTrainedUnitIsHeroBJFilter",
           "body": "MeleeTrainedUnitIsHeroBJFilter(${0:nothing})",
           "description": "fnMeleeTrainedUnitIsHeroBJFilter",
           "scope": "source.vjass"
       },
        "fnMeleeGrantItemsToHero": {
           "prefix": "fnMeleeGrantItemsToHero",
           "body": "MeleeGrantItemsToHero(${0:unit whichUnit})",
           "description": "fnMeleeGrantItemsToHero",
           "scope": "source.vjass"
       },
        "fnMeleeGrantItemsToTrainedHero": {
           "prefix": "fnMeleeGrantItemsToTrainedHero",
           "body": "MeleeGrantItemsToTrainedHero(${0:nothing})",
           "description": "fnMeleeGrantItemsToTrainedHero",
           "scope": "source.vjass"
       },
        "fnMeleeGrantItemsToHiredHero": {
           "prefix": "fnMeleeGrantItemsToHiredHero",
           "body": "MeleeGrantItemsToHiredHero(${0:nothing})",
           "description": "fnMeleeGrantItemsToHiredHero",
           "scope": "source.vjass"
       },
        "fnMeleeGrantHeroItems": {
           "prefix": "fnMeleeGrantHeroItems",
           "body": "MeleeGrantHeroItems(${0:nothing})",
           "description": "fnMeleeGrantHeroItems",
           "scope": "source.vjass"
       },
        "fnMeleeClearExcessUnit": {
           "prefix": "fnMeleeClearExcessUnit",
           "body": "MeleeClearExcessUnit(${0:nothing})",
           "description": "fnMeleeClearExcessUnit",
           "scope": "source.vjass"
       },
        "fnMeleeClearNearbyUnits": {
           "prefix": "fnMeleeClearNearbyUnits",
           "body": "MeleeClearNearbyUnits(${0:real range})",
           "description": "fnMeleeClearNearbyUnits",
           "scope": "source.vjass"
       },
        "fnMeleeClearExcessUnits": {
           "prefix": "fnMeleeClearExcessUnits",
           "body": "MeleeClearExcessUnits(${0:nothing})",
           "description": "fnMeleeClearExcessUnits",
           "scope": "source.vjass"
       },
        "fnMeleeEnumFindNearestMine": {
           "prefix": "fnMeleeEnumFindNearestMine",
           "body": "MeleeEnumFindNearestMine(${0:nothing})",
           "description": "fnMeleeEnumFindNearestMine",
           "scope": "source.vjass"
       },
        "fnMeleeFindNearestMine": {
           "prefix": "fnMeleeFindNearestMine",
           "body": "MeleeFindNearestMine(${0:real range},${1:location src})",
           "description": "fnMeleeFindNearestMine",
           "scope": "source.vjass"
       },
        "fnMeleeRandomHeroLoc": {
           "prefix": "fnMeleeRandomHeroLoc",
           "body": "MeleeRandomHeroLoc(${0:player p},${1:location loc},${2:integer id4})",
           "description": "fnMeleeRandomHeroLoc",
           "scope": "source.vjass"
       },
        "fnMeleeGetProjectedLoc": {
           "prefix": "fnMeleeGetProjectedLoc",
           "body": "MeleeGetProjectedLoc(${0:real deltaAngle},${1:location targ})",
           "description": "fnMeleeGetProjectedLoc",
           "scope": "source.vjass"
       },
        "fnMeleeGetNearestValueWithin": {
           "prefix": "fnMeleeGetNearestValueWithin",
           "body": "MeleeGetNearestValueWithin(${0:real maxVal})",
           "description": "fnMeleeGetNearestValueWithin",
           "scope": "source.vjass"
       },
        "fnMeleeGetLocWithinRect": {
           "prefix": "fnMeleeGetLocWithinRect",
           "body": "MeleeGetLocWithinRect(${0:location src},${1:rect r})",
           "description": "fnMeleeGetLocWithinRect",
           "scope": "source.vjass"
       },
        "fnMeleeStartingUnitsHuman": {
           "prefix": "fnMeleeStartingUnitsHuman",
           "body": "MeleeStartingUnitsHuman(${0:player whichPlayer},${1:boolean doPreload},${2:location startLoc})",
           "description": "fnMeleeStartingUnitsHuman",
           "scope": "source.vjass"
       },
        "fnMeleeStartingUnitsOrc": {
           "prefix": "fnMeleeStartingUnitsOrc",
           "body": "MeleeStartingUnitsOrc(${0:player whichPlayer},${1:boolean doPreload},${2:location startLoc})",
           "description": "fnMeleeStartingUnitsOrc",
           "scope": "source.vjass"
       },
        "fnMeleeStartingUnitsUndead": {
           "prefix": "fnMeleeStartingUnitsUndead",
           "body": "MeleeStartingUnitsUndead(${0:player whichPlayer},${1:boolean doPreload},${2:location startLoc})",
           "description": "fnMeleeStartingUnitsUndead",
           "scope": "source.vjass"
       },
        "fnMeleeStartingUnitsNightElf": {
           "prefix": "fnMeleeStartingUnitsNightElf",
           "body": "MeleeStartingUnitsNightElf(${0:player whichPlayer},${1:boolean doPreload},${2:location startLoc})",
           "description": "fnMeleeStartingUnitsNightElf",
           "scope": "source.vjass"
       },
        "fnMeleeStartingUnitsUnknownRace": {
           "prefix": "fnMeleeStartingUnitsUnknownRace",
           "body": "MeleeStartingUnitsUnknownRace(${0:player whichPlayer},${1:boolean doPreload},${2:location startLoc})",
           "description": "fnMeleeStartingUnitsUnknownRace",
           "scope": "source.vjass"
       },
        "fnMeleeStartingUnits": {
           "prefix": "fnMeleeStartingUnits",
           "body": "MeleeStartingUnits(${0:nothing})",
           "description": "fnMeleeStartingUnits",
           "scope": "source.vjass"
       },
        "fnMeleeStartingUnitsForPlayer": {
           "prefix": "fnMeleeStartingUnitsForPlayer",
           "body": "MeleeStartingUnitsForPlayer(${0:boolean doHeroes},${1:player whichPlayer},${2:race whichRace},${3:location loc})",
           "description": "fnMeleeStartingUnitsForPlayer",
           "scope": "source.vjass"
       },
        "fnPickMeleeAI": {
           "prefix": "fnPickMeleeAI",
           "body": "PickMeleeAI(${0:player num},${1:string s3})",
           "description": "fnPickMeleeAI",
           "scope": "source.vjass"
       },
        "fnMeleeStartingAI": {
           "prefix": "fnMeleeStartingAI",
           "body": "MeleeStartingAI(${0:nothing})",
           "description": "fnMeleeStartingAI",
           "scope": "source.vjass"
       },
        "fnLockGuardPosition": {
           "prefix": "fnLockGuardPosition",
           "body": "LockGuardPosition(${0:unit targ})",
           "description": "fnLockGuardPosition",
           "scope": "source.vjass"
       },
        "fnMeleePlayerIsOpponent": {
           "prefix": "fnMeleePlayerIsOpponent",
           "body": "MeleePlayerIsOpponent(${0:integer opponentIndex})",
           "description": "fnMeleePlayerIsOpponent",
           "scope": "source.vjass"
       },
        "fnMeleeGetAllyStructureCount": {
           "prefix": "fnMeleeGetAllyStructureCount",
           "body": "MeleeGetAllyStructureCount(${0:player whichPlayer})",
           "description": "fnMeleeGetAllyStructureCount",
           "scope": "source.vjass"
       },
        "fnMeleeGetAllyCount": {
           "prefix": "fnMeleeGetAllyCount",
           "body": "MeleeGetAllyCount(${0:player whichPlayer})",
           "description": "fnMeleeGetAllyCount",
           "scope": "source.vjass"
       },
        "fnMeleeGetAllyKeyStructureCount": {
           "prefix": "fnMeleeGetAllyKeyStructureCount",
           "body": "MeleeGetAllyKeyStructureCount(${0:player whichPlayer})",
           "description": "fnMeleeGetAllyKeyStructureCount",
           "scope": "source.vjass"
       },
        "fnMeleeDoDrawEnum": {
           "prefix": "fnMeleeDoDrawEnum",
           "body": "MeleeDoDrawEnum(${0:nothing})",
           "description": "fnMeleeDoDrawEnum",
           "scope": "source.vjass"
       },
        "fnMeleeDoVictoryEnum": {
           "prefix": "fnMeleeDoVictoryEnum",
           "body": "MeleeDoVictoryEnum(${0:nothing})",
           "description": "fnMeleeDoVictoryEnum",
           "scope": "source.vjass"
       },
        "fnMeleeDoDefeat": {
           "prefix": "fnMeleeDoDefeat",
           "body": "MeleeDoDefeat(${0:player whichPlayer})",
           "description": "fnMeleeDoDefeat",
           "scope": "source.vjass"
       },
        "fnMeleeDoDefeatEnum": {
           "prefix": "fnMeleeDoDefeatEnum",
           "body": "MeleeDoDefeatEnum(${0:nothing})",
           "description": "fnMeleeDoDefeatEnum",
           "scope": "source.vjass"
       },
        "fnMeleeDoLeave": {
           "prefix": "fnMeleeDoLeave",
           "body": "MeleeDoLeave(${0:player whichPlayer})",
           "description": "fnMeleeDoLeave",
           "scope": "source.vjass"
       },
        "fnMeleeRemoveObservers": {
           "prefix": "fnMeleeRemoveObservers",
           "body": "MeleeRemoveObservers(${0:nothing})",
           "description": "fnMeleeRemoveObservers",
           "scope": "source.vjass"
       },
        "fnMeleeCheckForVictors": {
           "prefix": "fnMeleeCheckForVictors",
           "body": "MeleeCheckForVictors(${0:nothing})",
           "description": "fnMeleeCheckForVictors",
           "scope": "source.vjass"
       },
        "fnMeleeCheckForLosersAndVictors": {
           "prefix": "fnMeleeCheckForLosersAndVictors",
           "body": "MeleeCheckForLosersAndVictors(${0:nothing})",
           "description": "fnMeleeCheckForLosersAndVictors",
           "scope": "source.vjass"
       },
        "fnMeleeGetCrippledWarningMessage": {
           "prefix": "fnMeleeGetCrippledWarningMessage",
           "body": "MeleeGetCrippledWarningMessage(${0:player whichPlayer})",
           "description": "fnMeleeGetCrippledWarningMessage",
           "scope": "source.vjass"
       },
        "fnMeleeGetCrippledTimerMessage": {
           "prefix": "fnMeleeGetCrippledTimerMessage",
           "body": "MeleeGetCrippledTimerMessage(${0:player whichPlayer})",
           "description": "fnMeleeGetCrippledTimerMessage",
           "scope": "source.vjass"
       },
        "fnMeleeGetCrippledRevealedMessage": {
           "prefix": "fnMeleeGetCrippledRevealedMessage",
           "body": "MeleeGetCrippledRevealedMessage(${0:player whichPlayer})",
           "description": "fnMeleeGetCrippledRevealedMessage",
           "scope": "source.vjass"
       },
        "fnMeleeExposePlayer": {
           "prefix": "fnMeleeExposePlayer",
           "body": "MeleeExposePlayer(${0:player whichPlayer},${1:boolean expose})",
           "description": "fnMeleeExposePlayer",
           "scope": "source.vjass"
       },
        "fnMeleeExposeAllPlayers": {
           "prefix": "fnMeleeExposeAllPlayers",
           "body": "MeleeExposeAllPlayers(${0:nothing})",
           "description": "fnMeleeExposeAllPlayers",
           "scope": "source.vjass"
       },
        "fnMeleeCrippledPlayerTimeout": {
           "prefix": "fnMeleeCrippledPlayerTimeout",
           "body": "MeleeCrippledPlayerTimeout(${0:nothing})",
           "description": "fnMeleeCrippledPlayerTimeout",
           "scope": "source.vjass"
       },
        "fnMeleePlayerIsCrippled": {
           "prefix": "fnMeleePlayerIsCrippled",
           "body": "MeleePlayerIsCrippled(${0:player whichPlayer})",
           "description": "fnMeleePlayerIsCrippled",
           "scope": "source.vjass"
       },
        "fnMeleeCheckForCrippledPlayers": {
           "prefix": "fnMeleeCheckForCrippledPlayers",
           "body": "MeleeCheckForCrippledPlayers(${0:nothing})",
           "description": "fnMeleeCheckForCrippledPlayers",
           "scope": "source.vjass"
       },
        "fnMeleeCheckLostUnit": {
           "prefix": "fnMeleeCheckLostUnit",
           "body": "MeleeCheckLostUnit(${0:unit lostUnit})",
           "description": "fnMeleeCheckLostUnit",
           "scope": "source.vjass"
       },
        "fnMeleeCheckAddedUnit": {
           "prefix": "fnMeleeCheckAddedUnit",
           "body": "MeleeCheckAddedUnit(${0:unit addedUnit})",
           "description": "fnMeleeCheckAddedUnit",
           "scope": "source.vjass"
       },
        "fnMeleeTriggerActionConstructCancel": {
           "prefix": "fnMeleeTriggerActionConstructCancel",
           "body": "MeleeTriggerActionConstructCancel(${0:nothing})",
           "description": "fnMeleeTriggerActionConstructCancel",
           "scope": "source.vjass"
       },
        "fnMeleeTriggerActionUnitDeath": {
           "prefix": "fnMeleeTriggerActionUnitDeath",
           "body": "MeleeTriggerActionUnitDeath(${0:nothing})",
           "description": "fnMeleeTriggerActionUnitDeath",
           "scope": "source.vjass"
       },
        "fnMeleeTriggerActionUnitConstructionStart": {
           "prefix": "fnMeleeTriggerActionUnitConstructionStart",
           "body": "MeleeTriggerActionUnitConstructionStart(${0:nothing})",
           "description": "fnMeleeTriggerActionUnitConstructionStart",
           "scope": "source.vjass"
       },
        "fnMeleeTriggerActionPlayerDefeated": {
           "prefix": "fnMeleeTriggerActionPlayerDefeated",
           "body": "MeleeTriggerActionPlayerDefeated(${0:nothing})",
           "description": "fnMeleeTriggerActionPlayerDefeated",
           "scope": "source.vjass"
       },
        "fnMeleeTriggerActionPlayerLeft": {
           "prefix": "fnMeleeTriggerActionPlayerLeft",
           "body": "MeleeTriggerActionPlayerLeft(${0:nothing})",
           "description": "fnMeleeTriggerActionPlayerLeft",
           "scope": "source.vjass"
       },
        "fnMeleeTriggerActionAllianceChange": {
           "prefix": "fnMeleeTriggerActionAllianceChange",
           "body": "MeleeTriggerActionAllianceChange(${0:nothing})",
           "description": "fnMeleeTriggerActionAllianceChange",
           "scope": "source.vjass"
       },
        "fnMeleeTriggerTournamentFinishSoon": {
           "prefix": "fnMeleeTriggerTournamentFinishSoon",
           "body": "MeleeTriggerTournamentFinishSoon(${0:nothing})",
           "description": "fnMeleeTriggerTournamentFinishSoon",
           "scope": "source.vjass"
       },
        "fnMeleeWasUserPlayer": {
           "prefix": "fnMeleeWasUserPlayer",
           "body": "MeleeWasUserPlayer(${0:player whichPlayer})",
           "description": "fnMeleeWasUserPlayer",
           "scope": "source.vjass"
       },
        "fnMeleeTournamentFinishNowRuleA": {
           "prefix": "fnMeleeTournamentFinishNowRuleA",
           "body": "MeleeTournamentFinishNowRuleA(${0:integer multiplier})",
           "description": "fnMeleeTournamentFinishNowRuleA",
           "scope": "source.vjass"
       },
        "fnMeleeTriggerTournamentFinishNow": {
           "prefix": "fnMeleeTriggerTournamentFinishNow",
           "body": "MeleeTriggerTournamentFinishNow(${0:nothing})",
           "description": "fnMeleeTriggerTournamentFinishNow",
           "scope": "source.vjass"
       },
        "fnMeleeInitVictoryDefeat": {
           "prefix": "fnMeleeInitVictoryDefeat",
           "body": "MeleeInitVictoryDefeat(${0:nothing})",
           "description": "fnMeleeInitVictoryDefeat",
           "scope": "source.vjass"
       },
        "fnCheckInitPlayerSlotAvailability": {
           "prefix": "fnCheckInitPlayerSlotAvailability",
           "body": "CheckInitPlayerSlotAvailability(${0:nothing})",
           "description": "fnCheckInitPlayerSlotAvailability",
           "scope": "source.vjass"
       },
        "fnSetPlayerSlotAvailable": {
           "prefix": "fnSetPlayerSlotAvailable",
           "body": "SetPlayerSlotAvailable(${0:player whichPlayer},${1:mapcontrol control})",
           "description": "fnSetPlayerSlotAvailable",
           "scope": "source.vjass"
       },
        "fnTeamInitPlayerSlots": {
           "prefix": "fnTeamInitPlayerSlots",
           "body": "TeamInitPlayerSlots(${0:integer teamCount})",
           "description": "fnTeamInitPlayerSlots",
           "scope": "source.vjass"
       },
        "fnMeleeInitPlayerSlots": {
           "prefix": "fnMeleeInitPlayerSlots",
           "body": "MeleeInitPlayerSlots(${0:nothing})",
           "description": "fnMeleeInitPlayerSlots",
           "scope": "source.vjass"
       },
        "fnFFAInitPlayerSlots": {
           "prefix": "fnFFAInitPlayerSlots",
           "body": "FFAInitPlayerSlots(${0:nothing})",
           "description": "fnFFAInitPlayerSlots",
           "scope": "source.vjass"
       },
        "fnOneOnOneInitPlayerSlots": {
           "prefix": "fnOneOnOneInitPlayerSlots",
           "body": "OneOnOneInitPlayerSlots(${0:nothing})",
           "description": "fnOneOnOneInitPlayerSlots",
           "scope": "source.vjass"
       },
        "fnInitGenericPlayerSlots": {
           "prefix": "fnInitGenericPlayerSlots",
           "body": "InitGenericPlayerSlots(${0:nothing})",
           "description": "fnInitGenericPlayerSlots",
           "scope": "source.vjass"
       },
        "fnSetDNCSoundsDawn": {
           "prefix": "fnSetDNCSoundsDawn",
           "body": "SetDNCSoundsDawn(${0:nothing})",
           "description": "fnSetDNCSoundsDawn",
           "scope": "source.vjass"
       },
        "fnSetDNCSoundsDusk": {
           "prefix": "fnSetDNCSoundsDusk",
           "body": "SetDNCSoundsDusk(${0:nothing})",
           "description": "fnSetDNCSoundsDusk",
           "scope": "source.vjass"
       },
        "fnSetDNCSoundsDay": {
           "prefix": "fnSetDNCSoundsDay",
           "body": "SetDNCSoundsDay(${0:nothing})",
           "description": "fnSetDNCSoundsDay",
           "scope": "source.vjass"
       },
        "fnSetDNCSoundsNight": {
           "prefix": "fnSetDNCSoundsNight",
           "body": "SetDNCSoundsNight(${0:nothing})",
           "description": "fnSetDNCSoundsNight",
           "scope": "source.vjass"
       },
        "fnInitDNCSounds": {
           "prefix": "fnInitDNCSounds",
           "body": "InitDNCSounds(${0:nothing})",
           "description": "fnInitDNCSounds",
           "scope": "source.vjass"
       },
        "fnInitBlizzardGlobals": {
           "prefix": "fnInitBlizzardGlobals",
           "body": "InitBlizzardGlobals(${0:nothing})",
           "description": "fnInitBlizzardGlobals",
           "scope": "source.vjass"
       },
        "fnInitQueuedTriggers": {
           "prefix": "fnInitQueuedTriggers",
           "body": "InitQueuedTriggers(${0:nothing})",
           "description": "fnInitQueuedTriggers",
           "scope": "source.vjass"
       },
        "fnInitMapRects": {
           "prefix": "fnInitMapRects",
           "body": "InitMapRects(${0:nothing})",
           "description": "fnInitMapRects",
           "scope": "source.vjass"
       },
        "fnInitSummonableCaps": {
           "prefix": "fnInitSummonableCaps",
           "body": "InitSummonableCaps(${0:nothing})",
           "description": "fnInitSummonableCaps",
           "scope": "source.vjass"
       },
        "fnUpdateStockAvailability": {
           "prefix": "fnUpdateStockAvailability",
           "body": "UpdateStockAvailability(${0:item whichItem})",
           "description": "fnUpdateStockAvailability",
           "scope": "source.vjass"
       },
        "fnUpdateEachStockBuildingEnum": {
           "prefix": "fnUpdateEachStockBuildingEnum",
           "body": "UpdateEachStockBuildingEnum(${0:nothing})",
           "description": "fnUpdateEachStockBuildingEnum",
           "scope": "source.vjass"
       },
        "fnUpdateEachStockBuilding": {
           "prefix": "fnUpdateEachStockBuilding",
           "body": "UpdateEachStockBuilding(${0:integer iLevel},${1:itemtype iType})",
           "description": "fnUpdateEachStockBuilding",
           "scope": "source.vjass"
       },
        "fnPerformStockUpdates": {
           "prefix": "fnPerformStockUpdates",
           "body": "PerformStockUpdates(${0:nothing})",
           "description": "fnPerformStockUpdates",
           "scope": "source.vjass"
       },
        "fnStartStockUpdates": {
           "prefix": "fnStartStockUpdates",
           "body": "StartStockUpdates(${0:nothing})",
           "description": "fnStartStockUpdates",
           "scope": "source.vjass"
       },
        "fnRemovePurchasedItem": {
           "prefix": "fnRemovePurchasedItem",
           "body": "RemovePurchasedItem(${0:nothing})",
           "description": "fnRemovePurchasedItem",
           "scope": "source.vjass"
       },
        "fnInitNeutralBuildings": {
           "prefix": "fnInitNeutralBuildings",
           "body": "InitNeutralBuildings(${0:nothing})",
           "description": "fnInitNeutralBuildings",
           "scope": "source.vjass"
       },
        "fnMarkGameStarted": {
           "prefix": "fnMarkGameStarted",
           "body": "MarkGameStarted(${0:nothing})",
           "description": "fnMarkGameStarted",
           "scope": "source.vjass"
       },
        "fnDetectGameStarted": {
           "prefix": "fnDetectGameStarted",
           "body": "DetectGameStarted(${0:nothing})",
           "description": "fnDetectGameStarted",
           "scope": "source.vjass"
       },
        "fnInitBlizzard": {
           "prefix": "fnInitBlizzard",
           "body": "InitBlizzard(${0:nothing})",
           "description": "fnInitBlizzard",
           "scope": "source.vjass"
       },
        "fnRandomDistReset": {
           "prefix": "fnRandomDistReset",
           "body": "RandomDistReset(${0:nothing})",
           "description": "fnRandomDistReset",
           "scope": "source.vjass"
       },
        "fnRandomDistAddItem": {
           "prefix": "fnRandomDistAddItem",
           "body": "RandomDistAddItem(${0:integer inChance})",
           "description": "fnRandomDistAddItem",
           "scope": "source.vjass"
       },
        "fnRandomDistChoose": {
           "prefix": "fnRandomDistChoose",
           "body": "RandomDistChoose(${0:nothing})",
           "description": "fnRandomDistChoose",
           "scope": "source.vjass"
       },
        "fnUnitDropItem": {
           "prefix": "fnUnitDropItem",
           "body": "UnitDropItem(${0:integer inItemID},${1:unit inUnit})",
           "description": "fnUnitDropItem",
           "scope": "source.vjass"
       },
        "fnWidgetDropItem": {
           "prefix": "fnWidgetDropItem",
           "body": "WidgetDropItem(${0:integer inItemID},${1:widget inWidget})",
           "description": "fnWidgetDropItem",
           "scope": "source.vjass"
       }
}
